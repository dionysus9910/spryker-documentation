<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Making Demoshop Compatible with Shop App, Atomic Design, P&amp;S</h1>
        <h2>Infrastructure Preparation</h2>
        <p class="info">This has to be done only once for Demoshop (not for every feature.)</p>
        <p>&#160;</p>
        <h2>Shop App</h2>
        <p>These steps are required to install features which use the new <a href="https://github.com/spryker-shop">shop pages and widgets</a> i.e. the shop app.</p>
        <p>&#160;</p>
        <h4>Add infrastructure modules</h4>
        <p>To use the spryker-shop modules, you need to add new modules required by infrastructure. </p>
        <p>Update all the existing modules:</p>
        <p><pre><code class="language-PHP line-numbers">composer update "spryker/*"</code></pre>
        </p>
        <p>Remove the Event-Behavior module to avoid the version constraint problems:</p>
        <p><pre><code class="language-PHP line-numbers">composer remove spryker/event-behavior</code></pre>
        </p>
        <p>Remove</p>
        <p><pre><code class="language-PHP line-numbers">$config[EventBehaviorConstants::EVENT_BEHAVIOR_TRIGGERING_ACTIVE] = false;</code></pre>
        </p>
        <p>from <var>config_default.php</var></p>
        <p>Remove</p>
        <p><pre><code class="language-PHP line-numbers">new EventBehaviorTriggerTimeoutConsole(),</code></pre>
        </p>
        <p>from <var>\Pyz\Zed\Console\ConsoleDependencyProvider</var></p>
        <p>Install the required modules for Shop-App:</p>
        <p><pre><code class="language-PHP line-numbers">composer require "spryker/kernel":"^3.24.0" spryker-shop/shop-router:"^1.0.0" <br />spryker-shop/shop-application:"^1.3.0" spryker-shop/shop-ui:"^1.0.0" --update-with-all-dependencies</code></pre>
        </p>
        <p>Install the required modules for Publish&amp;Synchronize:</p>
        <p><i>composer require spryker/availability-storage:"^1.0.0" spryker/category-page-search:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/category-storage:"^1.0.0" spryker/cms-block-category-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/cms-block-product-storage:"^1.0.0" spryker/cms-block-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/cms-page-search:"^1.0.0" spryker/cms-storage:"^1.0.0" spryker/glossary-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/navigation-storage:"^1.0.0" spryker/price-product-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/product-category-filter-storage:"^1.0.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-category-storage:"^1.0.0" spryker/product-group-storage:"^1.0.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-image-storage:"^1.0.0" spryker/product-label-search:"^1.0.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-label-storage:"^1.0.0" spryker/product-measurement-unit:"^0.2.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-measurement-unit-storage:"^0.2.0" spryker/product-option-storage:"^1.0.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-page-search:"^1.0.0" spryker/product-relation-storage:"^1.0.0"</i>
            <br style="font-style: italic;" /><i>spryker/product-review-search:"^1.0.0" spryker/product-review-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/product-search-config-storage:"^1.0.0" spryker/product-set-page-search:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/product-set-storage:"^1.0.0" spryker/product-storage:"^1.0.0" </i>
            <br style="font-style: italic;" /><i>spryker/url-storage:"^1.0.0"  spryker/product-quantity-storage:"^0.1.1" --update-with-all-dependencies</i><![CDATA[
		
		]]></p>
        <p>
            <h4>Add namespace to configuration</h4>
        </p>
        <p>To let the kernel find your files within the SprykerShop Organization namespace, you need to add SprykerShop as a new namespace to <var>Spryker\Shared\Kernel\KernelConstants::CORE_NAMESPACES in your ./config/Shared/config_default.php </var></p>
        <p class="info"><code class="language-PHP line-numbers">$config[\Spryker\Shared\Kernel\KernelConstants::CORE_NAMESPACES] = [
				'SprykerEco',
				'Spryker',
				'SprykerShop'
			];</code>
        </p>
        <p>&#160;</p>
        <h4>Add service providers</h4>
        <p>To make all the features available from the newly added Modules, you need to add the following lines to <var>Pyz\Yves\Application\YvesBootstrap::registerServiceProviders()</var> between the registration of the TwigServiceProvider and the SprykerTwigServiceProvider.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><b>Click to expand the code sample</b>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><b>src/Pyz/Yves/Application/YvesBootstrap.php</b><pre xml:space="preserve"><code class="language-PHP line-numbers">
...
use SprykerShop\Yves\ShopApplication\Plugin\Provider\ShopApplicationServiceProvider;
use SprykerShop\Yves\ShopApplication\Plugin\Provider\ShopControllerEventServiceProvider;
use SprykerShop\Yves\ShopApplication\Plugin\Provider\ShopTwigServiceProvider;
use SprykerShop\Yves\ShopApplication\Plugin\Provider\WidgetServiceProvider;
use SprykerShop\Yves\ShopApplication\Plugin\Provider\WidgetTagServiceProvider;
use SprykerShop\Yves\ShopUi\Plugin\Provider\ShopUiTwigServiceProvider;
 
class YvesBootstrap
{
	...
 
	protected function registerServiceProviders()
	{
		...
 
		$this-&gt;application-&gt;register(new TwigServiceProvider()); // existing registration
 
		$this-&gt;application-&gt;register(new ShopApplicationServiceProvider());
		$this-&gt;application-&gt;register(new ShopControllerEventServiceProvider());
		$this-&gt;application-&gt;register(new ShopTwigServiceProvider());
		$this-&gt;application-&gt;register(new WidgetServiceProvider());
		$this-&gt;application-&gt;register(new WidgetTagServiceProvider());
		$this-&gt;application-&gt;register(new ShopUiTwigServiceProvider());
 
		$this-&gt;application-&gt;register(new SprykerTwigServiceProvider()); // existing registration
 
		...
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <h4>Inherit YvesBootstrap</h4>
        <p>You need to inherit YvesBootstrap from SprykerShop\Yves\ShopApplication\YvesBootstrap</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><b>src/Pyz/Yves/Application/YvesBootstrap.php</b><pre><code class="language-PHP line-numbers">
use SprykerShop\Yves\ShopApplication\YvesBootstrap as SprykerYvesBootstrap;
 
class YvesBootstrap extends SprykerYvesBootstrap{</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <h4>Adopt routers in YvesBootstrap</h4>
        <p>You will also need to change the applied SilexRouter so that the new controllers from the SprykerShop namespace can be used.</p><pre><code class="language-PHP line-numbers">
// use Pyz\Shared\Application\Business\Routing\SilexRouter;
use SprykerShop\Yves\ShopRouter\Plugin\Router\SilexRouter;</code></pre>
        <p>&#160;</p>
        <h4>Change layout for new shop app modules</h4>
        <p>The new shop app modules use a new layout which is not supported in Demoshop. To make them compatible, you need to switch to the existing layout.</p>
        <p>Create a file <var>page-layout-main.twig</var> and add the following code.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><b>src/Pyz/Yves/ShopUi/Theme/default/templates/page-layout-main/page-layout-main.twig</b><pre><code class="language-PHP line-numbers">{% extends "@application/layout/layout.twig" %}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>Don't forget to flush the cache afterwards.</p><pre xml:space="preserve"><code class="language-PHP line-numbers">console cache:empty-all</code></pre>
        <p>&#160;</p>
        <h3>Publish &amp; Synchronize</h3>
        <p>By following this document and adjusting all the necessary changes in Demoshop, you will be able to set up the infrastructure for Publish &amp; Synchronize. If you need to learn more about any requirements needed and changes made to each particular feature, then read their own installation guides.</p>
        <p>&#160;</p>
        <h4>Add infrastructure modules</h4>
        <p>We need to adjust the composer.json to get the latest version of the storage and search modules. By executing this code you will be able to update the library you need for running Publish &amp; Synchronize</p><i>composer update "spryker/*"
composer remove spryker/event-behavior
composer require spryker/availability-storage:"^1.0.0" spryker/category-page search:"^1.0.0" spryker/category-storage:"^1.0.0" spryker/cms-block-category-storage:"^1.0.0" spryker/cms-block-product-storage:"^1.0.0" spryker/cms-block-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/cms-page-search:"^1.0.0" spryker/cms-storage:"^1.0.0" spryker/glossary-storage:"^1.0.0"</i>
        <br style="font-style: italic;" /><i>spryker/navigation-storage:"^1.0.0" spryker/price-product-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/product-category-filter-storage:"^1.0.0" spryker/product-category-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/product-group-storage:"^1.0.0" spryker/product-image-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/product-label-search:"^1.0.0" spryker/product-label-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/product-measurement-unit:"^0.2.0" spryker/product-measurement-unit-storage:"^0.2.0" </i>
        <br style="font-style: italic;" /><i>spryker/product-option-storage:"^1.0.0" spryker/product-page-search:"^1.0.0" spryker/product-relation-storage:"^1.0.0"</i>
        <br style="font-style: italic;" /><i>spryker/product-review-search:"^1.0.0" spryker/product-review-storage:"^1.0.0"</i>
        <br style="font-style: italic;" /><i>spryker/product-search-config-storage:"^1.0.0" spryker/product-set-page-search:"^1.0.0"</i>
        <br style="font-style: italic;" /><i>spryker/product-set-storage:"^1.0.0" spryker/product-storage:"^1.0.0" </i>
        <br style="font-style: italic;" /><i>spryker/url-storage:"^1.0.0"  spryker/product-quantity-storage:"^0.1.1"</i>
        <br style="font-style: italic;" /><i>--update-with-dependencies
composer require "spryker/synchronization-behavior":"^1.0.0"</i><![CDATA[
        ]]><h4>Configure the queue</h4><p>Adjust queues before you start running the cron jobs, open QueueDependencyProvider.php</p><p class="important">This only works if the queue is installed on the current server.</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>src/Pyz/Zed/Queue/QueueDependencyProvider.php</b><pre><code class="language-PHP line-numbers">namespace Pyz\Zed\Queue;
 
...
 
class QueueDependencyProvider extends SprykerDependencyProvider
{
    protected function getProcessorMessagePlugins(Container $container)
    {
        return [
            EventConstants::EVENT_QUEUE =&gt; new EventQueueMessageProcessorPlugin(),
        ];
    }
}</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>Activate cron jobs</h4><p>Add the following jobs to jobs.php:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>config/Zed/cronjobs/jobs.php</b><pre><code class="language-PHP line-numbers">$jobs[] = [
    'name' =&gt; 'queue-worker-start',
    'command' =&gt; '$PHP_BIN vendor/bin/console queue:worker:start -vvv',
    'schedule' =&gt; '* * * * *',
    'enable' =&gt; true,
    'run_on_non_production' =&gt; true,
    'stores' =&gt; $allStores,
];
 
$jobs[] = [
    'name' =&gt; 'event-trigger-timeout',
    'command' =&gt; '$PHP_BIN vendor/bin/console event:trigger:timeout -vvv',
    'schedule' =&gt; '*/5 * * * *',
    'enable' =&gt; true,
    'run_on_non_production' =&gt; true,
    'stores' =&gt; $allStores,
];</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Then restart Jenkins:</p><pre><code class="language-PHP line-numbers">vendor/bin/console setup:jenkins:generate</code></pre><h4>Config</h4><p>We need to enable event behavior in config_default.php</p><pre><code class="language-PHP line-numbers">// ---------- EventBehavior
$config[EventBehaviorConstants::EVENT_BEHAVIOR_TRIGGERING_ACTIVE] = true;</code></pre><h4>Zed</h4><p>Add <var>EventBehaviorServiceProvider</var> to all the ServiceProviders methods in <var>ApplicationDependencyProvider.php</var></p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>src/Pyz/Zed/Application/ApplicationDependencyProvider.php</b><pre><code class="language-PHP line-numbers">namespace Pyz\Zed\Application;
 
use Spryker\Zed\EventBehavior\Communication\Plugin\ServiceProvider\EventBehaviorServiceProvider;
 
class ApplicationDependencyProvider extends SprykerApplicationDependencyProvider
{
    protected function getServiceProviders(Container $container)
    {
        ...
        $providers = [
            // Add Auth service providers
            ...
            new EventBehaviorServiceProvider(),
        ];
        ...</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>Console</h4><p>Add <var>EventBehaviorPostHookPlugin</var> to the getConsolePostRunHookPlugins() method in <var>ConsoleDependencyProvider.php</var></p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>src/Pyz/Zed/Console/ConsoleDependencyProvider.php</b><pre><code class="language-PHP line-numbers">namespace Pyz\Zed\Console;
 
use Spryker\Zed\EventBehavior\Communication\Plugin\Console\EventBehaviorPostHookPlugin;
 
class ConsoleDependencyProvider extends SprykerConsoleDependencyProvider
{
 
    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return array
     */
    public function getConsolePostRunHookPlugins(Container $container)
    {
        return [
            new EventBehaviorPostHookPlugin(),
        ];
    }</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>DataImporter</h4><p>Add <var>DataImportPublisherPlugin</var> and <var>DataImportEventBehaviorPlugin</var> to Pyz\Zed\DataImport\DataImportDependencyProvider</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php</b><pre><code class="language-PHP line-numbers">use Spryker\Zed\DataImport\Communication\Plugin\DataImportEventBehaviorPlugin;
use Spryker\Zed\DataImport\Communication\Plugin\DataImportPublisherPlugin;</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Overwrite the core methods:</p><pre><code class="language-PHP line-numbers">/**
 * @return array
 */
protected function getDataImportBeforeImportHookPlugins(): array
{
    return [
        new DataImportEventBehaviorPlugin(),
    ];
}
 
/**
 * @return array
 */
protected function getDataImportAfterImportHookPlugins(): array
{
    return [
        new DataImportEventBehaviorPlugin(),
        new DataImportPublisherPlugin(),
    ];
}</code></pre><p>You can find all the changes in the following branch:</p><p><a href="https://github.com/spryker/demoshop/tree/tech/compatibility-pub-sync">https://github.com/spryker/demoshop/tree/tech/compatibility-pub-sync</a></p><h4>Collector data with P&amp;S features</h4><p>To be able to use the data structure provided by the collectors from Redis, you need to use your own module in a compatibility mode. You can simply do this by updating the <var>`ModuleStorageConfig::isCollectorCompatibilityMode()`</var> method of your storage module and return true.</p><p>&#160;</p><h2>Frontend</h2><h3>Atomic Frontend: integration guide for demoshop</h3><h4>index.js</h4><p>Append the following lines:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./assets/Yves/default/app/index.js</b><pre><code class="language-PHP line-numbers">var app = require('ShopUi/app');
app.bootstrap();</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>vendor.entry.js</h4><p>Remove the following lines:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./assets/Yves/default/vendor.entry.js</b><pre><code class="language-PHP line-numbers">// es6 promise fix (webpack 2)
require('es6-promise/auto');</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Append the following lines:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./assets/Yves/default/vendor.entry.js</b><pre><code class="language-PHP line-numbers">require('@webcomponents/webcomponentsjs/webcomponents-bundle');</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>package.js</h4><p>Update the <b>script</b> section as follows:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./package.json</b><pre><code class="language-PHP line-numbers">"scripts": {
    "yves": "node ./assets/Yves/default/build/build development",
    "yves:watch": "node ./assets/Yves/default/build/build development-watch",
    "yves:production": "node ./assets/Yves/default/build/build production",
    "zed": "node ./node_modules/@spryker/oryx-for-zed/build",
    "zed:dev": "node ./node_modules/@spryker/oryx-for-zed/build --dev",
    "zed:prod": "node ./node_modules/@spryker/oryx-for-zed/build --prod"
}</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Update the <b>engine</b> section as follows:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./package.json</b><pre><code class="language-PHP line-numbers">"engines": {
    "node": "&gt;=8.9.0",
    "npm": "&gt;=5.6.0"
}</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Update the dependencies section as follows:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./package.json</b><pre><code class="language-PHP line-numbers">"dependencies": {
    "@webcomponents/webcomponentsjs": "~2.0.2",
    "core-js": "~2.5.7",
    "font-awesome": "~4.7.0",
    "foundation-sites": "~6.3.1",
    "jquery": "~3.2.0",
    "slick-carousel": "~1.6.0",
    "lodash": "~4.17.2",
    "motion-ui": "~1.2.2",
    "jquery-bar-rating": "^1.2.2"
}</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Update the devDependencies section as follows:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./package.json</b><pre><code class="language-PHP line-numbers">"devDependencies": {
    "@spryker/oryx-for-zed": "^2.1.0",
    "autoprefixer": "~8.6.2",
    "clean-webpack-plugin": "~0.1.19",
    "copy-webpack-plugin": "~4.5.1",
    "css-loader": "~0.28.10",
    "fast-glob": "~2.2.2",
    "file-loader": "~1.1.11",
    "mini-css-extract-plugin": "~0.4.0",
    "node-sass": "~4.9.0",
    "optimize-css-assets-webpack-plugin": "~4.0.2",
    "postcss-loader": "~2.1.5",
    "sass-loader": "~7.0.3",
    "sass-resources-loader": "~1.3.3",
    "ts-loader": "~4.4.1",
    "typescript": "~2.9.1",
    "uglifyjs-webpack-plugin": "~1.2.4",
    "webpack": "~4.12.0",
    "webpack-merge": "~4.1.3"
}</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>layout.twig</h4><p>Add <var>&lt;script src="/assets/default/js/runtime.js"&gt;&lt;/script&gt; </var>to <var>&lt;head</var>&gt;:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>./src/Pyz/Yves/Application/Theme/default/layout/layout.twig</b><pre><code class="language-PHP line-numbers">&lt;script src="/assets/default/js/runtime.js"&gt;&lt;/script&gt;
&lt;link rel="stylesheet" href="/assets/default/css/vendor.css" /&gt;
&lt;link rel="stylesheet" href="/assets/default/css/app.css" /&gt;</code></pre></MadCap:dropDownBody></MadCap:dropDown><p>Add <var>&lt;script src="/assets/default/js/es6-polyfill.js"&gt;&lt;/script&gt;</var> at the very bottom of your page, before app and vendor js:</p><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot style="font-weight: bold;"><b>Click to expand the code sample</b></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><b>/package.json</b><pre><code class="language-PHP line-numbers">&lt;script src="/assets/default/js/es6-polyfill.js"&gt;&lt;/script&gt;
&lt;script src="/assets/default/js/vendor.js"&gt;&lt;/script&gt;
&lt;script src="/assets/default/js/app.js"&gt;&lt;/script&gt;</code></pre></MadCap:dropDownBody></MadCap:dropDown><h4>Delete build folder</h4><p>Delete the <var>./assets/Yves/default/build/</var> folder</p><h4>Add new files</h4><p>Copy the contents of <a href="../Resources/Documents/integration.zip">integration.zip</a> into your project according to the folder structure defined in the zip file.</p><h4>Fix the assets/Yves/default/build/settings.js file</h4><p>Replace</p><pre><code class="language-PHP line-numbers">// define relative urls to site host (/)
const urls = {
    // assets base url
    assets: '/assets'
};</code></pre><p>to</p><pre><code class="language-PHP line-numbers">// define relative urls to site host (/)
const urls = {
    // assets base url
    assets: '/assets/default'
};</code></pre><h4>Run the installation script</h4><pre><code class="language-PHP line-numbers">install -s frontend
console cache:empty-all</code></pre><p>&#160;</p><p><b>See also:</b></p><ul><li><a href="twig-compatibility-mode-demoshop-vs-suite.htm">Using SCOS Twig templates in the Legcay Demoshop</a></li><li><a href="demoshop-to-atomic-frontend.htm">Migrating from the Legacy Demoshop to Atomic Frontend</a></li><li><a href="setting-up-shopuicompatibility.htm">Setting up ShopUiCompatibility Module in the Legacy Demoshop</a></li></ul><p>&#160;</p><p><i>Last review date: November 1st, 2018</i><MadCap:conditionalText MadCap:conditions="General.Hidden Comment">by René Klatt, Tamás Nyulas, Dmitry Beirak</MadCap:conditionalText></p></body>
</html>