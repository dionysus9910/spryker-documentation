<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2C,Spryker.B2B">
    <head>
    </head>
    <body>
        <h1>Navigation Module Version 1.* <img src="../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../Resources/Images/shoptype/B2C_Shop.png" /></h1>
        <p MadCap:conditions="General.Hidden Comment">Used to be: http://spryker.github.io/core/bundles/navigation/</p>
        <MadCap:relatedTopics target="_self" style="mc-label: 'Versions';mc-help-control-display: list;">
            <MadCap:relatedTopic src="module-navigation.htm" />
        </MadCap:relatedTopics>
        <h2>Overview</h2>
        <p>The <var>Navigation</var> module manages multiple navigation menus that can be displayed on the frontend (Yves). Every navigation section can contain its own nested structure of navigation nodes. Navigation nodes have types that help define what kind of link they represent.</p>
        <p>The following node types are available:</p>
        <ul>
            <li class="bullet_list"><strong>Label</strong>: These nodes do not link to any specific URL, they are used for grouping other nodes.</li>
            <li class="bullet_list"><strong>Category</strong>: Nodes can be assigned to category node URLs.</li>
            <li class="bullet_list"><strong>CMS Page</strong>: Nodes can be assigned to CMS page URLs.</li>
            <li class="bullet_list"><strong>Link</strong>: These nodes link to internal pages in Yves, i.e. login, registration, etc.</li>
            <li class="bullet_list"><strong>External URL</strong>: These nodes link to external URLs (typically tabs opened in a new browser).</li>
        </ul>
        <p>You can control and adjust Navigation node appearance and add icons by assigning custom CSS classes to them.</p>
        <p>This feature is shipped with three modules:</p>
        <ul>
            <li class="bullet_list"><![CDATA[
]]><strong>Navigation module</strong> provides database structure and a public API to manage what’s in the database. It also provides a small toolkit for rendering navigation menus in the frontend.</li>
            <li class="bullet_list"><strong>NavigationGui</strong> module provides a Zed UI to manage navigation menus.</li>
            <li class="bullet_list"><strong>NavigationCollector</strong> module provides full collector logic for exporting navigation menus to the KV storage (Redis).</li>
        </ul>
        <h2>
            <MadCap:annotation MadCap:createDate="2018-09-19T14:05:28.1096284+03:00" MadCap:creator="oksana.karasyova" MadCap:initials="OK" MadCap:comment="move to integration project" MadCap:editor="oksana.karasyova" MadCap:editDate="2018-09-19T14:05:34.3817095+03:00">Feature Integration</MadCap:annotation>
        </h2>
        <h3>Prerequisites
		</h3>
        <p>To prepare your project to work with Navigation:

</p>
        <ol>
            <li>Require the Navigation modules in your <var>composer.json</var>.
</li>
            <li>Install the new database tables by running <var>vendor/bin/console propel:diff</var>. Propel will generate a migration file with the changes.
</li>
            <li>Apply the database changes: run <var>vendor/bin/console propel:migrate</var>.
</li>
            <li>Generate ORM models: run v<var>endor/bin/console propel:model:build</var>.
</li>
            <li>After running this command you’ll find some new classes in your project under <var>`\Orm\Zed\Navigation\Persistence`</var> namespace. </li>
        </ol>
        <p>It’s important to make sure that they extend the base classes from the Spryker core, e.g.:

</p>
        <ul>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigation</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigation</var>
            </li>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigationNode</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigationNode</var>
            </li>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigationNodeLocalizedAttributes</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigationNodeLocalizedAttributes</var>
            </li>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigationQuery</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigationQuery</var>
            </li>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigationNodeQuery</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigationNodeQuery</var>
            </li>
            <li class="bullet_list"><var>\Orm\Zed\Navigation\Persistence\SpyNavigationNodeLocalizedAttributesQuery</var><strong> extends </strong><var>\Spryker\Zed\Navigation\Persistence\Propel\AbstractSpyNavigationNodeLocalizedAttributesQuery</var>
            </li>
        </ul>
        <ol start="6">
            <li>Run <var>vendor/bin/console transfer:generate</var> to get the new transfer objects.
</li>
            <li>Make sure that the new Zed UI assets are also prepared for use by running the <code>npm run zed</code> command (or <var>antelope build zed </var>for older versions).
</li>
            <li>To make the navigation management UI available in zed navigation, run <var>vendor/bin/console application:build-navigation-cache</var> command.
</li>
            <li>Activate the navigation menu collector by adding the <var>NavigationMenuCollectorStoragePlugin</var> to the storage collector plugin stack, see example below:
</li>
        </ol><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Zed\Collector;

use Spryker\Shared\Navigation\NavigationConfig;
use Spryker\Zed\Kernel\Container;
use Spryker\Zed\NavigationCollector\Communication\Plugin\NavigationMenuCollectorStoragePlugin;
// ...

class CollectorDependencyProvider extends SprykerCollectorDependencyProvider
{
    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return \Spryker\Zed\Kernel\Container
     */
    public function provideBusinessLayerDependencies(Container $container)
    {
        // ...
       
        $container[self::STORAGE_PLUGINS] = function (Container $container) {
            return [
                // ...
                NavigationConfig::RESOURCE_TYPE_NAVIGATION_MENU =&gt; new NavigationMenuCollectorStoragePlugin(),
            ];
        };
        
        // ...
    }
}
</code></pre>
        <h3>Data Setup
</h3>
        <p>You should now be able to manage navigation menus from Zed UI, and the collectors should also be able to export the navigation menus to the KV storage. This is a good time to implement an installer in your project to install a selection of frequently used navigation menus. <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><MadCap:conditionalText MadCap:conditions="Spryker.DemoShop">Check out our <a href="https://github.com/spryker/demoshop" target="_blank">Demoshop implementation</a> for examples and ideas.
</MadCap:conditionalText><![CDATA[
]]></MadCap:conditionalText></p>
        <h3>
            <MadCap:annotation MadCap:createDate="2018-09-10T13:14:00.7806035+03:00" MadCap:creator="oksana.karasyova" MadCap:initials="OK" MadCap:comment="Add usage for Suite\r\n" MadCap:editor="oksana.karasyova" MadCap:editDate="2018-09-10T13:14:24.5827414+03:00">Usage in Yves</MadCap:annotation><![CDATA[
]]></h3>
        <p>The KV storage should by now have some navigation menus we can display in our frontend.

</p>
        <p>The Navigation module ships with a twig extension that provides the <var>spyNavigation() </var>twig function which renders a navigation menu.

</p>
        <p><var>spyNavigation()</var> accepts two parameters:
</p>
        <ul>
            <li class="bullet_list"><![CDATA[
]]><strong>$navigationKey</strong>: Reference of a navigation menu by its <var>key </var>field (i.e. <var>"MAIN_NAVIGATION"</var>).
</li>
            <li class="bullet_list"><strong>$template</strong>: Template path used to render the navigation menu (i.e. <var>"@application/layout/navigation/main.twig"</var>).
</li>
        </ul>
        <p>To enable the navigation twig function register <var>\Spryker\Yves\Navigation\Plugin\Provider\NavigationTwigServiceProvider</var> in your application’s bootstrap.

</p><pre><code class="language-PHP line-numbers">&lt;?php

namespace Pyz\Yves\Application;

use Spryker\Yves\Navigation\Plugin\Provider\NavigationTwigServiceProvider;
// ...

class YvesBootstrap
{
    /**
     * @return void
     */
    protected function registerServiceProviders()
    {
        // ...
        $this-&gt;application-&gt;register(new NavigationTwigServiceProvider());
    }
}
</code></pre>
        <p>Example, of rendering navigation in a yves twig template:
</p><pre><code class="language-PHP line-numbers">{{ spyNavigation('MAIN_NAVIGATION', '@application/layout/navigation/main.twig') }}
</code></pre>
        <h3>Rendering Navigation Templates
</h3>
        <p>The templates used to render a navigation menu, use the navigationTree template variable to traverse the <var>navigation tree</var>. The variable contains an instance of <var>\Generated\Shared\Transfer\NavigationTreeTransfer </var>with only one localized attribute per node for the current locale.

</p>
        <p>The following code examples show the Demoshop implementation of how to render <var>MAIN_NAVIGATION</var> which is a multi-level navigation menu. For styling we used the <a href="http://foundation.zurb.com/sites/docs/menu.html" target="_blank">Menu</a> and <a href="http://foundation.zurb.com/sites/docs/dropdown.html" target="_blank">Dropdown</a> components from Foundation framework.
</p>
        <p>
In <var>Pyz/Yves/Application/Theme/default/layout/navigation/main.twig</var> we traverse the root navigation nodes of the navigation tree and for each root node we render their children nodes as well.

</p><pre><code class="language-PHP line-numbers">&lt;div class="callout show-for-large"&gt;
    &lt;div class="row"&gt;
        &lt;div class="large-12 columns"&gt;
            &lt;ul class="menu"&gt;
                {% for node in navigationTree.nodes %}
                    {% embed '@Application/layout/navigation/_partials/base-node.twig' %}
                        {% block url %}
                            &lt;li {% if node.children|length %}data-toggle="navigation-node-{{ node.navigationNode.idNavigationNode }}-children"{% endif %} class="{{ class }}"&gt;
                                &lt;a href="{{ url }}"&gt;{{ title }}&lt;/a&gt;
                            &lt;/li&gt;
                        {% endblock %}

                        {% block link %}
                            &lt;li {% if node.children|length %}data-toggle="navigation-node-{{ node.navigationNode.idNavigationNode }}-children"{% endif %} class="{{ class }}"&gt;
                                &lt;a href="{{ link  }}"&gt;{{ title }}&lt;/a&gt;
                            &lt;/li&gt;
                        {% endblock %}

                        {% block externalUrl %}
                            &lt;li {% if node.children|length %}data-toggle="navigation-node-{{ node.navigationNode.idNavigationNode }}-children"{% endif %} class="{{ class }}"&gt;
                                &lt;a href="{{ externalUrl }}" target="_blank"&gt;{{ title }}&lt;/a&gt;
                            &lt;/li&gt;
                        {% endblock %}

                        {% block other %}
                            &lt;li {% if node.children|length %}data-toggle="navigation-node-{{ node.navigationNode.idNavigationNode }}-children"{% endif %} class="menu-text {{ class }}"&gt;
                                {{ title }}
                            &lt;/li&gt;
                        {% endblock %}
                    {% endembed %}
                {% endfor %}
            &lt;/ul&gt;

            {% for node in navigationTree.nodes %}
                {% if node.navigationNode.isActive %}
                    {% if node.children|length %}
                        &lt;div class="dropdown-pane" id="navigation-node-{{ node.navigationNode.idNavigationNode }}-children" data-dropdown data-hover="true" data-hover-pane="true"&gt;
                            {% include '@Application/layout/navigation/_partials/nodes.twig' with {nodes: node.children} %}
                        &lt;/div&gt;
                    {% endif %}
                {% endif %}
            {% endfor %}
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>
        <p>The children nodes are rendered recursively by <var>Pyz/Yves/Application/Theme/default/layout/navigation/_partials/nodes.twig</var>.

</p><pre><code class="language-PHP line-numbers">&lt;ul class="vertical menu {% if nested|default(false) %}nested{% endif %}"&gt;
    {% for node in nodes %}
        {% embed '@Application/layout/navigation/_partials/base-node.twig' %}
            {% block nodeContainer %}
                &lt;li id="navigation-node-{{ node.navigationNode.idNavigationNode }}" data-id-navigation-node="{{ node.navigationNode.idNavigationNode }}" class="{{ class }}"&gt;
                    {{ parent() }}

                    {% if node.children|length %}
                        {% include '@Application/layout/navigation/_partials/nodes.twig' with {nodes: node.children, nested:true} %}
                    {% endif %}
                &lt;/li&gt;
            {% endblock %}

            {% block url %}
                &lt;a href="{{ url }}"&gt;{{ title }}&lt;/a&gt;
            {% endblock %}

            {% block link %}
                &lt;a href="{{ link }}"&gt;{{ title }}&lt;/a&gt;
            {% endblock %}

            {% block externalUrl %}
                &lt;a href="{{ externalUrl }}" target="_blank"&gt;{{ title }}&lt;/a&gt;
            {% endblock %}

            {% block other %}
                &lt;span class="menu-text"&gt;{{ title }}&lt;/span&gt;
            {% endblock %}
        {% endembed %}
    {% endfor %}
&lt;/ul&gt;
</code></pre>
        <p>To prevent code duplication we implemented the <var>Pyz/Yves/Application/Theme/default/layout/navigation/_partials/base-node.twig</var> template which we use to render a node by embedding it in the templates above.

</p><pre><code class="language-PHP line-numbers">{% set class = node.navigationNode.navigationNodeLocalizedAttributes[0].cssClass %}
{% set url = node.navigationNode.navigationNodeLocalizedAttributes[0].url %}
{% set externalUrl = node.navigationNode.navigationNodeLocalizedAttributes[0].externalUrl %}
{% set link = node.navigationNode.navigationNodeLocalizedAttributes[0].link %}
{% set title = node.navigationNode.navigationNodeLocalizedAttributes[0].title %}

{% if node.navigationNode.isActive %}
    {% block nodeContainer %}
        {% if url %}
            {% block url %}{% endblock %}
        {% elseif link %}
            {% block link %}{% endblock %}
        {% elseif externalUrl %}
            {% block externalUrl %}{% endblock %}
        {% else %}
            {% block other %}{% endblock %}
        {% endif %}
    {% endblock %}
{% endif %}
</code></pre>
        <h2>Under the Hood</h2>
        <h3>Database Schema
		</h3>
        <p>The Navigation module provides the <var>spy_navigation</var> table that stores navigation menus. They have a <var>name </var>field which is only used for backend display and they also have a <var>key </var>field used to reference the navigation menus from yves.
		</p>
        <p>
			Every navigation entity contains some nodes stored in the <var>spy_navigation_node</var> table. The structure of the navigation tree depends on the <var>fk_parent_navigation_node</var> and the <var>position </var>fields which define if a node has a parent on its level, in what position they are ordered.

			Each navigation node has attributes that can be different per displayed locale. This information is stored in the <var>spy_navigation_node_localized_attributes</var> table.
		</p>
        <p><![CDATA[
		]]><img src="../../Resources/Images/navigation_db_schema_1_0.png" title="Click Me" alt="Navigation Database Schema" class="Thumbnail" /></p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="mg-navigation.htm">Migration Guide - Navigation Module</a>
            </li>
            <li><a href="../../Developing with Spryker/Module Guide/Navigation/navigation.htm">Navigation 2.*</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last review date: Sep. 21st, 2017 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Karoly Gerner</i><![CDATA[
]]></MadCap:conditionalText>
        </p>
    </body>
</html>