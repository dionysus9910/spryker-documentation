<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2B,Spryker.B2C,Spryker.DemoShop">
    <head><title>CMS Extension Points | Spryker</title>
        <meta name="description" content="The CMS module provides an extension point for post activation and deactivation of CMS pages." />
    </head>
    <body>
        <h1>CMS Extension Points <img src="../../../resources/images/shoptype/B2B_Shop.png" /> <img src="../../../resources/images/shoptype/B2C_Shop.png" /> <img src="../../../resources/images/shoptype/Demoshop.png" /></h1>
The CMS module provides an extension point for post activation and deactivation of CMS pages. The plugin interface set for this extension point is as follows:
<pre><code class="language-PHP line-numbers">
namespace Spryker\Zed\Cms\Communication\Plugin;

use Generated\Shared\Transfer\CmsPageTransfer;

interface PostCmsPageActivatorPluginInterface
{
    /**
     * Specification:
     * - Runs after the CMS activator class functions (activate and deactivate)
     *
     * @api
     *
     * @param \Generated\Shared\Transfer\CmsPageTransfer $cmsPageTransfer
     *
     * @return void
     */
    public function execute(CmsPageTransfer $cmsPageTransfer);
}</code></pre></p>
        <p>For example, Navigation is connected with activation and deactivation of CMS pages, so there is a plugin in the <var>CmsNavigationConnector</var> module that is called <var>PostCmsPageActivatorNavigationPlugin</var>.</p>
        <p>It implements the interface as follows:
<pre><code class="language-PHP line-numbers">namespace Spryker\Zed\CmsNavigationConnector\Communication\Plugin;

use Generated\Shared\Transfer\CmsPageTransfer;
use Spryker\Zed\Cms\Communication\Plugin\PostCmsPageActivatorPluginInterface;
use Spryker\Zed\Kernel\Communication\AbstractPlugin;

/**
 * @method \Spryker\Zed\CmsNavigationConnector\Business\CmsNavigationConnectorFacadeInterface getFacade()
 * @method \Spryker\Zed\CmsNavigationConnector\Communication\CmsNavigationConnectorCommunicationFactory getFactory()
 */
class PostCmsPageActivatorNavigationPlugin extends AbstractPlugin implements PostCmsPageActivatorPluginInterface
{
    /**
     * @param \Generated\Shared\Transfer\CmsPageTransfer $cmsPageTransfer
     *
     * @return void
     */
    public function execute(CmsPageTransfer $cmsPageTransfer)
    {
        $this-&gt;getFacade()-&gt;updateCmsPageNavigationNodesIsActive($cmsPageTransfer);
    }
}</code></pre></p>
        <p>And then in the <var>CmsDependencyProvider</var>, in the function <var>getCmsPagePostActivatorPlugins</var>, you can register this plugin (or any plugin implementing the above interface) for it to execute post activation or deactivation of CMS pages.</p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="cms-page.htm">Get a general idea of what a CMS page is</a>
            </li>
            <li><a href="content-fields-max-size.htm">Define maximum size of content fields</a>
            </li>
            <li><a href="../mg-cms.htm">Migrate to a newer version of CMS module</a>
            </li>
            <li><a href="../mg-cms-collector.htm">Migrate to a newer version of CMS collector</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last review date: Jan. 22nd, 2017
</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Ahmed Sabaa</i><![CDATA[  ]]></MadCap:conditionalText>
        </p>
    </body>
</html>
