<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2B,Spryker.B2C,Spryker.ShopSuite">
    <head>
        <link href="../../../Resources/TableStyles/VerticalTable.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Sales 5.0 <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../Resources/Images/shoptype/MasterSuite.png" /> <img src="../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <p MadCap:conditions="General.Hidden Comment">used to be: http://spryker.github.io/core/bundles/sales/</p>
        <p>
            <MadCap:relatedTopics target="_self" style="mc-label: 'Verisons';mc-help-control-display: list;mc-use-custom-sort-order: true;">
                <MadCap:relatedTopic src="sales.htm" />
            </MadCap:relatedTopics>
        </p>
        <p class="important">The latest version of this module can be found here <MadCap:xref href="sales.htm">Sales</MadCap:xref></p>
        <h2>Getting Totals for Order</h2>
        <p>Spryker does not store order grand total or subtotal amounts; all amounts are stored before calculation, order items store single item gross amounts, discounts store single item discount amount.</p>
        <p>To get the discount total there is a facade method <var>SalesFacade::getOrderTotalsByIdSalesOrder()</var> for order level which will return <var>OrderTransfer</var> with aggregated grandTotal, subtotals, expenses, discounts and another is item level <var>SalesFacade:getOrderItemTotalsByIdSalesOrderItem()</var> which returns <var>ItemTransfer</var> single item amounts.</p>
        <h2>Order Aggregator</h2>
        <p>As there are no totals stored, those amounts should be retrieved (aggregated) from different places of the system. Like discount module, product option module, sales module etc. This aggregation is provided by specialized plugins. Each plugin has to implemented. <var>OrderTotalsAggregatePluginInterface</var> and work with <var>OrderTransfer</var> data object. Plugins are registered in the Sales module’s <var>SalesDependencyProvider::getItemAmountAggregationPlugins()</var> and <var>SalesDependencyProvider::getOrderAmountAggregationPlugins()</var> method.</p>
        <p>There is already list of plugins implemented.</p>
        <table class="TableStyle-VerticalTable" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/VerticalTable.css');" cellspacing="0">
            <col class="TableStyle-VerticalTable-Column-Column1" />
            <col class="TableStyle-VerticalTable-Column-Column2" />
            <tbody>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Expense total aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates expense total amount; reads data from sales_expense and stores it into <var>TotalsTransfer:expenseTotal</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Order expenses with discounts aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates expense amounts after discounts and stores it into <var>ExpenseTransfer:unitGrossPriceWithDiscounts</var> and <var>ExpenseTransfer:sumGrossPriceWithDiscounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Order expense tax amount aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates tax amount and store into <var>ExpenseTransfer::unitTaxAmount</var> and <var>ExpenseTransfer::sumTaxAmount</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Order expense tax with discounts aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates tax amount after discounts and stores it into <var>ExpenseTransfer::unitTaxAmountWithDiscounts</var> and <var>ExpenseTransfer::sumTaxAmountWithDiscounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Item gross price aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates item gross price amount into <var>ItemTransfer::unitGrossPrice</var> and <var>ItemTransfer::sumGrossPrice</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Product options gross price aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates item gross price with product options into <var>ItemTransfer::unitGrossPriceWithProductOptions</var>, <var>ItemTransfer::sumGrossPriceWithProductOptions</var> and set <var>ItemTransfer::refundableAmounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Subtotal order aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates subtotal by adding all <var>ItemTransfer::sumGrossPrice</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Subtotal with product options aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates subtotal by adding all <var>ItemTransfer::sumGrossPriceWithProductOptions</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Item discounts order aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates discounts from sales_discount table; stores them into <var>unitGrossPriceWithDiscounts</var>, <var>sumGrossPriceWithDiscounts</var> for all discountable items.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Product option discounts aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates discounts for items with product options from sales_discount table into <var>ItemTransfer::unitGrossPriceWithProductOptionAndDiscountAmounts</var>, <var>ItemTransfer::sumGrossPriceWithProductOptionAndDiscountAmounts</var>, <var>ItemTransfer:refundableAmount</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Discount total amount aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates total discount amount used for current order; stores it in <var>TotalTransfer:discountTotal</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Discount total amount with product options aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates total discount amount with product option discounts and stores it into <var>TotalTransfer:discountTotal</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Order discount aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates all discounts used in current order and stores it into <var>OrderTransfer::calculatedDiscounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Order discounts with product options aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates all discounts with product options used in current order and stores it into <var>OrderTransfer::calculatedDiscounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Grand total aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Aggregates order grandTotal by calculating <var>TotalTransfer::grandTotal = TotalTransfer::subTotal + TotalTransfer::expenseTotal</var></p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Order grand total with discounts aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Aggregates order grandTotal by calculating <var>TotalTransfer::grandTotal = TotalTransfer::subTotal + TotalTransfer::expenseTotal - TotalsTransfer:discountTotal</var></p>
                        <p>&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Item tax amount aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Calculates tax rate for each and stores it into <var>ItemTransfer::unitTaxAmount</var>, <var>ItemTransfer::sumTaxAmount</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body2"><strong>Item tax with discounts aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body2">
                        <p>Calculates tax rate for items with product options <var>ItemTransfer::unitTaxAmountWithDiscounts</var>, <var>ItemTransfer::sumTaxAmountWithDiscounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body1">
                    <td class="TableStyle-VerticalTable-BodyE-Column1-Body1"><strong>Items with product options and discounts tax aggregator plugin (item level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyD-Column2-Body1">
                        <p>Calculates tax rate for items with product options and after discounts and stores it into <var>ItemTransfer::unitTaxAmountWithProductOptionAndDiscountAmounts</var>, <var>ItemTransfer::sumTaxAmountWithProductOptionAndDiscountAmounts</var>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-VerticalTable-Body-Body2">
                    <td class="TableStyle-VerticalTable-BodyB-Column1-Body2"><strong>Order tax amount with product options and discounts aggregator plugin (order level)</strong>
                    </td>
                    <td class="TableStyle-VerticalTable-BodyA-Column2-Body2">
                        <p>Stores tax rate and tax amount from grandTotal into <var>TaxTotalTransfer::taxRate</var>, <var>TaxTotalTransfer::amount</var>.</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>