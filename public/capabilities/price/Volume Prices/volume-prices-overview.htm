<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2B,Spryker.ShopSuite,Spryker.MultiStore,Spryker.MultiLanguage,Spryker.MultiCurrency">
    <head>
        <link href="../../../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>Volume Prices Feature Overview | Spryker</title>
        <meta name="description" content="Volume pricing helps the merchants to gain the commitment of the customers. Providing volume discounts results in increasing the placement of large orders." />
    </head>
    <body>
        <h1>Volume Prices Feature Overview <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/MasterSuite.png" /></h1>
        <p>
            <MadCap:popup>
                <MadCap:popupHead>ML</MadCap:popupHead>
                <MadCap:popupBody>Multi-language</MadCap:popupBody>
            </MadCap:popup> <MadCap:popup><MadCap:popupHead>MS</MadCap:popupHead><MadCap:popupBody>Multi-store</MadCap:popupBody></MadCap:popup> <MadCap:popup><MadCap:popupHead>MC</MadCap:popupHead><MadCap:popupBody>Multi-currency</MadCap:popupBody></MadCap:popup></p>
        <p>In highly competitive markets, the business tactic is made compelling by issuing drastic discounts when buying products in large quantities or volumes.</p>
        <p>Volume pricing helps the merchants to gain the commitment of the customers. Providing volume discounts result in increasing the placement of large orders with the small ones. Large orders are preferred as they reduce the expenses incurred by the company.</p>
        <p>Such incentives allow a business company to purchase additional inventory at a reduced cost and allow sellers or manufacturers to reduce the products by selling more units and increase their revenues per transaction.</p>
        <p>The schema below illustrates the connection between <var>spy_price_product_store</var> table links <var>spy_price_product_merchant_relationship</var> with the <var>spy_currency</var> and <var>spy_store</var> tables.</p>
        <p>
            <img src="../../../Resources/Images/volume-prices-dbschema.png" style="max-width: 70%;">
            </img>
        </p>
        <p><var>price_data</var> in <var>spy_price_product_store</var> table contains a JSON with prices per mode, currency and type. </p>
        <p class="info">("price_data") field is a JSON with attributes such as volume prices, merchant prices, customer prices and then a specific set of prices inside its price type (["QTY" =&gt; 10, "GROSS(DEFAULT)" =&gt; 100, "NET(DEFAULT)" =&gt; 90]).</p>
        <p> You can find the example of the JSON below:</p><pre><code class="language-json line-numbers">[
	"EUR" =&gt; [
		"GROSS_MODE" =&gt; [
		"DEFAULT" =&gt; 9999,
		"ORIGINAL" =&gt; 12564,
	],
		"NET_MODE" =&gt; [
		"DEFAULT" =&gt; 8999,
		"ORIGINAL" =&gt; 11308,
	],
 
		"price_data" =&gt; ["QTY" =&gt; 10, "GROSS(DEFAULT)" =&gt; 100, "NET(DEFAULT)" =&gt; 90], ["QTY" =&gt; 20, "GROSS(DEFAULT)" =&gt; 90, "NET(DEFAULT)" =&gt; 80]
	],
		"CHF" =&gt; [
		"GROSS_MODE" =&gt; [
		"DEFAULT" =&gt; 11499,
		"ORIGINAL" =&gt; 14449,
		],
		"NET_MODE" =&gt; [
		"DEFAULT" =&gt; 10349,
		"ORIGINAL" =&gt; 13004,
		],
	],
],</code></pre>
        <p>Volume prices are configured per store and per currency and a Store Administrator can set volume prices for every locale.</p>
        <p>Volume prices are set for both gross and net mode and are either inherited from the abstract product or specified directly for a standalone concrete product. </p>
        <p class="info">The concrete product can also have its own volume prices different from its abstract (if they are explicitly defined per <var>concrete_sku</var>).</p>
        <p>A specific volume price for a concrete product has a higher priority over an inherited one from its abstract product.</p>
        <p>The volume prices are imported using <a href="https://github.com/spryker/spryker/blob/master/Bundles/PriceProductDataImport/data/import/product_price.csv">data importer</a>. The JSON with volume prices is added to <var>price_data.volume_prices</var> column as shown in the example:</p>
        <p>
            <img src="../../../Resources/Images/volume-prices-csv.png">
            </img>
        </p>
        <p>After the import is completed the volume prices are shown on the product detail page:</p>
        <p>
            <img src="../../../Resources/Images/volume-prices-pdp.png" style="max-width: 70%;">
            </img>
        </p>
        <p>Once the product is added to the shopping list or to the cart, the item price corresponding to the volume price is displayed for that quantity. If the user increases or decreases the quantity in cart (but not in shopping list since here we don't really change quantities), the price is updated once the user goes over or under a threshold defined by the volume prices.</p>
        <h2>Threshold</h2>
        <p>Volume pricing is applied when a certain threshold is reached. </p>
        <p>Threshold is a minimum value that serves as a benchmark/boundary for a discounted price when the product is dependent on the volume (e.g. the number of units of the product) bought. </p>
        <p class="info">This means that if you buy more quantity of products or sometimes may be group of products, you would get discount based on the volume of purchase. All of the individual products exceeding the threshold will receive the special price.</p>
        <p>The volume price is applicable only if the shopper exceeds a certain quantity threshold - the number of units the customer chooses to buy. </p>
        <p>The following table illustrates a typical volume pricing model:</p>
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
            <col class="TableStyle-PatternedRows2-Column-Regular">
            </col>
            <col class="TableStyle-PatternedRows2-Column-Regular">
            </col>
            <col class="TableStyle-PatternedRows2-Column-Regular">
            </col>
            <thead>
                <tr class="TableStyle-PatternedRows2-Head-Header1">
                    <td class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Quantity of products</td>
                    <td class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Price per products</td>
                    <td class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Total Price</td>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">1</td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">$100</td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">$100</td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">5</td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">$70</td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">$350</td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">10</td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">$50</td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">$500</td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">20</td>
                    <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">$40</td>
                    <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">$800</td>
                </tr>
            </tbody>
        </table>
        <p>The new price will go into effect after 5 units are purchased and only apply to the units beyond that threshold. The buyer would still pay full price for the first 5 units they procured. </p>
        <p class="example">If the customer selects five, each unit will cost $70. If the customer selects 12, each unit will cost $50.</p>
        <p>Volume prices can also mean higher prices per item at increasing thresholds.</p>
        <p class="example">That is a particular case of electricity bills where you pay more if you use more.
</p>
        <p>Should you have any questions - feel free to post the related issues in the <a href="https://discuss.spryker.com/c/integration-issues">forum</a>.</p>
        <p>&#160;</p>
        <p><i>Last review date: Feb 8, 2019 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Ahmed Sabaa, Anastasija Datsun</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>