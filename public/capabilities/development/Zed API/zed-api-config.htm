<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite">
    <head>
    </head>
    <body>
        <h1>Zed API Configuration <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../Resources/Images/shoptype/MasterSuite.png" /> <img src="../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <p>First of all we need to decide on the resources being exposed. Those will be mapped inside the <var>ApiDependencyProvider</var>:

</p><pre><code class="language-PHP line-numbers">&lt;?php
use Spryker\Zed\CustomerApi\Communication\Plugin\Api\CustomerApiResourcePlugin;
use Spryker\Zed\ProductApi\Communication\Plugin\Api\ProductApiResourcePlugin;

    /**
     * @return \Spryker\Zed\Api\Dependency\Plugin\ApiResourcePluginInterface[]
     */
    protected function getApiResourcePluginCollection()
    {
        return [
            new CustomerApiResourcePlugin(),
            new ProductApiResourcePlugin(),
            ...
        ];
    }
</code></pre>
        <p>Each resource plugin contains a <var>getResourceName()</var> which will map to the resource name of the URI. Those can also be versioned or customized if necessary.

</p>
        <p>Example: If you create a <var>CustomerApiResourcePlugin</var> containing <var>customer-groups</var> as resource name, the API resource URL is then API prefix (<var>/api/rest/</var>) + resource name, in this case /<var>api/rest/customer-groups</var>.

</p>
    </body>
</html>