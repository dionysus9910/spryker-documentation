<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2B,Spryker.B2C">
    <head>
    </head>
    <body>
        <h1>File System API <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /></h1>
        <MadCap:menuProxy style="mc-toc-depth: 3;mc-context-sensitive: True;mc-include-parent: True;mc-include-siblings: True;mc-include-children: True;" mc-linked-toc="$topicHeadings" />
        <h2>Read API</h2>
        <h3> getMetadata(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Return <var>FileSystemResourceMetadataTransfer</var>, null on failure</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$metadataTransfer = $fileSystemService-&gt;getMetadata($fileSystemQueryTransfer);</code></pre>
        <h3> getMimeType(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Return resource mimetype, false on failure</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$mimeType = $fileSystemService-&gt;getMimeType($fileSystemQueryTransfer);</code></pre>
        <h3>getTimestamp(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Return resource timestamp, false on failure</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$timestamp = $fileSystemService-&gt;getTimestamp($fileSystemQueryTransfer);</code></pre>
        <h3> getSize(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Return resource size, false on failure</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$size = $fileSystemService-&gt;getSize($fileSystemQueryTransfer);</code></pre>
        <h3> isPrivate($filesystemName, $path)</h3>
        <p>Check if resource has private access rights.</p>
        <p>Return true if resource has private access rights.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$isPrivate = $fileSystemService-&gt;isPrivate($fileSystemQueryTransfer);</code></pre>
        <h3>read(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Read file.</p>
        <p>Return file content, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$content = $fileSystemService-&gt;read($fileSystemQueryTransfer);</code></pre>
        <h3>listContents(FileSystemListTransfer $fileSystemListTransfer)</h3>
        <p>List contents under a path.</p>
        <p>Return array of `FileSystemResourceTransfer` objects located under given path.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemListTransfer = new FileSystemListTransfer();
$fileSystemListTransfer-&gt;setFileSystemName('media');
$fileSystemListTransfer-&gt;setPath('/');
$fileSystemListTransfer-&gt;setRecursive(true);

$resourceList = $fileSystemService-&gt;listContents($fileSystemListTransfer);</code></pre>
        <h3> has(FileSystemQueryTransfer $fileSystemQueryTransfer)</h3>
        <p>Check if resource exists.</p>
        <p>Return true if resource exist, false otherwise.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemQueryTransfer = new FileSystemQueryTransfer();
$fileSystemQueryTransfer-&gt;setFileSystemName('media');
$fileSystemQueryTransfer-&gt;setPath('/foo/bar.jpg');

$has = $fileSystemService-&gt;has($fileSystemQueryTransfer);</code></pre>
        <h2>Write API</h2>
        <h3>markAsPrivate(FileSystemVisibilityTransfer $fileSystemVisibilityTransfer)</h3>
        <p>Mark resource with private access rights.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemVisibilityTransfer = new FileSystemVisibilityTransfer();
$fileSystemVisibilityTransfer-&gt;setFileSystemName('media');
$fileSystemVisibilityTransfer-&gt;setPath('/foo/bar.jpg');

$result = $fileSystemService-&gt;markAsPrivate($fileSystemVisibilityTransfer);</code></pre>
        <h3> markAsPublic(FileSystemVisibilityTransfer $fileSystemVisibilityTransfer)</h3>
        <p>Mark resource with public access rights.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemVisibilityTransfer = new FileSystemVisibilityTransfer();
$fileSystemVisibilityTransfer-&gt;setFileSystemName('media');
$fileSystemVisibilityTransfer-&gt;setPath('/foo/bar.jpg');

$result = $fileSystemService-&gt;markAsPublic($fileSystemVisibilityTransfer);</code></pre>
        <h3>createDirectory(FileSystemCreateDirectoryTransfer $fileSystemCreateDirectoryTransfer)</h3>
        <p>Create directory with its path.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemCreateDirectoryTransfer = new FileSystemCreateDirectoryTransfer();
$fileSystemCreateDirectoryTransfer-&gt;setFileSystemName('media');
$fileSystemCreateDirectoryTransfer-&gt;setPath('/foo/bar');

$result = $fileSystemService-&gt;createDirectory($fileSystemCreateDirectoryTransfer);</code></pre>
        <h3> deleteDirectory(FileSystemDeleteDirectoryTransfer $fileSystemDeleteDirectoryTransfer)</h3>
        <p>Delete empty directory.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemDeleteDirectoryTransfer = new FileSystemDeleteDirectoryTransfer();
$fileSystemDeleteDirectoryTransfer-&gt;setFileSystemName('media');
$fileSystemDeleteDirectoryTransfer-&gt;setPath('foo/bar');

$result = $fileSystemService-&gt;deleteDirectory($fileSystemDeleteDirectoryTransfer);</code></pre>
        <h3>copy(FileSystemCopyTransfer $fileSystemCopyTransfer)</h3>
        <p>Copy file, the destination must not exist.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemCopyTransfer = new FileSystemCopyTransfer();
$fileSystemCopyTransfer-&gt;setFileSystemName('media');
$fileSystemCopyTransfer-&gt;setSourcePath('foo/bar.jpg');
$fileSystemCopyTransfer-&gt;setDestinationPath('newpath/foobar.jpg');

$result = $fileSystemService-&gt;copy($fileSystemCopyTransfer);</code></pre>
        <h3> delete(FileSystemDeleteTransfer $fileSystemDeleteTransfer)</h3>
        <p>Delete file.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemDeleteTransfer = new FileSystemDeleteTransfer();
$fileSystemDeleteTransfer-&gt;setFileSystemName('media');
$fileSystemDeleteTransfer-&gt;setPath('foo/bar.jpg');

$result = $fileSystemService-&gt;delete($fileSystemDeleteTransfer);</code></pre>
        <h3>put(FileSystemContentTransfer $fileSystemContentTransfer)</h3>
        <p>Create a file or update if exists.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemContentTransfer = new FileSystemContentTransfer();
$fileSystemContentTransfer-&gt;setFileSystemName('media');
$fileSystemContentTransfer-&gt;setPath('foo/bar.jpg');
$fileSystemContentTransfer-&gt;setContent('Lorem Ipsum');

$result = $fileSystemService-&gt;put($fileSystemContentTransfer);</code></pre>
        <h3> rename(FileSystemRenameTransfer $fileSystemRenameTransfer)</h3>
        <p>Create a file or update if exists.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemRenameTransfer = new FileSystemRenameTransfer();
$fileSystemRenameTransfer-&gt;setFileSystemName('media');
$fileSystemRenameTransfer-&gt;setPath('foo/bar.jpg');
$fileSystemRenameTransfer-&gt;setNewPath('foo/buzz.jpg');

$result = $fileSystemService-&gt;rename($fileSystemRenameTransfer);</code></pre>
        <h3>update(FileSystemContentTransfer $fileSystemContentTransfer)</h3>
        <p>Update an existing file.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemContentTransfer = new FileSystemContentTransfer();
$fileSystemContentTransfer-&gt;setFileSystemName('media');
$fileSystemContentTransfer-&gt;setPath('foo/bar.jpg');
$fileSystemContentTransfer-&gt;setContent('Lorem Ipsum');

$result = $fileSystemService-&gt;update($fileSystemContentTransfer);</code></pre>
        <h3> write(FileSystemContentTransfer $fileSystemContentTransfer)</h3>
        <p>Write a new file.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemContentTransfer = new FileSystemContentTransfer();
$fileSystemContentTransfer-&gt;setFileSystemName('media');
$fileSystemContentTransfer-&gt;setPath('foo/bar.jpg');
$fileSystemContentTransfer-&gt;setContent('Lorem Ipsum');

$result = $fileSystemService-&gt;write($fileSystemRenameTransfer);</code></pre>
        <h2>Stream API</h2>
        <h3>putStream(FileSystemStreamTransfer $fileSystemStreamTransfer, $stream)</h3>
        <p>Create a file or update if exists using stream.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemStreamTransfer = new FileSystemStreamTransfer();
$fileSystemStreamTransfer-&gt;setFileSystemName('media');
$fileSystemStreamTransfer-&gt;setPath('foo/bar.jpg');

$stream = fopen('some/file.jpg', 'r+');
$result = $fileSystemService-&gt;putStream($fileSystemStreamTransfer, $stream);

if (is_resource($stream)) {
    fclose($stream);
}</code></pre>
        <h3>readStream(FileSystemStreamTransfer $fileSystemStreamTransfer)</h3>
        <p>Retrieve stream for a file.</p>
        <p>Return a read-stream for the path, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemStreamTransfer = new FileSystemStreamTransfer();
$fileSystemStreamTransfer-&gt;setFileSystemName('media');
$fileSystemStreamTransfer-&gt;setPath('foo/bar.jpg');

$stream = $fileSystemService-&gt;readStream($fileSystemStreamTransfer);</code></pre>
        <h3>updateStream(FileSystemStreamTransfer $fileSystemStreamTransfer, $stream)</h3>
        <p>Update an existing file using a stream.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemStreamTransfer = new FileSystemStreamTransfer();
$fileSystemStreamTransfer-&gt;setFileSystemName('media');
$fileSystemStreamTransfer-&gt;setPath('foo/bar.jpg');

$stream = fopen('some/file.jpg', 'r+');
$result = $fileSystemService-&gt;updateStream($fileSystemStreamTransfer, $stream);

if (is_resource($stream)) {
    fclose($stream);
}</code></pre>
        <h3>writeStream(FileSystemStreamTransfer $fileSystemStreamTransfer, $stream)</h3>
        <p>Write a new file using a stream.</p>
        <p>Return true on success, false on failure.</p><pre><code class="language-PHP line-numbers">&lt;?php
$fileSystemStreamTransfer = new FileSystemStreamTransfer();
$fileSystemStreamTransfer-&gt;setFileSystemName('media');
$fileSystemStreamTransfer-&gt;setPath('foo/bar.jpg');

$stream = fopen('some/file.jpg', 'r+');
$result = $fileSystemService-&gt;writeStream($fileSystemStreamTransfer, $stream);

if (is_resource($stream)) {
    fclose($stream);
}</code></pre>
        <p> <MadCap:relatedTopics target="_self" style="mc-help-control-display: popup;"><MadCap:relatedTopic src="../flysystem.htm" /><MadCap:relatedTopic src="filesystem.htm" /><MadCap:relatedTopic src="filesystem_api.htm" /></MadCap:relatedTopics></p>
    </body>
</html>