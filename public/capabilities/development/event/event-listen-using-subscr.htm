<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:searchable="False" MadCap:conditions="Spryker.B2C,Spryker.B2B">
    <head>
    </head>
    <body>
        <h1>Listen to Events Using Subscriber <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /></h1>
        <p>Event subscribers are another way to listen for events in the system. The advantage of using event sunscrivers is that all the listeners reside in the module we want to react to the event. Register a subscriber once to <var>EventDependencyProvider</var> and later a Listener can be added without touching other bundles.</p>
        <p><var>To implement a subscriber</var>:</p>
        <ul>
            <li class="bullet_list">Create event Subscriber class.</li>
        </ul>
        <p>For example:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Spryker\Zed\ProductRelation\Communication\Plugin;

use Spryker\Zed\Event\Dependency\EventCollectionInterface;
use Spryker\Zed\Event\Dependency\Plugin\EventSubscriberInterface;
use Spryker\Zed\Product\Dependency\ProductEvents;
 Spryker\Zed\ProductRelation\Communication\Plugin\Product\ProductRelationAbstractProductChangeListener;

use Spryker\Zed\Kernel\Communication\AbstractPlugin;

/**
 * Sample implementation for subscriber
 */
class ProductRelationEventSubscriber extends AbstractPlugin implements EventSubscriberInterface
{

    /**
     * @param \Spryker\Zed\Event\Dependency\EventCollectionInterface $eventCollection
     *
     * @return \Spryker\Zed\Event\Dependency\EventCollectionInterface
     */
    public function getSubscribedEvents(EventCollectionInterface $eventCollection)
    {
        return $eventCollection
            -&gt;addListener(ProductEvents::PRODUCT_ABSTRACT_BEFORE_CREATE, new ProductRelationAbstractProductChangeListener());

    }

}</code></pre>
        <ul>
            <li class="bullet_list">Then include this subscriber class in <var>\Pyz\Zed\Event\EventDependencyProvider::getEventSubscriberCollection</var>.</li>
        </ul><pre><code class="language-PHP line-numbers">&lt;?php

/**
 * @return \Spryker\Zed\Event\Dependency\EventSubscriberCollectionInterface
 */
public function getEventSubscriberCollection()
{
    $eventSubscriberCollection = new EventSubscriberCollection();
    $eventSubscriberCollection-&gt;add(new ProductRelationEventSubscriber());

    return $eventSubscriberCollection
}</code></pre>
    </body>
</html>