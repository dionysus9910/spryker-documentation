<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite">
    <head><title>Managing Glossary Keys | Spryker</title>
        <meta name="description" content="Glossary keys present two layers of persistence. This topic covers the usage of the functionality for managing the glossary keys." />
    </head>
    <body>
        <h1>Managing Glossary Keys <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../Resources/Images/shoptype/MasterSuite.png" /> <img src="../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <p>Glossary keys present two layers of persistence:</p>
        <ul>
            <li class="bullet_list">SQL database storage</li>
            <li class="bullet_list">in-memory key-value storage (Redis)</li>
        </ul>
        <p>In this section we’ll exemplify the usage of the functionality for managing the glossary keys from the backoffice user interface and the usage of them for the Yves interface through twig extensions.</p>
        <p>The update/insert and delete operations for glossary keys are exposed in the Glossary module through the <var>GlossaryFacade</var> class.</p>
        <p>For both update and insert operations, GlossaryFacade exposes <var>saveGlossaryKeyTranslations</var> that can be accessed in the following manner:</p><pre><code class="language-PHP line-numbers">&lt;?php
// Insert or update the translations for a glossary key
$facade = $this-&gt;getFactory()-&gt;getGlossaryFacade();
$facade-&gt;saveGlossaryKeyTranslations($formData);

//Delete the translation for a glossary key
$facade-&gt;deleteTranslation($keyName,$locale);</code></pre>
        <p>Retrieving the glossary keys : the support for listing the glossary keys is exposed through the GlossaryBusinessContainer :</p><pre><code class="language-PHP line-numbers">&lt;?php
$availableLocales = $this-&gt;getFactory()-&gt;getEnabledLocales();
$grid = $this-&gt;getFactory()-&gt;createGlossaryKeyTranslationGrid($request);</code></pre>
        <ul>
            <li class="bullet_list"><var>getEnabledLocales()</var> retrieves the list of locales that are contained in the <var>stores.php</var> configuration file.</li>
            <li class="bullet_list"><var>createGlossaryKeyTranslationGrid()</var> queries the database for the list of glossary keys in the database for each of the supported languages. 
			<p class="note"><strong>Note</strong>: If one of the locales is removed from configuration, then its corresponding glossary keys won’t be retrieved from the database, but they would still exist in the database.</p></li>
        </ul>
        <h2>Configuring Locales </h2>
        <p>The locales supported by the application can be configured through the configuration file <var>stores.php</var> that’s under the <var>config/Shared/</var> folder.</p><pre><code class="language-PHP line-numbers">&lt;?php
$stores['DE'] = [
  ...
    'locales' =&gt; ['de_DE','en_US'],
];</code></pre>
        <h1>Using Glossary Keys</h1>
        <p>One of the usages of the glossary keys in the Shop Application is for rendering translated content. For allowing to render translated content, a dedicated extension for the twig template engine is available to be used. You can see bellow how you can add translated content in Yves.</p><pre><code class="language-PHP line-numbers"> &lt;div class="form-group"&gt;&lt;label class="col-sm-2 control-label"&gt;First Name&lt;/label&gt;
    &lt;div class="col-sm-10"&gt;
    
        &lt;input type="text" class="form-control" name="first_name" value="{{ form.first_name.value }}"&gt;
        {#{{ form_row(form.first_name) }}#}
        
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
        <p>The keyword <var>trans</var> marks an operation exposed by the <var>TwigTranslator</var> extension.</p>
        <p class="info">This means that the text of the label will either be the default value provided in the view or the corresponding translation for it.</p>
    </body>
</html>