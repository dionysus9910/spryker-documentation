<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head>
    </head>
    <body>
        <h1>StateMachine</h1>
        <p>StateMachine provides a generic state machine, that can be used to support complex processes such as implementing a checkout process.</p>
        <p>&#160;</p>
        <table width="100%" style="margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" cellspacing="0" border="0" class="TableStyle-PatternedRows2">
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <tbody>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Latest version: <b>2.2.1</b></td>
                    <td rowspan="2" style="text-align: right;" class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><a href="https://github.com/spryker/state-machine/releases/tag/2.2.1" target="_blank">View on GitHub <img src="../Resources/Images/view-on-github.png" /></a>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Last update: <b>05 Oct 2018</b></td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">&#160;</td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td rowspan="2" class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">&#160;</td>
                    <td style="text-align: right;" class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Type: <b>Core Splitted</b></td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td style="text-align: right;" class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">Group: <b>Functional</b></td>
                </tr>
            </tbody>
        </table>
        <p id="currentVersion">
            <h2 id="facade">API (Facades)</h2>
            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                <thead>
                    <tr class="TableStyle-PatternedRows-Head-Header1">
                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                    </tr>
                </thead>
                <tbody id="facade_body">
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Must be triggered once per state machine when first item is added.</p>
                                </li>
                                <li>
                                    <p>Creates new process item in persistent storage if it does not exist.</p>
                                </li>
                                <li>
                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                </li>
                                <li>
                                    <p>Executes registered StateMachineHandlerInterface::getInitialStateForProcess() plugin.</p>
                                </li>
                                <li>
                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                </li>
                                <li>
                                    <p>Persists state item history.</p>
                                </li>
                                <li>
                                    <p>Returns with the number of transitioned items.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>State machine must be already initialized with StateMachineFacadeInterface::triggerForNewStateMachineItem().</p>
                                </li>
                                <li>
                                    <p>Triggers event for the provided item.</p>
                                </li>
                                <li>
                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                </li>
                                <li>
                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                </li>
                                <li>
                                    <p>Persists state item history.</p>
                                </li>
                                <li>
                                    <p>Returns with the number of transitioned items.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>State machine must be already initialized with StateMachineFacadeInterface::triggerForNewStateMachineItem().</p>
                                </li>
                                <li>
                                    <p>Triggers event for the provided items.</p>
                                </li>
                                <li>
                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                </li>
                                <li>
                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                </li>
                                <li>
                                    <p>Persists state item history.</p>
                                </li>
                                <li>
                                    <p>Returns with the number of transitioned items.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Finds state machine handler by provided state machine name.</p>
                                </li>
                                <li>
                                    <p>Retrieves active process transfer list defined in handler by process name.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>stateMachineExists</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Checks if state machine exists.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkConditions</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Gathers all transitions without any event for the provided state machine.</p>
                                </li>
                                <li>
                                    <p>Executes gathered transitions.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkTimeouts</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Gathers all timeout expired events for the provided state machine.</p>
                                </li>
                                <li>
                                    <p>Executes gathered events.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>drawProcess</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Loads state machine process from XML.</p>
                                </li>
                                <li>
                                    <p>Draws graph using graph library.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineProcessId</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Retrieves process id by provided process name.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItem</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Loads state machine process from XML using provided state machine item.</p>
                                </li>
                                <li>
                                    <p>Retrieves manual event list.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItems</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Loads state machine process from XML using provided state machine item.</p>
                                </li>
                                <li>
                                    <p>Retrieves manual event list per items identifier.</p>
                                </li>
                                <li>
                                    <p>Items without any manual events are not part of result.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItemTransfer</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Retrieves hydrated item transfer by provided item id and identifier pair.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItems</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Retrieves hydrated item transfers by provided item id and identifier pairs.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateHistoryByStateItemIdentifier</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Retrieves state item history by state item identifier.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithFlag</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Loads state machine process from XML.</p>
                                </li>
                                <li>
                                    <p>Retrieves all items with state which have the provided flag.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithoutFlag</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <ul>
                                <li>
                                    <p>Loads state machine process from XML.</p>
                                </li>
                                <li>
                                    <p>Retrieves all items with state which have do not have the provided flag.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>clearLocks</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <ul>
                                <li>
                                    <p>Clears all expired item locks.</p>
                                </li>
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h2 id="plugins">Plugins</h2>
            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                <thead>
                    <tr class="TableStyle-PatternedRows-Head-Header1">
                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                    </tr>
                </thead>
                <tbody id="plugins_body">
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>This method is called when event have concrete command assigned.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                            <p>[</p>
                            <p>'Command/Plugin' =&gt; new Command(),</p>
                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                            <p>]</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                            <p>[</p>
                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                            <p>]</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>Name of state machine used by this handler.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <p>List of active processes used for this state machine.</p>
                            <p>[</p>
                            <p>'ProcessName',</p>
                            <p>'ProcessName2 ,</p>
                            <p>]</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                        </td>
                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h2 id="require">Dependencies:</h2>
            <ul id="require_list">
                <li><b>PHP</b> &gt;=7.1</li>
                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
            </ul>
            <h2 id="suggest">Suggested Installations:</h2>
            <ul id="suggest_list">
            </ul>
        </p>
        <MadCap:dropDown id="previousVersionsHead">
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Previous Versions</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p id="previousVersions">
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.2.0</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Must be triggered once per state machine when first item is added.</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistent storage if it does not exist.</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                                </li>
                                                <li>
                                                    <p>Executes registered StateMachineHandlerInterface::getInitialStateForProcess() plugin.</p>
                                                </li>
                                                <li>
                                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                                </li>
                                                <li>
                                                    <p>Persists state item history.</p>
                                                </li>
                                                <li>
                                                    <p>Returns with the number of transitioned items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>State machine must be already initialized with StateMachineFacadeInterface::triggerForNewStateMachineItem().</p>
                                                </li>
                                                <li>
                                                    <p>Triggers event for the provided item.</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                                </li>
                                                <li>
                                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                                </li>
                                                <li>
                                                    <p>Persists state item history.</p>
                                                </li>
                                                <li>
                                                    <p>Returns with the number of transitioned items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>State machine must be already initialized with StateMachineFacadeInterface::triggerForNewStateMachineItem().</p>
                                                </li>
                                                <li>
                                                    <p>Triggers event for the provided items.</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistent storage if it does not exist.</p>
                                                </li>
                                                <li>
                                                    <p>Executes registered StateMachineHandlerInterface::itemStateUpdated() plugin methods on state change.</p>
                                                </li>
                                                <li>
                                                    <p>Persists state item history.</p>
                                                </li>
                                                <li>
                                                    <p>Returns with the number of transitioned items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Finds state machine handler by provided state machine name.</p>
                                                </li>
                                                <li>
                                                    <p>Retrieves active process transfer list defined in handler by process name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>stateMachineExists</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Checks if state machine exists.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Gathers all transitions without any event for the provided state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Executes gathered transitions.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Gathers all timeout expired events for the provided state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Executes gathered events.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Loads state machine process from XML.</p>
                                                </li>
                                                <li>
                                                    <p>Draws graph using graph library.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Retrieves process id by provided process name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Loads state machine process from XML using provided state machine item.</p>
                                                </li>
                                                <li>
                                                    <p>Retrieves manual event list.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Loads state machine process from XML using provided state machine item.</p>
                                                </li>
                                                <li>
                                                    <p>Retrieves manual event list per items identifier.</p>
                                                </li>
                                                <li>
                                                    <p>Items without any manual events are not part of result.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Retrieves hydrated item transfer by provided item id and identifier pair.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Retrieves hydrated item transfers by provided item id and identifier pairs.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Retrieves state item history by state item identifier.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Loads state machine process from XML.</p>
                                                </li>
                                                <li>
                                                    <p>Retrieves all items with state which have the provided flag.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Loads state machine process from XML.</p>
                                                </li>
                                                <li>
                                                    <p>Retrieves all items with state which have do not have the provided flag.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Clears all expired item locks.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.1.0</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.0.3</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.0.2</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.0.1</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>2.0.0</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="PropelOrm.htm">PropelOrm</MadCap:xref></b> ^1.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^3.0.0</li>
                                <li><b><MadCap:xref href="UtilNetwork.htm">UtilNetwork</MadCap:xref></b> ^1.1.0</li>
                                <li><b><MadCap:xref href="UtilText.htm">UtilText</MadCap:xref></b> ^1.1.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.7</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Url.htm">Url</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.6</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Url.htm">Url</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.5</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Url.htm">Url</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.4</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Url.htm">Url</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.3</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.2</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.1</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.2.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                    <MadCap:dropDown>
                        <MadCap:dropDownHead>
                            <MadCap:dropDownHotspot>1.0.0</MadCap:dropDownHotspot>
                        </MadCap:dropDownHead>
                        <MadCap:dropDownBody>
                            <h2 id="facade">API (Facades)</h2>
                            <table id="facade_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 30%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 70%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Facade Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="facade_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerForNewStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger when first time adding item to state machine process</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new process item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getInitialStateForProcess</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>triggerEvent</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Trigger event for single item. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>triggerEventForItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Trigger event for multiple items. Must be already initialized with triggerForNewStateMachineItem</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Returns number of items transitioned</p>
                                                </li>
                                                <li>
                                                    <p>Creates new state item in persistence if does not exist</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::itemStateUpdated when state changed happens</p>
                                                </li>
                                                <li>
                                                    <p>Persist state history</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>Return available state machine process list. Includes all state machine details: states transitions, events</p>
                                            <p>Specification:</p>
                                            <ul>
                                                <li>
                                                    <p>Parse xml file and build object graph from it.</p>
                                                </li>
                                                <li>
                                                    <p>Calls plugin method in StateMachineHandlerInterface::getActiveProcesses to get list of process</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>checkConditions</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all transition without event for given state machine.</p>
                                                </li>
                                                <li>
                                                    <p>Read from database items with those transitions</p>
                                                </li>
                                                <li>
                                                    <p>execute each transition</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>checkTimeouts</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read all expired timeout events for given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Execute events</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>drawProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read all processes from given state machine</p>
                                                </li>
                                                <li>
                                                    <p>Using graph library draw graph</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getStateMachineProcessId</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read process id from database.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getManualEventsForStateMachineItem</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event name.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getManualEventsForStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Read state machine process list</p>
                                                </li>
                                                <li>
                                                    <p>Find all manual events</p>
                                                </li>
                                                <li>
                                                    <p>Map manual events with give event state machine items.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getProcessedStateMachineItemTransfer</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine item transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getProcessedStateMachineItems</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Get StateMachine items transfer as stored in persistence</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateHistoryByStateItemIdentifier</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Get history for given state machine item reading state machine history table</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getItemsWithFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items with flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getItemsWithoutFlag</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <ul>
                                                <li>
                                                    <p>Find all items without flag for given state machine and process, parse xml.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>clearLocks</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <ul>
                                                <li>
                                                    <p>Clear all expired locks from database, deletes rows.</p>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="plugins">Plugins</h2>
                            <table id="plugins_table" style="width: 100%; margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/PatternedRows.css');word-wrap: break-word;" class="TableStyle-PatternedRows" cellspacing="0">
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 20%;" />
                                <col class="TableStyle-PatternedRows-Column-Regular" style="width: 60%;" />
                                <thead>
                                    <tr class="TableStyle-PatternedRows-Head-Header1">
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Plugin</th>
                                        <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Method</th>
                                        <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Description</th>
                                    </tr>
                                </thead>
                                <tbody id="plugins_body">
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getCommandPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>List of command plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Command/Plugin' =&gt; new Command(),</p>
                                            <p>'Command/Plugin2' =&gt; new Command2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getConditionPlugins</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of condition plugins for this state machine for all processes. Array key is identifier in SM xml file.</p>
                                            <p>[</p>
                                            <p>'Condition/Plugin' =&gt; new Condition(),</p>
                                            <p>'Condition/Plugin2' =&gt; new Condition2(),</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineName</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Name of state machine used by this handler.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>getActiveProcesses</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>List of active processes used for this state machine.</p>
                                            <p>[</p>
                                            <p>'ProcessName',</p>
                                            <p>'ProcessName2 ,</p>
                                            <p>]</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getInitialStateForProcess</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>Provide initial state name for item when state machine initialized. Using process name.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-LightRows">
                                        <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows"><b>itemStateUpdated</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                            <p>This method is called when state of item was changed, client can create custom logic for example update it's related table with new stateId and processId.</p>
                                            <p>StateMachineItemTransfer:identifier is id of entity from client.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="7"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​StateMachineHandlerInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>getStateMachineItemsByStateIds</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method should return all list of StateMachineItemTransfer, with (identifier, IdStateMachineProcess, IdItemState)</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​ConditionPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>check</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when transition in SM xml file have concrete condition assigned.</p>
                                        </td>
                                    </tr>
                                    <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows" rowspan="1"><b>/​src/​Spryker/​Zed/​StateMachine/​Dependency/​Plugin/​CommandPluginInterface.php</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows"><b>run</b>
                                        </td>
                                        <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                            <p>This method is called when event have concrete command assigned.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <h2 id="require">Dependencies:</h2>
                            <ul id="require_list">
                                <li><b><MadCap:xref href="Application.htm">Application</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Kernel.htm">Kernel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Propel.htm">Propel</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Symfony.htm">Symfony</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Console.htm">Console</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Graph.htm">Graph</MadCap:xref></b> ^2.0.0</li>
                                <li><b><MadCap:xref href="Library.htm">Library</MadCap:xref></b> ^2.0.0</li>
                            </ul>
                            <h2 id="suggest">Suggested Installations:</h2>
                            <ul id="suggest_list">
                            </ul>
                        </MadCap:dropDownBody>
                    </MadCap:dropDown>
                </p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p><i>Last review date: 20 Nov 2018<MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><b>Do not edit this file - generated automatically</b></MadCap:conditionalText></i>
        </p>
    </body>
</html>