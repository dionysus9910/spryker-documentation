<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="">
    <head>
    </head>
    <body>
        <h1>Service</h1>
        <p MadCap:conditions="General.Hidden Comment">http://spryker.github.io/development-guide/reference/service/</p>
        <p>Service is a Spryker application layer shared by the Client application layer, the Zed application layer, and Yves application layer. This service layer provides the ability to register a service once and have it applied to both layers. Usage is focused on level details (infrastructure layer). For example: encoding, text processing, and sanitization. Currently, there are already few <var>Util </var>bundles providing services (UtilText, UtilEncoding, etc.).

</p>
        <h2>How to use a Service
</h2>
        <p>To support best practices, any services shared between bundles and applications (Yves, Zed, Client) that do not resolve high-level business processes should be moved to services. Services can be accessed with the locator: <var>$container-&gt;getLocator()-&gt;utilEncoding()-&gt;service()</var>.
</p>
        <h3>
Service structure
</h3>
        <p>When creating a new service, follow this file structure:

</p>
        <p>Under a newly-created module.

</p>
        <ul>
            <li class="bullet_list"><var>src/Spryker/Service/</var> - root directory.
</li>
            <li class="bullet_list"><var>src/Spryker/Service/DemoService.php</var> - main locatable service class. Should extend Spryker\Service\Kernel\AbstractService.
</li>
            <li class="bullet_list"><var>src/Spryker/Service/DemoServiceFactory.php</var> - service factory class. Should extend Spryker\Service\Kernel\AbstractServiceFactory.
</li>
            <li class="bullet_list"><var>src/Spryker/Service/DemoDependencyProvider</var> - service dependency provider. Should extend Spryker\Service\Kernel\AbstractBundleDependencyProvider.
</li>
        </ul>
        <p><b>Sample service class</b>:

</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * @method \Spryker\Service\UtilEncoding\UtilEncodingServiceFactory getFactory()
 */
class UtilEncodingService extends AbstractService implements UtilEncodingServiceInterface
{

    /**
     * {@inheritdoc}
     *
     * @api
     *
     * @param string $jsonValue
     * @param int|null $options
     * @param int|null $depth
     *
     * @return string
     */
    public function encodeJson($jsonValue, $options = null, $depth = null)
    {
        return $this-&gt;getFactory()
            -&gt;createJsonEncoder()
            -&gt;encode($jsonValue, $options, $depth);
    }
}
?&gt;
</code></pre>
        <ul>
            <li>After creating all mentioned files, run <var>vendor/bin/console dev:ide:generate-service-auto-completion</var> to have the service visible by our locator autocomplete.

</li>
        </ul>
    </body>
</html>