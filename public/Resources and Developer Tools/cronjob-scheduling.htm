<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="">
    <head>
        <link href="../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Cronjob Scheduling</h1>
        <p MadCap:conditions="General.Hidden Comment">Used to be: http://spryker.github.io/development-guide/reference/cronjob-scheduling/</p>
        <p>We use <a href="https://jenkins-ci.org/" target="_blank">Jenkins</a> for cronjob scheduling. Compared to Crontab, there are several benefits:</p>
        <ul>
            <li class="bullet_list">Jobs are queued and can be manually executed</li>
            <li class="bullet_list">Job definitions are under version control and can be changed by any developer</li>
            <li class="bullet_list">Console output available for debugging</li>
        </ul>
        <h2>Add a new job and run it</h2>
        <p>Jobs are defined in <var>config/Zed/cronjobs/jobs.php</var></p>
        <p>This file contains an array which defines the jobs.</p><pre><code class="language-PHP line-numbers">// Send emails every 10 minutes
$jobs[] = [
    'name'                  =&gt; 'send-mails',
    'command'               =&gt; '$PHP_BIN vendor/bin/console mail:send-mail',
    'schedule'              =&gt; '*/10 * * * *',
    'enable'                =&gt; true,
    'run_on_non_production' =&gt; true,
    'stores'                =&gt; ['DE', 'FR'],
];</code></pre>
        <p>To import this configuration to Jenkins you need to run this command in the console. In a production environment, this is part of the deployment process.</p>
        <p><var>vendor/bin/console setup:jenkins:generate</var>
        </p>
        <p>Now you can open Jenkins on port 10007 and watch your scripts running: <a href="http://zed.de.demoshop.local:10007/" target="_blank">http://zed.de.demoshop.local:10007</a> (URL works for standard VM, you may use a different host name).</p>
        <h2>Cronjob Configuration</h2>
        <p>For each job you can define several configurations:</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows" cellspacing="0">
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <col class="TableStyle-PatternedRows-Column-Regular" style="width: 89px;" />
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <col class="TableStyle-PatternedRows-Column-Regular" />
            <thead>
                <tr class="TableStyle-PatternedRows-Head-Header1">
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Key	</th>
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Type	</th>
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">Purpose</th>
                    <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">Mandatory</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>name	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>string	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>Name of the job</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                        <p>yes</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>command	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>string	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>The <a href="console-commands.htm" target="_blank">console command</a> that is executed.</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                        <p>yes</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>schedule	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>string</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>	Expression that defines the job schedule (how often the job is executed).</p>
                        <p>The schedule string is compatible with cronjob schedule definition (eg. 0 * * * * means: run once each hour at 00 minute). If environment is development, return empty string - cronjobs are being executed on development environment only manually.	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                        <p>yes</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>enable	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>bool	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>Enable/Disable jobs</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                        <p>yes</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>stores	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>array	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>An array of stores where the job is executed.	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                        <p>yes</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                        <p>run_on_non_production</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                        <p>bool	</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">
                        <p>Defines, if the job also runs on environments other than production (development, testing, staging). Default: false</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                        <p>no</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="important">When not using Jenkins for job scheduling there is no locking between concurrently running commands.</p>
    </body>
</html>