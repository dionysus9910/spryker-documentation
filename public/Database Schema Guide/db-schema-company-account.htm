<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Company Account Schema</title>
    </head>
    <body>
        <h1>Company Account Schema</h1>
        <h2>Company</h2>
        <h3>Company and Business Units</h3>
        <p>Companies can contain many business units, which are made up of one or more company users. By providing this structure customer (buyers) on a Spryker system may accurately model their purchasing processes according to their real company structure.</p>
        <p>
            <img src="../Resources/Images/Databaase Schema Guide/company-business-units.png" />
        </p>
        <p><b>Structure</b>:</p>
        <ul>
            <li><b>Company</b>:</li>
            <ul>
                <li>A Company has a name, a status (New =&gt; Approved =&gt; Declined) and a list of addresses.</li>
                <li>Companies can be toggled per Store.</li>
                <li>There is also a Company Type which is not used at the moment.</li>
            </ul>
            <li><b>Business Units</b>: Each company consists of multiple Business Units (at least one)</li>
            <ul>
                <li>A Business Unit represents a part of a company. For instance, for a company like "Hilton Hotels", each hotel can be a Business Unit.</li>
                <li>Business Units can have the hierarchical structure. For instance, a hotel has a bar and a restaurant.</li>
            </ul>
        </ul>
        <h3>Company and Business Unit Addresses</h3>
        <p class="info">Companies and Business Units have multiple Addresses which can be used during the Checkout.</p>
        <p>
            <img src="../Resources/Images/Databaase Schema Guide/company-business-unit-address.png" />
        </p>
        <p><b>Structure</b>:</p>
        <ul>
            <li>Companies have multiple Addresses (~ Company's Address Book) which can be assigned to multiple Business Units.</li>
            <li>One of the assigned Addresses per Business Units can the default billing address.</li>
            <li>Addresses can also get Labels as a way to differentiate the addresses from each other.</li>
        </ul>
        <h3>Company Users</h3>
        <p>A Company has multiple Users which belong to the Company's Business Units.</p>
        <p>
            <img src="../Resources/Images/Databaase Schema Guide/company-user.png" />
        </p>
        <p><b>Structure</b>:</p>
        <ul>
            <li>A Company User is a virtual entity without their own identity. It's more a relation between a Customer, a Company and a Business Unit.</li>
            <li>A Company User is related to only one Company Business Unit but there can be multiple Company Users per Customer. So, as a result, a Customer can be indirectly related to multiple Companies and Company Business Units. In this case, the Customer needs to select a Company Business Unit during the login because a lot of other relations are depending on the current Business Unit.</li>
        </ul>
        <h3>Company User Roles &amp; Permissions</h3>
        <p>A Company User can have one or multiple Roles which define what the User is allowed or disallowed to do.</p>
        <p>
            <img src="../Resources/Images/Databaase Schema Guide/company-user-roles-permissions.png" />
        </p>
        <p><b>Structure</b>:</p>
        <ul>
            <li><b>Roles</b>:</li>
            <ul>
                <li>A Company has a set of Roles (e.g. "Admin", "Buyer", "Engineer").</li>
                <li>There is no <i>is_admin</i> flag. The "Admin" is a normal Role which needs to be configured.</li>
                <li>Roles are assigned to Users (many-to-many).</li>
            </ul>
            <li><b>Permissions</b>:</li>
            <ul>
                <li>Permissions are implemented as PHP Classes so that they are more powerful than just black- or whitelists that are based on URLs.</li>
                <li>The PHP Class is identified by the key which must match the plugins that are configured in <i>PermissionDependencyProvider</i>.</li>
            </ul>
            <li><b>Permission Configuration</b>: Permissions can be configured per Role. This means that there can be additional values which are evaluated when the Permission is checked. <br />E.g. A Buyer is allowed to add products up to 500.- to the Cart. The "500" is a parameter in this case which needs to be configured.</li>
            <ul>
                <li style="font-style: normal;"><i>spy_permission::configuration_signature</i> -  This is the interface description of the underlying Plugin. So it says which fields are there, which are optional and which types are used. The data is stored as JSON.</li>
                <li style="font-style: normal;"><i>spy_company_role_to_permission::configuration</i> - This is the specific configuration of a Permission in the context of a Role. The data is stored as JSON.</li>
            </ul>
        </ul>
        <h3>Permission Groups (for Quotes and Shopping Lists)</h3>
        <p>Shopping Lists and Quotes can be shared with Company Users. This sharing can be regulated with the help of Permissions.</p>
        <p>
            <img src="../Resources/Images/Databaase Schema Guide/permission-groups.png" />
        </p>
        <p><b>Structure</b>:</p>
        <ul>
            <li>The Permission can be related to a Permission Group (many-to-many)</li>
            <li>A Permission Group defines the access as either <i>READ_ONLY</i> or <i>FULL_ACCESS</i> (or others like "Read and Write")</li>
            <li>The Permission Group is related to the object (Quote or Shopping List) and the Business User</li>
            <li>The Shopping List can also be restricted for Company Business Units (not shown in the schema)</li>
        </ul>
    </body>
</html>