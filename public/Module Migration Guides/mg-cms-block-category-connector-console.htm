<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.Demoshop,Spryker.B2B,Spryker.B2C,Spryker.DemoShop">
    <head>
    </head>
    <body>
        <h1>Migration Guide - CMS Block Category Connector Migration Console <img src="../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../Resources/Images/shoptype/Demoshop.png" /></h1>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><div class="drop-anchor">Click here to expand CMS Block Category Connector Migration script</div></MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
&lt;?php

/**
 * Copyright © 2016-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */

namespace Pyz\Zed\CmsBlockCategoryConnector\Communication\Console;

use Exception;
use Orm\Zed\CmsBlockCategoryConnector\Persistence\SpyCmsBlockCategoryConnectorQuery;
use Orm\Zed\CmsBlockCategoryConnector\Persistence\SpyCmsBlockCategoryPositionQuery;
use Spryker\Zed\CmsBlockCategoryConnector\CmsBlockCategoryConnectorConfig;
use Spryker\Zed\Kernel\Communication\Console\Console;
use Spryker\Zed\PropelOrm\Business\Runtime\ActiveQuery\Criteria;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * @method \Spryker\Zed\CmsBlockCategoryConnector\Persistence\CmsBlockCategoryConnectorQueryContainerInterface getQueryContainer()
 * @method \Spryker\Zed\CmsBlockCategoryConnector\Communication\CmsBlockCategoryConnectorCommunicationFactory getFactory()
 * @method \Spryker\Zed\CmsBlockCategoryConnector\Business\CmsBlockCategoryConnectorFacadeInterface getFacade()
 */
class CmsBlockCategoryPosition extends Console
{

    const COMMAND_NAME = 'cms-block-category-connector:migrate-position';

    /**
     * @param \Symfony\Component\Console\Input\InputInterface $input
     * @param \Symfony\Component\Console\Output\OutputInterface $output
     *
     * @return void
     */
    public function execute(InputInterface $input, OutputInterface $output)
    {
        if ($this-&gt;isCategoryPositionInstalled()) {
            $output-&gt;writeln('Is already installed.');
            return;
        }

        $this-&gt;getFacade()-&gt;syncCmsBlockCategoryPosition();
        $this-&gt;assignAllBlocksToPosition();

        $output-&gt;writeln('Successfully finished.');
    }

    /**
    * @return void
    */
    protected function configure()
    {
        parent::configure();

        $this-&gt;setName(static::COMMAND_NAME);
        $this-&gt;setDescription('');
    }

    /**
    * @throws \Exception
    *
    * @return void
    */
    protected function assignAllBlocksToPosition()
    {
        $spyCmsBlockCategoryPosition = $this-&gt;getQueryContainer()
            -&gt;queryCmsBlockCategoryPositionByName($this-&gt;getDefaultPositionName())
            -&gt;findOne();

        if ($spyCmsBlockCategoryPosition) {
            throw new Exception('Please add valid default position for import');
        }

        $spyCmsBlockCategoryConnections = SpyCmsBlockCategoryConnectorQuery::create()
            -&gt;filterByFkCmsBlockCategoryPosition(null, Criteria::ISNULL)
            -&gt;find();

        foreach ($spyCmsBlockCategoryConnections as $spyCmsBlockCategoryConnection) {
            $spyCmsBlockCategoryConnection-&gt;setFkCategoryTemplate($spyCmsBlockCategoryConnection-&gt;getCategory()-&gt;getFkCategoryTemplate());
            $spyCmsBlockCategoryConnection-&gt;setFkCmsBlockCategoryPosition($spyCmsBlockCategoryPosition-&gt;getIdCmsBlockCategoryPosition());
            $spyCmsBlockCategoryConnection-&gt;save();
        }
    }

    /**
    * @return array
    */
    protected function getPositionList()
    {
        return $this-&gt;getFactory()
            -&gt;getConfig()
            -&gt;getCmsBlockCategoryPositionList();
    }

    /**
    * @return string
    */
    protected function getDefaultPositionName()
    {
        return '';
    }

    /**
    * @return bool
    */
    protected function isCategoryPositionInstalled()
    {
        $count = SpyCmsBlockCategoryPositionQuery::create()
            -&gt;filterByName_In($this-&gt;getPositionList())
            -&gt;count();

        return $count &gt;= count($this-&gt;getPositionList());
    }

}
    </code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p> </p>
        <p><b>See more:</b>
        </p>
        <ul>
            <li><a href="mg-cms-block-category-connector.htm">Learn how to migrate CMS Block Category Connector</a>
            </li>
        </ul>
    </body>
</html>