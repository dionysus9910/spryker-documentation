<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="General.Demoshop,Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite">
    <head>
    </head>
    <body>
        <h1>Migration Guide - OMS <img src="../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../Resources/Images/shoptype/MasterSuite.png" /> <img src="../Resources/Images/shoptype/Demoshop.png" /></h1>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><div class="drop-anchor">Upgrading from Version 7.* to Version 8.*</div></MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>
            With the new OMS version, detail lock logging has been introduced and execution bucket size decreased.
</p>
                <p>In order to successfully migrate to the new OMS version, perform the following steps:</p>
                <ol>
                    <li> Migrate the DB:
                <ul><li><var>vendor/bin/console propel:diff</var>, also manual review is necessary for the generated migration file;</li><li><var>vendor/bin/console propel:migrate</var>;
            </li><li><var>vendor/bin/console propel:model:build</var>;
            </li></ul></li>
                    <li>Migrate the configuration file and the constants:
                <ul><li><var>Spryker\Shared\Oms\OmsConstants::INITIAL_STATUS</var>  should be replaced by <var>Spryker\Zed\Oms\OmsConfig::getInitialStatus()</var>.</li><li><var>Spryker\Shared\Oms\OmsConstants::NAME_CREDIT_MEMO_REFERENCE</var> was deprecated and removed.</li></ul></li>
                    <li>Migrate the deprecated classes / interfaces:
                <ul><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Plugin\Oms\Condition\ConditionCollectionInterface</var>
            and change the interface to <var>Spryker\Zed\Oms\Dependency\Plugin\Condition\ConditionCollectionInterface</var>.
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Console\ClearLocks</var>
            and change the interface to <var>Spryker\Zed\Oms\Communication\ClearLocksConsole</var>.
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandByItemInterface</var>
            and change the interface to <var>Spryker\Zed\Oms\Dependency\Plugin\Command\CommandByItemInterface</var>.
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandByOrderInterface</var>
            and change the interface to <var>Spryker\Zed\Oms\Dependency\Plugin\Command\CommandByOrderInterface</var>.
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Plugin\Oms\Command\CommandInterface</var>
            and change the interface to <var>Spryker\Zed\Oms\Dependency\Plugin\Command\CommandInterface</var>.
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Communication\Plugin\Oms\Condition\ConditionInterface</var>
            and change the interface to <var>Spryker\Zed\Oms\Dependency\Plugin\Condition\ConditionInterface</var>.
        </li></ul></li>
                    <li>Migrate the methods:
                <ul><li>
            The methods did not change the interface but the naming changed. You need to migrate only in case you extended <var>Spryker\Zed\Oms\Persistence\OmsQueryContainerInterface</var> or
            <var>Spryker\Zed\Oms\Business\Process\ProcessInterface</var>.</li><li>
            The classes that implement <var>Spryker\Zed\Oms\Business\Process\ProcessInterface</var> should be named as <var>setIsMain</var> instead of
            <var>setMain</var> and <var>getIsMain</var> instead of <var>getMain</var>.</li><li>
            The classes that implement <var>Spryker\Zed\Oms\Persistence\OmsQueryContainerInterface</var> should be named as <var>queryActiveProcesses</var>
            instead of <var>getActiveProcesses</var> and <var>queryOrderItemStates</var> instead of <var>getOrderItemStates</var>.</li><li>
            Find the usage of <var>\Spryker\Zed\Oms\Business\OmsBusinessFactory::createOrderStateMachineOrderStateMachine</var> and
            replace it with <var>\Spryker\Zed\Oms\Business\OmsBusinessFactory::createLockedOrderStateMachine</var>.</li><li>
            Find the usage of <var>\Spryker\Zed\Oms\Business\OmsBusinessFactory::createOrderStateMachineBuilder($xmlFolder = null)</var> and move the value of
            <var>$xmlFolder</var> to <var>\Spryker\Zed\Oms\OmsConfig::getProcessDefinitionLocation()</var>. From now on this function doesn't have <var>$xmlFolder</var> as a parameter.
        </li><li>
            Find the usage of <var>\Spryker\Zed\Oms\Business\OrderStateMachine\LockedOrderStateMachine::buildIdentifierForOrderItemsLock</var> and
            replace it with the two calls: <var>::collectIdentifiersForOrderItemsLock(array $orderItems)</var> and
            <var>::buildIdentifierForOrderItemIdsLock($orderItemIds)</var>.</li><li>
            Find the usage of <var>Spryker\Zed\Oms\Persistence\OmsQueryContainerInterface::countSalesOrderItemsForSku</var> and
            replace it with <var>::collectIdentifiersForOrderItemsLock(array $orderItems)</var>.</li><li>
            Find the usage of <var>Spryker\Zed\Oms\Persistence\OmsQueryContainerInterface::queryLockedItemsByIdentifierAndExpirationDate</var> and
            use your own implementation (based on <var>OmsQueryContainer</var>).
        </li><li>
            Find the usage of <var>Spryker\Zed\Oms\Persistence\OmsQueryContainerInterface::queryLockedItemsByIdentifierAndExpirationDate</var> and
            use your own implementation (based on <var>OmsQueryContainer</var>).
        </li></ul></li>
                </ol>
                <p>In OMS module version 8 we have also added support for stock reservations per store. We have added a few more database tables as well as a new column to <var>spy_oms_reservation</var> table.

             </p>
                <p>Run the database migrations:
             <pre><code class="language-PHP line-numbers">
                 ALTER TABLE "spy_oms_product_reservation"
                     ADD "fk_store" INTEGER;

                 ALTER TABLE "spy_oms_product_reservation" ADD CONSTRAINT "spy_oms_product_reservation-fk_store"
                    FOREIGN KEY ("fk_store")
                    REFERENCES "spy_store" ("id_store");
                    CREATE SEQUENCE "spy_oms_product_reservation_store_pk_seq";

                CREATE TABLE "spy_oms_product_reservation_store"
                (
                    "id_oms_product_reservation_store" INTEGER NOT NULL,
                    "store" VARCHAR(255) NOT NULL,
                    "sku" VARCHAR(255) NOT NULL,
                    "reservation_quantity" INTEGER NOT NULL,
                    "version" INT8 NOT NULL,
                    "created_at" TIMESTAMP,
                    "updated_at" TIMESTAMP,
                    PRIMARY KEY ("id_oms_product_reservation_store"),
                    CONSTRAINT "spy_oms_product_reservation_store-unique-store-sku" UNIQUE ("store","sku")
                );

                CREATE INDEX "spy_oms_product_reservation_store-version" ON "spy_oms_product_reservation_store" ("version");

                CREATE INDEX "spy_oms_product_reservation_store-sku" ON "spy_oms_product_reservation_store" ("sku");

                CREATE INDEX "spy_oms_product_reservation_store-store" ON "spy_oms_product_reservation_store" ("store");

                CREATE SEQUENCE "spy_oms_product_reservation_change_version_pk_seq";

                CREATE TABLE "spy_oms_product_reservation_change_version"
                (
                    "version" INT8 NOT NULL,
                    "id_oms_product_reservation_id" INTEGER NOT NULL,
                    "created_at" TIMESTAMP,
                    "updated_at" TIMESTAMP,
                    PRIMARY KEY ("version")
                );

                CREATE TABLE "spy_oms_product_reservation_last_exported_version"
                (
                    "version" INT8 NOT NULL,
                    "created_at" TIMESTAMP,
                    "updated_at" TIMESTAMP
                );
</code></pre></p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><div class="drop-anchor">Upgrading from Version 6.* to Version 7.*</div></MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>In version 7, OMS no longer uses <var>SalesAggregator </var> to calculate totals, it is now done via the Calculator module. Therefore, there is no more dependency with <var>SalesAggregator</var>.</p>
                <p>The <var>Spryker\Zed\Oms\Business\Mail\MailHandler</var> dependency to <var>SalesAggregatorFacade </var>was replaced with <var>SalesFacade</var>.</p>
                <p>To learn how to migrate to the new structure see, <MadCap:xref href="mg-calculation.htm#Upgradin">Upgrading from version 3.* to version 4.*</MadCap:xref></p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><div class="drop-anchor">Upgrading from Version 3.* to Version 4.*
</div></MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>With OMS version 4 we added availability integration therefore, a nw database table was created.

</p><pre><code class="language-PHP line-numbers">CREATE SEQUENCE "spy_oms_product_reservation_pk_seq";

CREATE TABLE "spy_oms_product_reservation"
(
    "id_oms_product_reservation" INTEGER NOT NULL,
    "sku" VARCHAR(255) NOT NULL,
    "reservation_quantity" INTEGER DEFAULT 0 NOT NULL,
    PRIMARY KEY ("id_oms_product_reservation"),
    CONSTRAINT "spy_oms_product_reservation-sku" UNIQUE ("sku")
);
</code></pre>
                <p>New Oms plugin added <var>ReservationHandlerPluginInterface</var> which is executed when item is transferred to state with "reserved" flag. </p>
                <p>To start using it with core implementation, add <var>Spryker\Zed\Availability\Communication\Plugin\AvailabilityHandlerPlugin</var> to your project <var>OmsDependencyProvider::getReservationHandlerPlugins()</var>.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li>Get a general idea about stock and availability</li>
            <li>Learn what Availability module does and how it works</li>
        </ul>
        <p>&#160;</p>
        <p><i>Last review date: Feb. 26th, 2018</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i> by Aurimas Ličkus</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>