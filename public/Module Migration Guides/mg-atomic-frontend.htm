<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="7825" MadCap:lastWidth="2279" MadCap:conditions="General.Draft,General.Shop Suite">
    <head>
    </head>
    <body>
        <h1>Migration Guide - Atomic Frontend</h1>
        <p>We have made a lot of changes in the shop atomic frontend to make style and js/ts customization easier from project level, and to move the builder logic (webpack) outside the ShopUi, in a separate, <var>npm</var> managed package, directly configurable in the project `package.json`.</p>
        <ul>
            <li> Basic and util styles are now be managed from project level.</li>
            <li>Shared styles are now expendable from project level and the changes will automatically spread across the components.</li>
            <li>Component’s mixins are now shared across the system and accessible from everywhere; for this reason, the naming convention for components has changes and follows the pattern <var>module-name-component-name</var>.</li>
            <li>Component’s styles are dynamically loaded only if related modules are installed.</li>
            <li>Project can now configure component glob settings in order to enable/disable target components not wanted in the built output.</li>
        </ul>

This release ships 3 bugfixes:
<ul><li>make header top menu full width;</li><li>add top navigation in mobile side-drawer;</li><li>fix broken widgets for shopping list.</li></ul>

In order to successfully integrate this release into your project, follow these steps on project level:
<ol><li>Update your <var>package.json</var> file dependency sections as following:
<pre><code class="language-PHP line-numbers">
  "dependencies": {
    "@webcomponents/webcomponentsjs": "~1.2.0"
  },
  "devDependencies": {
    "@spryker/suite-frontend-builder": "^0.1.0",
    "@spryker/oryx-for-zed": "^2.1.0"
  }
</code></pre></li><var>@spryker/suite-frontend-builder</var> is a new tool containing all the dependencies needed to run atomic frontend from ShopUi module.
It's webpack 4 based and completely customizable. Take a look at the documentation here(https://github.com/spryker-shop/suite-frontend-builder) for more details about the tool.

<li>Create/update folder <var>./src/Pyz/Yves/ShopUi/Theme/default</var> by adding these files:
<ul><li><var>./app.ts</var><ul><li>import bootstrap from 'ShopUi/app/bootstrap';</li><li>import config from 'ShopUi/app/config';
    bootstrap(config);</li></ul></li><li><var>/vendor.ts</var><ul><li>import <var>@webcomponents/webcomponentsjs/custom-elements-es5-adapter</var>;</li><li>import <var>@webcomponents/webcomponentsjs/webcomponents-sd-ce</var>;</li></ul></li><li><var>./styles/basic.scss</var><ul><li>@import <var>~ShopUi/styles/basic</var>;</li><li>@include basic-reset;</li><li>@include basic-typography;</li><li>@include basic-grid;</li><li>@include basic-animation;</li></ul></li><li><var>./styles/shared.scss</var><ul><li>@import <var>~ShopUi/styles/shared</var>;
    </li></ul></li><li><var>./styles/util.scss</var><ul><li>@import <var>~ShopUi/styles/util</var>;</li><li>@include util-text;</li><li>@include util-float;</li><li>@include util-visibility;</li></ul></li></ul></li><li>Create folder <var>./frontend</var> and add these files:
<ul><li><var>./settings.js</var><MadCap:dropDown><MadCap:dropDownHead><MadCap:dropDownHotspot><div class="drop-anchor">Click here to expand the code sample</div></MadCap:dropDownHotspot></MadCap:dropDownHead><MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
    const path = require('path');

    const name = 'yves_default';
    const theme = 'default';
    const context = process.cwd();

    const paths = {
        public: './public/Yves/assets',
        shop: './vendor/spryker/spryker-shop',
        ui: {
            shop: `./vendor/spryker/spryker-shop/Bundles/ShopUi/src/SprykerShop/Yves/ShopUi/Theme/${theme}`,
            project: `./src/Pyz/Yves/ShopUi/Theme/${theme}`
        }
    };

    module.exports = {
        name,
        theme,
        paths,

        dirs: {
            context,
            public: path.join(context, paths.public),
            shop: path.join(context, paths.shop),
            ui: {
                shop: path.join(context, paths.ui.shop),
                project: path.join(context, paths.ui.project)
            }
        },

        find: {
            componentEntryPoints: {
                dirs: [
                    path.join(context, paths.shop)
                ],
                patterns: [
                    `**/Theme/${theme}/components/atoms/*/index.ts`,
                    `**/Theme/${theme}/components/molecules/*/index.ts`,
                    `**/Theme/${theme}/components/organisms/*/index.ts`,
                    `**/Theme/${theme}/templates/*/index.ts`,
                    `**/Theme/${theme}/views/*/index.ts`,
                    '!config',
                    '!data',
                    '!deploy',
                    '!node_modules',
                    '!public',
                    '!test'
                ]
            },

            componentStyles: {
                dirs: [
                    path.join(context, paths.shop)
                ],
                patterns: [
                    `**/Theme/${theme}/components/atoms/*/*.scss`,
                    `**/Theme/${theme}/components/molecules/*/*.scss`,
                    `**/Theme/${theme}/components/organisms/*/*.scss`,
                    `**/Theme/${theme}/templates/*/*.scss`,
                    `**/Theme/${theme}/views/*/*.scss`,
                    `!**/Theme/${theme}/**/style.scss`,
                    '!config',
                    '!data',
                    '!deploy',
                    '!node_modules',
                    '!public',
                    '!test'
                ]
            }
        }
    }
    </code></pre></MadCap:dropDownBody></MadCap:dropDown></li><li><var>./build/development.js</var><pre><code class="language-PHP line-numbers">
    const builder = require('@spryker/suite-frontend-builder');
    const factory = require('@spryker/suite-frontend-builder/dist/configuration-factory/development');
    const settings = require('../settings');
    builder.build(settings, factory.DevelopmentConfigurationFactory);
    </code></pre></li><li><var>./build/development-watch.js</var><pre><code class="language-PHP line-numbers">
    const builder = require('@spryker/suite-frontend-builder');
    const factory = require('@spryker/suite-frontend-builder/dist/configuration-factory/development-watch');
    const settings = require('../settings');
    builder.build(settings, factory.DevelopmentWatchConfigurationFactory);
    </code></pre></li><li><var>./build/production.js</var><pre><code class="language-PHP line-numbers">
    const builder = require('@spryker/suite-frontend-builder');
    const factory = require('@spryker/suite-frontend-builder/dist/configuration-factory/production');
    const settings = require('../settings');
    builder.build(settings, factory.ProductionConfigurationFactory);</code></pre></li></ul>
    

    These files are extensions to <var>@spryker/suite-frontend-builder</var>: they provide settings and define tasks for building the ShopUi.</li><li>Update your <var>package.json</var> script section adding the following:
<pre><code class="language-PHP line-numbers">
  "scripts": {
    "yves": "node ./frontend/build/development",
    "yves:watch": "node ./frontend/build/development-watch",
    "yves:production": "node ./frontend/build/production"
  }
</code></pre></li><li>Update your <var>tsconfig.json</var> file as following:

<pre><code class="language-PHP line-numbers">
{
    "extends": "./node_modules/@spryker/suite-frontend-builder/tsconfig.suite",
    "compilerOptions": {
        "baseUrl": ".",
        "paths": {
            "*": [
                "*"
            ],
            "ShopUi/*": [
                "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/*"
            ]
        }
    },
    "files": [
        "./src/Pyz/Yves/ShopUi/Theme/default/app.ts",
        "./src/Pyz/Yves/ShopUi/Theme/default/vendor.ts"
    ],
    "include": [
        "./vendor/spryker-shop/**/*",
        "./src/Pyz/Yves/**/*"
    ],
    "exclude": [
        "node_modules",
        "**/*.spec.ts"
    ]
}
</code></pre><var>tsconfig.json</var> is now extending the basic configuration provided by <var>@spryker/suite-frontend-builder</var> and pointing to project <var>src</var></li></ol><p>&#160;</p><p><i>Last review date: April, 24th, 2018 </i><MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Alessandro Bellini</i></MadCap:conditionalText></p></body>
</html>