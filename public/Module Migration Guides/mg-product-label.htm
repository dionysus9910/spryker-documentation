<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="1287" MadCap:lastWidth="1057" MadCap:conditions="General.Demoshop">
    <head>
    </head>
    <body>
        <h1>Migration Guide - Product Label</h1>
        <h2>Upgrading from Version 1.* to Version 2.*</h2>
        <p>The following list describes the Backward Compatibility breaking changes in this version and how to upgrade.</p>
        <h3>Product Label Rendering</h3>
        <p>
            We've changed <var>spyProductLabels</var> twig function to work based on a list of product label IDs.
            It's original behaviour was moved to a new twig function, called <var>spyProductAbstractLabels</var>.
            The idea behind this change is to directly get all the product label IDs of abstract products on catalog pages
            from Search documents instead of reading all these information from Storage. This is a better approach performance
            wise and also gives us the ability to be able to search and filter for labels in Elasticsearch.
        </p>
        <p>
            If you just want to quickly upgrade and keep the previous behaviour, you only need to find and replace all the usages
            of <var>spyProductLabels</var> function to <var>spyProductAbstractLabels</var> in all of your twig templates.
            However, we suggest you to invest some time and
        </p>
        <p>
            However, to get the full benefits of this version upgrade you first need to export product label IDs to your Search
            documents. To do this, you need to modify your product search collector, by adding a new <var>search-result-data</var>
            entry (i.e. <var>id_product_labels</var>) for products. The data of this field can be easily read with
            <var>ProductLabelFacade::findLabelIdsByIdProductAbstract()</var> method.
        </p>
        <p>
            Once you have the product label IDs in search documents, you can use the <var>spyProductLabels</var> twig method
            in your templates to pass the list of label IDs and display the available labels of a product.
        </p>
        <h3>Database Changes</h3>
        <p>
            We've also added a new <var>is_dynamic</var> field to <var>spy_product_label</var> database table to prepare for the
            new dynamic labels feature coming in the following minor releases. In the 2.0 release the dynamic labels feature
            is not yet implemented, it will be provided by one of the following minor versions.
        </p>
        <p>To start database migration run the following commands:</p>
        <ul>
            <li><var>vendor/bin/console propel:diff</var>, manual review is necessary for the generated migration file.</li>
            <li><var>vendor/bin/console propel:migrate</var>
            </li>
            <li><var>vendor/bin/console propel:model:build</var>
            </li>
        </ul>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="mg-product.htm">Migrate to a newer version of Product module</a>
            </li>
            <li><a href="mg-product-label-gui.htm">Migrate to a newer version of Product Label GUI module</a>
            </li>
            <li><a href="mg-product-bundle.htm">Migrate to a newer version of Product Bundle module</a>
            </li>
        </ul>
    </body>
</html>