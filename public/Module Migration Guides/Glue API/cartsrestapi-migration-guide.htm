<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.Draft,ReleaseVersions.2018-10">
    <head>
    </head>
    <body>
        <h1>CartsRestApi Migration Guide</h1>
        <h2>Upgrading from Version 1.* to Version 2.*</h2>
        <p>
			CartsRestApi version 2 has been improved to be independent of the MultiCart module. Now you can to use the CartsRestApi module only with the PersistentCart module.
We have also added the API&#160;endpoints functionality to use CartsRestApi as a guest customer. <![CDATA[		]]></p>
        <p>To migrate to the new version, do the following:		</p>
        <ul>
            <li>Find or create <var>CartsRestApiDependencyProvider</var> in a project. Make sure it extends <var>\Spryker\Glue\CartsRestApi\CartsRestApiDependencyProvider</var>.</li>
            <li>Find the <var>getQuoteCollectionReaderPlugin</var> method and add <var>\Spryker\Glue\CartsRestApi\Plugin\QuoteCollectionReader\CartQuoteCollectionReaderPlugin</var> to the plugin stack.</li>
            <li>Find the <var>getQuoteCreatorPlugin</var> method and add <var>\Spryker\Glue\CartsRestApi\Plugin\QuoteCollectionReader\CartQuoteCollectionReaderPlugin</var> to the plugin stack.</li>
            <p>
				The file could look like this:
			</p>
            <p><var>CartsRestApiDependencyProvider.php</var>
            </p><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Glue\CartsRestApi;
 
	use Spryker\Glue\CartsRestApi\CartsRestApiDependencyProvider as SprykerCartsRestApiDependencyProvider;
	use Spryker\Glue\CartsRestApi\Plugin\QuoteCollectionReader\CartQuoteCollectionReaderPlugin;
	use Spryker\Glue\CartsRestApi\Plugin\QuoteCreator\SingleQuoteCreatorPlugin;
	use Spryker\Glue\CartsRestApiExtension\Dependency\Plugin\QuoteCollectionReaderPluginInterface;
	use Spryker\Glue\CartsRestApiExtension\Dependency\Plugin\QuoteCreatorPluginInterface;
 
	class CartsRestApiDependencyProvider extends SprykerCartsRestApiDependencyProvider
	{
		/**
		* @return \Spryker\Glue\CartsRestApiExtension\Dependency\Plugin\QuoteCollectionReaderPluginInterface
		*/
		protected function getQuoteCollectionReaderPlugin(): QuoteCollectionReaderPluginInterface
		{
			return new CartQuoteCollectionReaderPlugin();
		}
 
		/**
		* @return \Spryker\Glue\CartsRestApiExtension\Dependency\Plugin\QuoteCreatorPluginInterface
		*/
		protected function getQuoteCreatorPlugin(): QuoteCreatorPluginInterface
		{
			return new SingleQuoteCreatorPlugin();
		}
	}
				</code></pre>
            <li>
                Find or create CustomersRestApiDependencyProvider in a project. Make sure it extends <var>\Spryker\Glue\CustomersRestApi\CustomersRestApiDependencyProvider</var>.
            </li>
            <li>
                Find the <var>getCustomerPostRegisterPlugins</var> method and add <var>Spryker\Glue\CartsRestApi\Plugin\CustomerPostRegister\UpdateCartCustomerReferencePlugin</var> to the plugin stack.
            </li>
            <li>
                The file could look like this:
            </li>
            <p><var>CustomersRestApiDependencyProvider.php</var>
            </p><pre><code class="language-PHP line-numbers">
	&lt;?php
  
	namespace Pyz\Glue\CustomersRestApi;
	use Spryker\Glue\CartsRestApi\Plugin\CustomerPostRegister\UpdateCartCustomerReferencePlugin;
	use Spryker\Glue\CustomersRestApi\CustomersRestApiDependencyProvider as SprykerCustomersRestApiDependencyProvider;
 
	class CustomersRestApiDependencyProvider extends SprykerCustomersRestApiDependencyProvider
	{
		/**
		* @return \Spryker\Glue\CustomersRestApiExtension\Dependency\Plugin\CustomerPostRegisterPluginInterface[]
		*/
		protected function getCustomerPostRegisterPlugins(): array
		{
			return array_merge(parent::getCustomerPostRegisterPlugins(), [
				new UpdateCartCustomerReferencePlugin(),
			]);
		}
	}
				</code></pre>
            <li>
                Find or create <var>GlueApplicationDependencyProvider</var> in a project. Make sure it extends <var>\Spryker\Glue\GlueApplication\GlueApplicationDependencyProvider</var>.
            </li>
            <li>
                Find the <var>getResourceRoutePlugins</var> method and add the following plugins to the plugins stack.
            </li>
            <li><var>Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\CartItemsResourceRoutePlugin</var>
            </li>
            <li><var>Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\CartsResourceRoutePlugin</var>
            </li>
            <li><var>Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\GuestCartItemsResourceRoutePlugin</var>
            </li>
            <li><var>Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\GuestCartsResourceRoutePlugin</var>
            </li>
            <li>
                Find the <var>getValidateRestRequestPlugins</var> method and add <var>Spryker\Glue\CartsRestApi\Plugin\Validator\AnonymousCustomerUniqueIdValidatorPlugin</var> to the plugins stack.
            </li>
            <li>
                Find the <var>getControllerBeforeActionPlugins</var> method and add <var>Spryker\Glue\CartsRestApi\Plugin\ControllerBeforeAction\SetAnonymousCustomerIdControllerBeforeActionPlugin</var> to the plugins stack.
            </li>
            <li>
                Find the <var>getResourceRelationshipPlugins</var> method and add <var>Spryker\Glue\CartItemsProductsRelationship\Plugin\CartItemsProductsRelationshipPlugin</var> to the plugins stack.
            </li>
            <li>
                <p>The file could look like this:</p>
                <p><var>GlueApplicationDependencyProvider.php</var>
                </p><pre><code class="language-PHP line-numbers">
	&lt;?php
  
	namespace Pyz\Glue\GlueApplication;
 
	use Spryker\Glue\CartItemsProductsRelationship\Plugin\CartItemsProductsRelationshipPlugin;
	use Spryker\Glue\CartsRestApi\Plugin\ControllerBeforeAction\SetAnonymousCustomerIdControllerBeforeActionPlugin;
	use Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\CartItemsResourceRoutePlugin;
	use Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\CartsResourceRoutePlugin;
	use Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\GuestCartItemsResourceRoutePlugin;
	use Spryker\Glue\CartsRestApi\Plugin\ResourceRoute\GuestCartsResourceRoutePlugin;
	use Spryker\Glue\CartsRestApi\Plugin\Validator\AnonymousCustomerUniqueIdValidatorPlugin;
	use Spryker\Glue\CustomersRestApi\CustomersRestApiDependencyProvider as SprykerCustomersRestApiDependencyProvider;
 
	class GlueApplicationDependencyProvider extends SprykerGlueApplicationDependencyProvider
	{
		/**
		* {@inheritdoc}
		*
		* @return \Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ResourceRoutePluginInterface[]
		*/
		protected function getResourceRoutePlugins(): array
		{
			return [
				new CartsResourceRoutePlugin(),
				new CartItemsResourceRoutePlugin(),
				new GuestCartsResourceRoutePlugin(),
				new GuestCartItemsResourceRoutePlugin(),
			];
		}
 
		/**
		* {@inheritdoc}
		*
		* @return \Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ValidateRestRequestPluginInterface[]
		*/
		protected function getValidateRestRequestPlugins(): array
		{
			return [
				new AnonymousCustomerUniqueIdValidatorPlugin(),
			];
		}
 
		/**
		* {@inheritdoc}
		*
		* @return \Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ControllerBeforeActionPluginInterface[]
		*/
		protected function getControllerBeforeActionPlugins(): array
		{
			return [
				new SetAnonymousCustomerIdControllerBeforeActionPlugin(),
			];
		}
 
		/**
		* {@inheritdoc}
		*
		* @param \Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ResourceRelationshipCollectionInterface $resourceRelationshipCollection
		*
		* @return \Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ResourceRelationshipCollectionInterface
		*/
		protected function getResourceRelationshipPlugins(
			ResourceRelationshipCollectionInterface $resourceRelationshipCollection
		): ResourceRelationshipCollectionInterface {
			$resourceRelationshipCollection-&gt;addRelationship(
				CartsRestApiConfig::RESOURCE_GUEST_CARTS_ITEMS,
				new CartItemsProductsRelationshipPlugin()
			);
 
			return $resourceRelationshipCollection;
		}
	}
				</code></pre>
            </li>
        </ul>
        <p>
			To have an ability to run the console command in order to delete expired guest carts, you should:
		</p>
        <ol>
            <li>Run <var>composer require spryker/quote:"^2.3.0"</var></li>
            <li>Add configuration and cronjob to delete expired guest carts:
				<br /> <var>config/Shared/config_default.php</var><br /><var>config_default.php</var><pre><code class="language-PHP line-numbers">
	$config[QuoteConstants::GUEST_QUOTE_LIFETIME] = 'P01M';
					</code></pre><br /><var>config/Zed/cronjobs/jobs.php</var><var>jobs.php</var><pre><code class="language-PHP line-numbers">
	/* Quote */
	$jobs[] = [
		'name' =&gt; 'delete-expired-guest-quotes',
		'command' =&gt; '$PHP_BIN vendor/bin/console quote:delete-expired-guest-quotes',
		'schedule' =&gt; '30 1 * * *',
		'enable' =&gt; true,
		'run_on_non_production' =&gt; true,
		'stores' =&gt; $allStores,
	];
					</code></pre></li>
            <li>Find or create <var>ConsoleDependencyProvider</var> in a project. Make sure that it extends <var>\Spryker\Zed\Console\ConsoleDependencyProvider</var>. 
				Find the <var>getConsoleCommands</var> method and add <var>Spryker\Zed\Quote\Communication\Console\DeleteExpiredGuestQuoteConsole</var> to the plugin stack.
			</li>
            <p>The file could look like this:</p>
            <p><var>ConsoleDependencyProvider.php</var>
            </p><pre><code class="language-PHP line-numbers">
	&lt;?php
  
	namespace Pyz\Glue\CustomersRestApi;
  
	use Spryker\Zed\Console\ConsoleDependencyProvider as SprykerConsoleDependencyProvider;
	use Spryker\Zed\Quote\Communication\Console\DeleteExpiredGuestQuoteConsole;
  
	class ConsoleDependencyProvider extends SprykerConsoleDependencyProvider
	{
		/**
		* @param \Spryker\Zed\Kernel\Container $container
		*
		* @return \Symfony\Component\Console\Command\Command[]
		*/
		protected function getConsoleCommands(Container $container)
		{
			$commands = [
				new DeleteExpiredGuestQuoteConsole(),
			];
		}
	}
				</code></pre>
            <li>Run <var>vendor/bin/console transfer:generate</var></li>
        </ol>
        <p>&#160;</p>
        <p><i>Estimated migration time: 1-2 hours</i>
        </p>
        <p>&#160;</p>
        <p><i>Last review date: Oct 30, 2018 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Oleh Hladchenko, Yuliia Boiko</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>