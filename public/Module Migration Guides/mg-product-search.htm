<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:lastBlockDepth="6" MadCap:lastHeight="898" MadCap:lastWidth="1278" MadCap:conditions="General.Demoshop">
    <head>
    </head>
    <body>
        <h1>Migration Guide - ProductSearch</h1>
        <h2>Upgrading from Version 3.* to Version 4.*</h2>
        <ol>
            <li>Requires version ^4.0.0 of Product and ^5.0.0 of Search bundles.</li>
            <li><var>ProductSearchFacade::activateProductSearch()</var> and <var>ProductSearchFacade::deactivateProductSearch() </var>are not connected to <var>searchableProduct</var> anymore.</li>
            <li><var>ProductSearchFacade::saveProductSearchPreferences()</var> was removed. Added separated create, update and clean methods instead.</li>
            <li>Added <var>spy_product_search_attribute</var> new database table for product attribute search filter handling. To get the database changes you’ll need to run <var>vendor/bin/console propel:diff</var> to generate a propel migration file, then <var>vendor/bin/console propel:migrate</var> to apply it. Make sure before the second command that you checked and cleaned up the content of the migration file if necessary.</li>
            <li>Along with the database changes you’ll need to run <var>vendor/bin/console propel:model:build</var> to generate the necessary propel classes for the changes. After running that command you’ll find some new classes in your project under <var>\Orm\Zed\ProductSearch\Persistence namespace.</var> It’s important that you make sure that they are extending the base classes from the core, i.e.<ol><li><var>Orm\Zed\ProductSearch\Persistence\SpyProductSearchAttribute</var> extends <var>Spryker\Zed\ProductSearch\Persistence\Propel\AbstractSpyProductSearchAttribute,</var></li><li><var>Orm\Zed\ProductSearch\Persistence\SpyProductSearchAttributeMap</var> extends <var>Spryker\Zed\ProductSearch\Persistence\Propel\AbstractSpyProductSearchAttributeMap</var>.</li></ol></li>
            <li>In order to activate the changes of the new product search and filter preferences Zed UIs, you’ll need to register the <var>Spryker\Zed\ProductSearch\Communication\Plugin\ProductSearchConfigExtensionCollectorPlugin</var> in your <var>CollectorDependencyProvider</var> (under the <var>\Spryker\Zed\Collector\CollectorDependencyProvider::STORAGE_PLUGINS</var> key). This will make sure to write the search and filter preferences changes into redis when the collectors run. To enable reading them you’ll also need to register <var>Spryker\Zed\ProductSearch\Communication\Plugin\ProductSearchConfigExtensionCollectorPlugin</var> in P<var>yz\Client\Search\SearchDependencyProvider::createSearchConfigExpanderPlugins()</var>.</li>
        </ol>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li>L<a href="mg-product-set-gui.htm">earn how to migrate Product Set GUI</a></li>
            <li><a href="mg-product.htm">Learn how to migrate Product</a>
            </li>
        </ul>
    </body>
</html>