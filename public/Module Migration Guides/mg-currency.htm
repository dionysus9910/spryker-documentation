<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="General.Demoshop,Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite">
    <head>
    </head>
    <body>
        <h1>Migration Guide - Currency <img src="../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../Resources/Images/shoptype/MasterSuite.png" /> <img src="../Resources/Images/shoptype/Demoshop.png" /></h1>
        <h2>Upgrading from Version 2.* to Version 3.*</h2>
        <p>
            With the Currency module version 3 we have added  <var>sp_currency</var> database table to persist currencies in ZED.
            Run the following SQL request:

            <pre><code class="language-sql line-numbers">
                CREATE SEQUENCE "spy_currency_pk_seq";

                CREATE TABLE "spy_currency"
                (
                    "id_currency" INTEGER NOT NULL,
                    "name" VARCHAR(255),
                    "code" VARCHAR(5),
                    "symbol" VARCHAR(5),
                    PRIMARY KEY ("id_currency")
                );
            </code></pre></p>


            We have also added currency data importers which are provided in our demoshop.
            Take <var>\Pyz\Zed\DataImport\Business\Model\Currency\CurrencyWriterStep</var> and instantiate it in <var>DataImportBusinessFactory</var>:
             <pre><code class="language-PHP line-numbers">
        namespace Pyz\Zed\DataImport\Business;

        /**
         * @method \Pyz\Zed\DataImport\DataImportConfig getConfig()
         * @SuppressWarnings(PHPMD.ExcessiveClassComplexity)
         */
        class DataImportBusinessFactory extends SprykerDataImportBusinessFactory
        {

               /**
                 * @return \Spryker\Zed\DataImport\Business\Model\DataImporterInterface
                 */
                public function getImporter()
                {
                    $dataImporterCollection = $this-&gt;createDataImporterCollection();
                    $dataImporterCollection-&gt;addDataImporter($this-&gt;createCurrencyImporter());

                }

              /**
                * @return \Spryker\Zed\DataImport\Business\Model\DataImporterInterface
                */
               protected function createCurrencyImporter()
               {
                   $dataImporter = $this-&gt;getCsvDataImporterFromConfig($this-&gt;getConfig()-&gt;getCurrencyDataImporterConfiguration());

                   $dataSetStepBroker = $this-&gt;createTransactionAwareDataSetStepBroker();
                   $dataSetStepBroker-&gt;addStep(new CurrencyWriterStep());

                   $dataImporter-&gt;addDataSetStepBroker($dataSetStepBroker);

                   return $dataImporter;
               }
           }
              </code></pre>

              Take <var>/data/import/currency.csv</var> from the demoshop and put it into your project import directory.

              Configure the importer:

              <pre><code class="language-PHP line-numbers">
        namespace Pyz\Zed\DataImport;

        class DataImportConfig extends SprykerDataImportConfig
        {
            const IMPORT_TYPE_CURRENCY = 'currency';

        }


        /**
         * @return \Generated\Shared\Transfer\DataImporterConfigurationTransfer
         */
        public function getCurrencyDataImporterConfiguration()
        {
            return $this-&gt;buildImporterConfiguration('currency.csv', static::IMPORT_TYPE_CURRENCY);
        }
              </code></pre>

              Add the console command:
               <pre><code class="language-PHP line-numbers">
    namespace Pyz\Zed\Console;

      /**
       * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
       */
      class ConsoleDependencyProvider extends SprykerConsoleDependencyProvider
      {
            /**
              * @param \Spryker\Zed\Kernel\Container $container
              *
              * @return \Symfony\Component\Console\Command\Command[]
              */
             public function getConsoleCommands(Container $container)
             {
                 $commands = [
                   new DataImportConsole(DataImportConsole::DEFAULT_NAME . ':' . DataImportConfig::IMPORT_TYPE_CURRENCY),
                 ]

             }
      }
            </code></pre>

            Now you should be able to import currencies using <var>data:import:currency</var> console command.

            With the version 3 we have created the currency switcher twig function which renders drop down with currency selection. Add <var>\Spryker\Yves\Currency\Plugin\CurrencySwitcherServiceProvider</var> service provider to Yves bootstrap.

            <pre><code class="language-PHP line-numbers">
  namespace Pyz\Yves\Application;

  class YvesBootstrap
  {
      /**
       * @return void
      */
      protected function registerServiceProviders()
      {
           $this-&gt;application-&gt;register(new CurrencySwitcherServiceProvider());
       }
  }
           </code></pre>

           And "include" in twig template like <var>{{ spyCurrencySwitch() }}</var>. You may also neet to update your <var>spryker/kernel</var> module so you can configure multiple currencies per store. You can set them like
here:           <pre><code class="language-PHP line-numbers">
  $stores['DE'] = [
    'currencyIsoCodes' =&gt; ['EUR', 'USD'],
  ];</code></pre><p>&#160;</p><p><b>See also:</b></p><ul><li>Learn more about Currency</li></ul><p><![CDATA[
]]></p><p><i>Last review date: Sep. 21, 2017 </i><MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Aurimas Ličkus</i></MadCap:conditionalText><![CDATA[
		]]></p></body>
</html>