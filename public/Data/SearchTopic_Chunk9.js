define({"752":{i:0.00207876546017555,u:"../feature_integration_guides/alternative_products/alternative-products-product-labels-feature-integration-201903.htm",a:"The guide describes the procedure that you need to perform in order to integrate the Alternative Products + Product Label feature into your project.",t:"Alternative Products + Product Label Feature Integration | Spryker"},"753":{i:0.00207876546017555,u:"../feature_integration_guides/alternative_products/alternative-products-wishlist-feature-integration-201903.htm",a:"Alternative Products: Wishlist Feature Integration  Install Feature Frontend Prerequisites To start feature integration, overview and install the necessary features:",t:"Alternative Products + Wishlist Feature Integration | Spryker"},"754":{i:0.00031182517799147,u:"../feature_integration_guides/approval-process-feature-integration-201903.htm",a:"This guide describes all steps needed to be performed in order to integrate the Approval Process feature into your project.",t:"Approval Process Feature Integration | Spryker"},"755":{i:0.00031182517799147,u:"../feature_integration_guides/back-office-feature-integration-201903.htm",a:"Learn how to add the Translation functionality to the basic Back Office feature. This functionality enables back office to be translated into English and German languages in a per-user manner, by default. It will be possible to add other languages, as well as modify translations for the added ones. ",t:"Feature Integration - Back Office | Spryker"},"756":{i:0.00031182517799147,u:"../feature_integration_guides/cart-non-splittable-products-feature-integration-201903.htm",a:"Cart: Non-Splittable Products Feature Integration  Install Feature Core Prerequisites To start feature integration, overview and install the necessary features: 1) Set up Behavior Adjust Concrete Product Quantity Add the following plugins to your project:",t:"Cart + Non-Splittable Products Feature Integration | Spryker"},"757":{i:0.00031182517799147,u:"../feature_integration_guides/category-image-feature-integration-201903.htm",a:"The Category Image feature allows adding images to subcategories. This guide walks you through the process of integrating the feature into your project.",t:"Category Image Feature Integration | Spryker"},"758":{i:0.00031182517799147,u:"../feature_integration_guides/cms-feature-integration-guide-201903.htm",a:"Multi-store CMS Pages feature allows making CMS pages visible or hidden on the store website. The guide describes how to integrate the feature into your project",t:"CMS Feature Integration Guide | Spryker"},"759":{i:0.000444351127295032,u:"../feature_integration_guides/cms-block-widget-integration-201903.htm",a:"The CMS Block Widget feature allows adding content snippets to a page. This guide walks you through the process of integrating the feature into your project.",t:"CMS Block Widget Feature Integration | Spryker"},"760":{i:0.000932420859055573,u:"../feature_integration_guides/cms-page-search-product-lists-integration-201903.htm",a:"The CMS Page Search Product Lists feature allows seeing search results for CMS and product pages. The guide describes how to enable the feature in the project.",t:"CMS Page Search Product Lists Feature Integration | Spryker"},"761":{i:0.000444351127295032,u:"../feature_integration_guides/cms-pages-in-search-results-integration-201903.htm",a:"The CMS Pages in Search Results feature allows seeing search results for CMS pages. This guide describes the process of integrating the feature into your project.",t:"CMS Pages in Search Results Feature Integration | Spryker"},"762":{i:0.00207876546017555,u:"../feature_integration_guides/company_account/company-account-feature-integration-201903.htm",a:"This integration guide provides a set of procedures needed to be performed in order to integrate the Business on Behalf feature into your project.",t:"Company Account Feature Integration | Spryker"},"763":{i:0.00031182517799147,u:"../feature_integration_guides/customer-access-feature-integration-201903.htm",a:"Customer Access Feature Integration  Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Customer Access Feature Integration | Spryker"},"764":{i:0.00031182517799147,u:"../feature_integration_guides/merchant-contracts-feature-integration-201903.htm",a:"Merchant Contracts Feature Integration  Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Merchant Contracts Feature Integration | Spryker"},"765":{i:0.00207876546017555,u:"../feature_integration_guides/merchant_custom_prices/merchant-custom-prices-feature-integration-201903.htm",a:"The Merchant Custom Price Feature allows setting specific prices for merchants. The guide describes the process of integrating the feature into your project.",t:"Merchant Custom Prices Feature Integration | Spryker"},"766":{i:0.00128341102341595,u:"../feature_integration_guides/merchant_product_restrictions/merchant-product-restrictions-feature-integration-201903.htm",a:"Merchant Product Restrictions allows setting access to particular products. This guide describes the process of integrating the feature into a project.",t:"Merchant Product Restrictions Feature Integration | Spryker"},"767":{i:0.00207876546017555,u:"../feature_integration_guides/minimum_order_value/minimum-order-value-feature-integration-201903.htm",a:"This guide provides a set of procedure needed to be performed in order to integrate the latest version of Minimum Order Value feature to your project.",t:"Minimum Order Vakue - Feature Integration | Spryker"},"768":{i:0.00207876546017555,u:"../feature_integration_guides/multiple_carts/multiple-carts-feature-integration-201903.htm",a:"Multiple Carts allows customers to manage multiple shopping carts in one account. The guide describes how to integrate the feature into your project.",t:"Multiple Carts Feature Integration | Spryker"},"769":{i:0.00207876546017555,u:"../feature_integration_guides/multiple_carts_+_quick_order/multiple-carts-quick-order-integration-201903.htm",a:"The Quick Order Feature allows ordering products by entering SKU and quantity in one page. The guide describes how to integrate the feature into your project. ",t:"Multiple Carts Add to Cart Feature Integration | Spryker"},"770":{i:0.00207876546017555,u:"../feature_integration_guides/multiple_carts_+_reorder/multiple-carts-reorder-feature-integration-201903.htm",a:"The Reorder Feature allows reordering previous orders. This guide will walk you through the process of integrating the feature into your project. ",t:"Multiple Carts Reorder Feature Integration | Spryker"},"771":{i:0.00031182517799147,u:"../feature_integration_guides/prices-feature-integration-201903.htm",a:"The Volume Prices Feature allows setting specific prices for units based on quantities. The guide describes how to integrate the feature into your project.",t:"Prices Feature Integration | Spryker"},"772":{i:0.00031182517799147,u:"../feature_integration_guides/product-is-available-again-feature-integration-201903.htm",a:"The Product Is Available Again feature enables customers to subscribe to newsletters about desired out-of-stock products which are to inform them once the products are available. The article walks you through the process of integrating the feature into your Spryker application. ",t:"Feature Integration - Product Is Available Again | Spryker"},"773":{i:0.00207876546017555,u:"../feature_integration_guides/product_measurement_unit/product-measurement-units-feature-integration-201903.htm",a:"The Measurement Units feature allows defining specific units of measure for products. The guide describes how to integrate the feature into your project.",t:"Feature Integration - Product Measurement Unit | Spryker"},"774":{i:0.00207876546017555,u:"../feature_integration_guides/product_packaging_unit/product-packaging-unit-feature-integration-201903.htm",a:"The Product Packaging Unit Feature allows defining packaging units per abstract product. This guide describes how to integrate the feature into your project.",t:"Product Packaging Unit Feature Integration | Spryker"},"775":{i:0.00186718332047617,u:"../feature_integration_guides/quick_order/quick-order-feature-integration-201903.htm",a:"Quick Order Feature Integration  ML Multi-language MC Multi-currency Install Feature Core Prerequisites To start the feature integration, overview and install the necessary features: 1) Install the Required Modules Using Composer Run the following command(s) to install the required modules: composer ...",t:"Quick Order Feature Integration | Spryker"},"776":{i:0.00228730596627071,u:"../feature_integration_guides/quick_order/quick-order-discontinued-products-feature-integration-201903.htm",a:"Quick Add to Cart + Discontinued Products allow showing products in cart as \"discontinued\". This guide describes how to integrate the feature into the project.",t:"Quick Add to Cart + Discontinued Products | Spryker"},"777":{i:0.00228730596627071,u:"../feature_integration_guides/quick_order/quick-order-measurement-units-feature-integration-201903.htm",a:"Quick Add to Cart + Measurement Units allow selling products by any unit of measure with a click. This guide describes how to integrate this feature into your project.",t:"Quick Add to Cart + Measurement Units | Spryker"},"778":{i:0.00228730596627071,u:"../feature_integration_guides/quick_order/quick-order-non-splittable-products-feature-integration-201903.htm",a:"Quick Order: Non-splittable Products Feature Integration  ML Multi-language MC Multi-currency Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Quick Add to Cart + Non-splittable Products Feature Integration | Spryker"},"779":{i:0.00228730596627071,u:"../feature_integration_guides/quick_order/quick-order-packaging-units-feature-integration-201903.htm",a:"Quick Add to Cart + Packaging Units allow buying products in different packaging units. This guide describes how to integrate this feature into your project.",t:"Quick Add to Cart + Packaging Units Feature Integration | Spryker"},"780":{i:0.00289144634050402,u:"../feature_integration_guides/quick_order/quick-order-shopping-lists-feature-integration-201903.htm",a:"Quick Add to Cart + Shopping Lists allow creating a shopping list to buy products. This guide describes how to integrate this feature into your project.",t:"Quick Add to Cart + Shopping Lists Feature Integration | Spryker"},"781":{i:0.00031182517799147,u:"../feature_integration_guides/reclamations-feature-integration-201903.htm",a:"Reclamations Feature Integration Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Reclamations Feature Integration | Spryker"},"782":{i:0.00207876546017555,u:"../feature_integration_guides/shared_carts/shared-carts-feature-integration-201903.htm",a:"The Shared Carts Feature allows sharing shopping carts within an entire business unit. The guide describes how to integrate the feature into your project. ",t:"Shared Carts Feature Integration | Spryker"},"783":{i:0.000527126016603599,u:"../feature_integration_guides/shopping_lists/shopping-lists-feature-integration-201811.htm",a:"Shopping list is a list of items that buyers buy or plan to buy frequently. Shopping lists allow your customers to quickly order regualry bought items. This guide will walk you through the process of integrating the Shopping lists feature into your project.",t:"Shopping Lists Feature Integration | Spryker"},"784":{i:0.00285458518196153,u:"../feature_integration_guides/shopping_lists_+_product_options/shopping-lists-product-options-feature-integration-201903.htm",a:"Shopping Lists: Product Options Feature Integration  Install Feature Core Prerequisites To start feature integration, overview ad install the necessary features.",t:"Shopping Lists: Product Options Feture Integration | Spryker"},"785":{i:0.00031182517799147,u:"../feature_integration_guides/cart_-integration.htm",a:" This article describes how to add product variants and product pictures to an existing cart Prerequisites: Before starting make sure you are familiar with the concept of Spryker Super Attributes.  UI Changes: Cart now supports changing the items in the cart by modifying their attributes. If we have ...",t:"Cart Integration   "},"786":{i:0.00031182517799147,u:"../feature_integration_guides/discount-promotion-feature-integration.htm",a:"This guides provides you with a set of steps needed to be performed in order to integrate the Discount Promotion feature into your project.",t:"Feature Integration - Discount Promotion | Spryker"},"787":{i:0.00031182517799147,u:"../feature_integration_guides/category-filter-feature-integration.htm",a:"The Category Filters Feature allows arranging items into categories and customizing filters. This guide describes how to integrate the feature into your project.",t:"Feature Integration - Category Filters | Spryker"},"788":{i:0.00031182517799147,u:"../feature_integration_guides/product-group-feature-integration.htm",a:"Prerequisites To prepare your project to work with Product groups: Require the Product Group modules in your composer.json by running composer require spryker/product-group spryker/product-group-collector. Install the new database tables. By running vendor/bin/console propel:diff. Propel should ...",t:"Feature Integration - Product Group"},"789":{i:0.00031182517799147,u:"../feature_integration_guides/enabling-cms-widget.htm",a:" \n\t\t\tCMS content widgets is a CMS feature for adding  dynamic content to CMS pages/blocks.\n\t\t For example, you can list a single product, product lists, product groups or product sets.\n\t\t Integration First of all you need to install the cms-content-widget module with Composer (update composer.json ...",t:"Enabling the Content Widget  "},"790":{i:0.00031182517799147,u:"../feature_integration_guides/cms-block-multistore.htm",a:"To prepare your project to work with multi-store CMS Blocks, review an perform the procedure described in this topic.",t:"Feature Integration - Multi-store CMS Block | Spryker"},"791":{i:0.00031182517799147,u:"../feature_integration_guides/enabling-category-cms-block.htm",a:"The procedure described in this topic will guide you through the process of installing the Category CMS Blocks in your project.",t:"Installing the Category CMS Blocks | Spryker"},"792":{i:0.00031182517799147,u:"../feature_integration_guides/product-block.htm",a:"The steps described in this article guide you through the process that you need to perform to install the Product CMS Block in your project.",t:"Installing the Product CMS Block | Spryker"},"793":{i:0.00031182517799147,u:"../feature_integration_guides/permissions-feature-integration.htm",a:"The Permissions feature is shipped with following modules: To install the feature, follow the steps below. 1. Install necessary modules using composer composer update \"spryker/*\" \"spryker-shop/*\"\ncomposer require spryker/permission-extension:\"^1.0.0\" spryker/permission:\"^1.0.0\" 2. Add plugins to ...",t:"Permissions Feature Integration"},"794":{i:0.00031182517799147,u:"../feature_integration_guides/enabling-gift-cards.htm",a:" The Gift Cards feature is shipped with the following modules: GiftCard: implements basic functionality of the Gift Cards feature as  well as the  Replacement value-checking strategy . GiftCardBalance: implements gift card  Balance value-checking strategy . GiftCardMailConnector: responsible for ...",t:"Enabling Gift Cards"},"795":{i:0.00031182517799147,u:"../feature_integration_guides/payment-provider-integration.htm",a:" The Spryker Commerce OS offers integrations with several payment providers that can be used in the checkout and order management. Easily define the availability of a provider based on customer preferences and local regulations and specify the order the providers are displayed in during checkout.\n",t:"Payment Provider Integration    "},"796":{i:0.00031182517799147,u:"../feature_integration_guides/product-label-feature-integration.htm",a:"The Product Label feature allows highlighting specific products in your online shop. The guide describes how to integrate the feature in the project.",t:"Product Label Feature Integration | Spryker"},"797":{i:0.00207876546017555,u:"../feature_integration_guides/product_label/product-label-feature-integration-1-0.htm",a:"The Product Label feature allows highlighting specific products in your online shop. The guide describes how to integrate the feature in the project.",t:"Product Label Feature Integration | Spryker"},"798":{i:0.000857277694755403,u:"../feature_integration_guides/product_lists/product-lists-feature-integration-201903.htm",a:"Product Lists Feature Integration  Install Feature Core Prerequisites To start the feature integration, overview and install the necessary features: 1) Install the Required Modules Using Composer Run the following command(s) to install the required modules: composer require ...",t:"Product Lists Feature Integration | Spryker"},"799":{i:0.00031182517799147,u:"../feature_integration_guides/product-review-feature-integration.htm",a:"Prerequisites To prepare your project to work with Product Reviews: Require the Product Review modules in your composer by running\n             composer require spryker/product-review composer require spryker/product-review-collector composer require spryker/product-review-gui Install the new ...",t:"Feature Integration - Product Reviews"},"800":{i:0.00207876546017555,u:"../feature_integration_guides/product-set-feature-integration.htm",a:"The Product Sets feature allows you to put together multiple products for the purpose of emphasizing that the set of products can be bought together.",t:"Product Set Feature Integration | Spryker"},"801":{i:0.00031182517799147,u:"../feature_integration_guides/product-relation-integration.htm",a:"Register a new collector plugin. How to is in .\n Then register a new twig service plugin  \\Spryker\\Yves\\ProductRelation\\Plugin\\ProductRelationTwigServiceProvider inside the \\Pyz\\Yves\\Application\\YvesBootstrap::registerServiceProviders plugin stack.  This will allow to use the UI carousel component ...",t:"Product Relation Integration"},"802":{i:0.000759883373728042,u:"../feature_integration_guides/shopping_lists/shopping-lists-feature-integration-201903.htm",a:"Shopping Lists Feature Integration  Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Shopping Lists Feature Integration v.201903 | Spryker"},"803":{i:0.00031182517799147,u:"../feature_integration_guides/product-store-relation-feature-integration.htm",a:" General Information \n            By default abstract products are available in all stores. This feature provides additional configuration when:\n             you have multiple stores, and you want to manage the appearance of abstract products per store. Prerequisites To prepare your project to work ...",t:"Feature Integration - Multi-Store Products "},"804":{i:0.000400175810860511,u:"../updating_the_legacy_demoshop_with_scos/about-updating.htm",a:"If you use Spryker Legacy Demoshop, you can enhance it with specific components of SCOS or make the Legacy Demoshop compatible with them. For example, you can: Make the Legacy Demoshop compatible with the Modular Frontend ,  Make the Legacy Demoshop compatible with the Atomic Frontend Set up ...",t:"Updating the Legacy Demoshop with SCOS"},"805":{i:0.00238018405412305,u:"../updating_the_legacy_demoshop_with_scos/demoshop-with-modular-frontend.htm",a:"This guide provides step-by-step instructions on how to make the Legacy Demoshop compatible with the Modular Frontend",t:"Making the Legacy Demoshop Compatible with the Modular Frontend | Spryker"},"806":{i:0.00238018405412305,u:"../updating_the_legacy_demoshop_with_scos/demoshop-with-atomic-frontend.htm",a:"This guide provides step-by-step instructions on how to make the Legacy Demoshop compatible with the Atomic Frontend",t:"Making the Legacy Demoshop Compatible with the Atomic Frontend | Spryker"},"807":{i:0.00139146184752624,u:"../updating_the_legacy_demoshop_with_scos/demoshop-with-publish-and-sync.htm",a:"This guide provides step-by-step instructions on how to make the Legacy Demoshop compatible with Publish\u0026Syncronize",t:"Making the Legacy Demoshop Compatible with Publish \u0026amp; Synchronize | Spryker"},"808":{i:0.00194159586425753,u:"../updating_the_legacy_demoshop_with_scos/setting-up-shopuicompatibility.htm",a:" The ShopUiCompatibility module is the main module necessary for the  Atomic Frontend . This module is provided in SCOS by default. The following guide describes how to set up the ShopUICompatibility in the Legacy Demoshop.   To install ShopUiCompatibility module in the Legacy Demoshop, follow the ...",t:"Setting up ShopUiCompatibility Module in the Legacy Demoshop "},"809":{i:0.00194159586425753,u:"../updating_the_legacy_demoshop_with_scos/twig-compatibility-mode-demoshop-vs-suite.htm",a:"In SCOS, variables from the Twig templates can be accessed from the _view variable. In Demoshop, theTwig variables are passed to the global Twig namespace.",t:"Twig Compatibility: Legacy Demoshop vs SCOS | Spryker"},"810":{i:0.00207876546017555,u:"../silex_replacement/silex-replacement-201903.htm",a:"Silex is going to be replaced with a Spryker Application. The article is a part of a series of articles about Silex replacement in Spryker. It contains information about the reasons why it is going to be replaced, backward compatibility information, steps to be taken, changes in the old procedure and the new procedure. ",t:"Silex Replacement | Spryker"},"811":{i:0.00207876546017555,u:"../silex_replacement/application-201903.htm",a:"Now, instead of using the Silex Microframework and its Service Provider capabilities, Spryker Application and its Application Plugins are going to be used to add global services. All the Application Plugins are added within their corresponding Dependency Providers. No reason to extend the Application Plugins is expected. ",t:"Application | Spryker"},"812":{i:0.00207876546017555,u:"../silex_replacement/container-201903.htm",a:"Now, instead of using the \"Pimple Container\" class, Spryker is going to implement its own Continer since the original container is widely used by the Silex Microframework we are currently refactoring out. The Continer is used with services like Twig and Plugin stacks. The article contains information on adding services, checking if they are added, removing or extending them. Troubleshooting information is included too. ",t:"Container | Spryker"},"813":{i:0.00031182517799147,u:"../silex_replacement/migrating-away-from-silex.htm",a:"To refactor away from Silex, install the following packages: spryker/application \u003e= 3.13.2 spryker/container \u003e= 1.1.0 spryker/silex \u003e= 0.2.0 spryker/symfony \u003e= 3.2.2 spryker-shop/shop-application \u003e= 1.4.1 If you have problems installing one of those, use composer\u0027s why and why-not console commands ...",t:"Migrating Away From Silex"},"814":{i:0.00031182517799147,u:"../tutorials/about-tutorials.htm",a:" Welcome to Spryker Tutorials, in this section of the documentation you will find instructions on how to perform all types of tasks with Spryker Commerce OS If you are a PHP developer who is new to Spryker, visit our  free online Bootcamp Training  for a crash introduction course to Spryker. Check ...",t:"About Tutorials "},"815":{i:0.00031182517799147,u:"../tutorials/introduction/introduction-tutorials.htm",a:"Introduction Tutorials Introduction tutorials describe how to perform basic tasks with the Spryker Commerce OS.",t:"Introduction Tutorials"},"816":{i:0.00207876546017555,u:"../tutorials/introduction/tutorial-architecture-walkthrough-scos.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. The main idea of this task is to understand the Spryker architecture and how things work all together.  We will implement a very simple functionality ...",t:"Tutorial - Architectural Walkthrough - Spryker Commerce OS"},"817":{i:0.00031182517799147,u:"../tutorials/introduction/architectural-walkthrough-legacy-demoshop.htm",a:"This is an architecture walkthrough as a coding exercise. Challenge Description Build a HelloSpryker module in Zed that will render the Hello Spryker! string, in reverse order, on the screen. The string must be retrieved from the config. Build a HelloSpryker module in Yves that will render the Hello ...",t:"Tutorial - Architectural Walkthrough - Legacy Demoshop"},"818":{i:0.00031182517799147,u:"../tutorials/introduction/boosting-cart-based-search.htm",a:"Challenge Description Based on the colors of the products that are in the cart of the user, the catalog should first display products that have the same color. Let’s say for example that there’s a red product in the cart, then the top results in the catalog should also contain red products. ...",t:"Tutorial - Boosting Cart Based Search"},"819":{i:0.00031182517799147,u:"../tutorials/introduction/t-checkout-and-step-engine-spryker-commerce-os.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description This task helps you to learn how to: Work with Checkout and the Step Engine Apply and use discounts Extend the Spryker core code ...",t:"Tutorial - Checkout and Step Engine - Spryker Commerce OS"},"820":{i:0.00031182517799147,u:"../tutorials/introduction/checkout.htm",a:"Challenge Description Integrate an additional step into the checkout process; a Voucher step where a customer enters a voucher code and gets a discount. Add the Voucher step after the Payment one. To explore further before starting, you can read about the  Checkout  and the  StepEngine  modules. ...",t:"Tutorial - Checkout - Legacy Demoshop"},"821":{i:0.00031182517799147,u:"../tutorials/introduction/t-cms.htm",a:"This artice helps you to create a static Contact Us page and integrate it into Yves. and then create your own template and use it.",t:"Tutorial - CMS | Spryker"},"822":{i:0.00031182517799147,u:"../tutorials/introduction/tutorial-hello-world-scos.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description Show \"Hello World!\" string on a web page on your browser. To do so, build a new module called HelloWorld. Build the HelloWorld ...",t:"Tutorial - Hello World - Spryker Commerce OS"},"823":{i:0.00031182517799147,u:"../tutorials/introduction/hello-world-legacy.htm",a:"Challenge Description Build a HelloWorld  module in Yves that will render the Hello world! string on the page. Manually building the HelloWorld module in Yves Create a module folder in Yves under src/Pyz/Yves/. This will be the location for all the module  files. Create an IndexController (as ...",t:"Tutorial - Hello World - Legacy Demoshop"},"824":{i:0.00031182517799147,u:"../tutorials/introduction/t-content-search-attribute-cart-based-catalog-personalization.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description This is another task on personalization. In this one, we will boost and personalize the catalog using the color attribute of a ...",t:"Tutorial - Content and Search - Attribute-Cart-Based Catalog Personalization - Spryker Commerce OS"},"825":{i:0.00031182517799147,u:"../tutorials/introduction/dynamic-content-page.htm",a:"Challenge Description Create a CMS page that displays some (marketing) text and a list of personalized products as offers. Challenge Solving Highlights Static page For creating a CMS page, follow these steps: Create a CMS template called personalized_products.twig under ...",t:"Tutorial - Dynamic Content Page - Legacy Demoshop"},"826":{i:0.00031182517799147,u:"../tutorials/introduction/t-oms-and-state-machines-spryker-commerce-os.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description In this task you will create a full order management process (OMS) using the Spryker state machine and then use it in your shop. ...",t:"Tutorial - OMS and State Machines - Spryker Commerce OS"},"827":{i:0.00031182517799147,u:"../tutorials/introduction/oms-state-machine.htm",a:"Challenge Description Create a simple state machine that demonstrates an order process. The simple order process has the following states: new, paid, shipped, closed, returned, and invalid. We use the invalid state in case a payment is unauthorized (could be used with some other cases as well). In ...",t:"Tutorial - OMS State Machine - Legacy Demoshop"},"828":{i:0.00031182517799147,u:"../tutorials/introduction/setup-hello-world-queue.htm",a:"This Tutorial demonstrates a simple Hello, World queue use case. We will create a hello queue and send/receive our messages to/from this queue with Hello, World content.  For this purpose, we will be using our default queue engine RabbitMQ.\n\n Preparation\n Before you begin, check to see that the ...",t:"Tutorial - Set Up a \"Hello World\" Queue - Legacy Demoshop"},"829":{i:0.00031182517799147,u:"../tutorials/introduction/stores.htm",a:"Challenge Description Override a Zed core module on project level, and then override it on store level. You can also repeat the same challenge for a Yvesmodule Challenge Solving Highlights Project Level Let’s first override on the project level. Add an IndexController::indexAction() to ...",t:"Tutorial - Stores - Legacy Demoshop"},});