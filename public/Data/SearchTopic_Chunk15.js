define({"1196":{i:0.000432260431566089,u:"../capabilities/development/event/event-configure-q.htm",a:" Implementation is already present in demoshop and all code samples can be found there. To implement an events queue: Click to expand the code sample \u003c?php\nnamespace Pyz\\Client\\RabbitMq;\n\nuse ArrayObject;\nuse Generated\\Shared\\Transfer\\RabbitMqOptionTransfer;\nuse ...",t:"Configuring an Events Queue  "},"1197":{i:0.0016504322673781,u:"../capabilities/order_management/step_engine/step-engine-define-step.htm",a:" When adding a new step, you must implement the StepInterface. The StepInterface defines all the methods that StepEngine needs when executing a step: preCondition() - here you define the requirements for the step to get executed requireInput() - here you define if the step requires user input (e.g. ...",t:"Defining a Step - Step Engine    "},"1198":{i:0.00261355127929747,u:"../feature_integration_guides/shopping_lists_+_product_options_-_outdated/shopping-lists-product-options-feature-integration-201903-outdated.htm",a:"Shopping Lists: Product Options Feature Integration  Install Feature Core Prerequisites To start feature integration, overview ad install the necessary features.",t:"Shopping Lists: Product Options Feture Integration | Spryker"},"1199":{i:0.000726896777843552,u:"../capabilities/cart/calculation/calculation.htm",a:"The Calculation module is used to calculate the cart totals that are displayed in the cart/checkout or when the order is placed.",t:"Calculation | Spryker"},"1200":{i:0.000289658649513375,u:"../capabilities/product_management/product/product-define-variants.htm",a:" \n            Spryker’s data structure for products allows to design a product hierarchy.\n            The abstract product does not have stock, but defines various default properties for the descendant concrete products (product variants).\n            The concrete product (product variant) always ...",t:"Defining Variants with Abstract and Concrete Products   "},"1201":{i:0.000750829963368647,u:"../capabilities/shopping_list/products_with_options_-_outdated/product-options-in-shopping-lists-overview-outdated.htm",a:"When adding products with options to a shopping list from product details page, the selected options are saved in the shopping list.",t:"Products with Options in the Shopping Lists Feature Overview | Spryker"},"1202":{i:0.000552314304243711,u:"../feature_integration_guides/glue_api/rest_schema_validation/rest-schema-validation-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the REST Schema Validation feature in Spryker OS.",t:"REST Schema Validation Feature Integration"},"1203":{i:0.000291935382875393,u:"../capabilities/development/zed_api/zed-api-config.htm",a:" First of all we need to decide on the resources being exposed. Those will be mapped inside the ApiDependencyProvider:\n\n \u003c?php\nuse Spryker\\Zed\\CustomerApi\\Communication\\Plugin\\Api\\CustomerApiResourcePlugin;\nuse Spryker\\Zed\\ProductApi\\Communication\\Plugin\\Api\\ProductApiResourcePlugin;\n\n    /**\n     * ...",t:"Zed API Configuration    "},"1204":{i:0.000337807508992515,u:"../feature_integration_guides/shopping_lists/shopping-lists-feature-integration-201811.htm",a:"Shopping list is a list of items that buyers buy or plan to buy frequently. Shopping lists allow your customers to quickly order regualry bought items. This guide will walk you through the process of integrating the Shopping lists feature into your project.",t:"Shopping Lists Feature Integration | Spryker"},"1205":{i:0.0016504322673781,u:"../feature_integration_guides/agent_assist/agent-assist-feature-integration-201811.htm",a:"Agent Assist enables agent users to log in to shop to perform actions on customers’ behalf. This guide describes how to install Agent Assist in your project.",t:"Feature Integration - Agent Assist | Spryker"},"1206":{i:0.000260963952946877,u:"../capabilities/development/data-feed.htm",a:" BETA version\n This module is still in development. For questions and inquiries please contact  academy@spryker.com DataFeed module helps to query abstract products, categories, prices, availability data and related information for exporting or processing. The data Feed is not dependent on ...",t:"Data Feed Modules    "},"1207":{i:0.000641783109128836,u:"../capabilities/gift_cards/gift_card_purchase_and_management/gift-cards-purchase-redeeming.htm",a:"This article describes general concepts of gift cards, gift card’s purchase and redeeming process, as well as the various use case scenarios.",t:"Gift Cards Purchase and Redeeming | Spryker"},"1208":{i:0.0016504322673781,u:"../feature_integration_guides/minimum_order_value/minimum-order-value-feature-integration-201811.htm",a:"The Minimum Order Value Feature allows setting a minimum threshold for customer\u0027s orders. The guide describes how to integrate the feature into your project. ",t:"Minimum Order Value Feature Integration | Spryker"},"1209":{i:0.00150898746221077,u:"../capabilities/company_account/product_restrictions_from_merchant_to_buyer/product-restrictions-from-merchant-to-buyer-overview.htm",a:"Product Restrictions allow merchants to define the products that are available to each of their B2B customers.",t:"Product Restrictions from Merchant to Buyer Overview | Spryker"},"1210":{i:0.000291935382875393,u:"../capabilities/development/zed_api/zed-api-project-implementation.htm",a:" For the API and the API bundles to get activated we need to configure our own service provider stack in the Zed ApplicationDependencyProvider class:\n\n \u003c?php\n    /**\n     * @param \\Spryker\\Zed\\Kernel\\Container $container\n     *\n     * @return \\Silex\\ServiceProviderInterface[]\n     */\n    protected ...",t:"Project Implementation - Zed API    "},"1211":{i:0.000662989672618536,u:"../feature_integration_guides/glue_api/products-feature-integration-201907.htm",a:"Products Feature Integration Install Feature API Prerequisites To start feature integration, overview and install the necessary features:",t:"Products Feature Integration"},"1212":{i:0.000986385355417773,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts-of-registered-users.htm",a:"This article describes the endpoints that provide access to shopping carts management functionality for the carts of the registered users. ",t:"Managing Carts of Registered Users"},"1213":{i:0.00146617765151816,u:"../feature_integration_guides/glue_api/product_api_feature_integration/product-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Product API feature in Spryker OS.",t:"Product API Feature Integration | Spryker"},"1214":{i:0.000260963952946877,u:"../capabilities/development/sequence-number.htm",a:" \n    Sometimes it should be ensured for a project that the just generated number is not used for the same purpose twice.\n    Spryker provides Sequence Number module which handles the unique number generation.\n General Usage The sequence number facade contains ::generate() method which provides a ...",t:"Sequence Number    "},"1215":{i:0.000324908125145147,u:"../capabilities/search_and_filter/search-configure-elasticsearch.htm",a:" Elasticsearch is a NoSQL data store which allows us to predefine the structure of the data we’ll be storing in it. Since the data structure we use is static, we would like to define it in advance. The definitions of the indexes and mapping types are written in JSON format, just as you’ll find it in ...",t:"Configure Elasticsearch    "},"1216":{i:0.000317716793324736,u:"../capabilities/product_management/product_reviews/product-review-feature-configuration.htm",a:" Configuring the Maximum Rating To change the maximum allowed rating, alter the Client configuration by extending the \\Spryker\\Client\\ProductReview\\ProductReviewConfig class in your project directory. Override getMaximumRating method to return the desired selectable maximum rating value. \n        ...",t:"Feature Configuration - Product Reviews  "},"1217":{i:0.00229539451241814,u:"../capabilities/product_management/product_options/product-option-module-1.htm",a:" ML Multi-language MS Multi-store MC Multi-currency This module manages the product options. The product options are product additions that can be sold with the actual product. Each product abstract can have multiple product option groups attached. Each product option value has a price, which ...",t:"Product Option Module - Version 1    "},"1218":{i:0.00230131830383903,u:"../capabilities/development/collector/collector-types.htm",a:" Data Collection\n\nData aggregation is a complex process of transforming scattered data between different resources, into a new one, usually smaller then the input. There are two basic Collector Types, depending on the way the data is being collected.\n\n AbstractPdoCollector - uses PHP Data Objects ...",t:"Collector Types "},"1219":{i:0.00929982406253782,u:"../feature_integration_guides/glue_api/glue-application-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Glue Application feature in Spryker OS.",t:"Glue Application Feature Integration"},"1220":{i:0.000512059040530817,u:"../capabilities/media_management/product-image-management.htm",a:"Group several images into sets and link them to products. One product can have several named and localized sets of images.",t:"Product Image Management | Spryker"},"1221":{i:0.00214266493735115,u:"../feature_integration_guides/company_account/company-account-feature-integration-201903.htm",a:"This integration guide provides a set of procedures needed to be performed in order to integrate the Business on Behalf feature into your project.",t:"Company Account Feature Integration | Spryker"},"1222":{i:0.000270938175444004,u:"../industry_partners/payment/payone/legacy_demoshop/v1_0/payone-paypal-express-checkout.htm",a:" The payment using PayPal requires redirect to PayPal website. When the customer is redirected to PayPal’s website, he must authorize himself and he has the option to either cancel or validate the transaction. A concern regarding payment flows that require redirection on third party website pages is ...",t:"PayOne - PayPal Express Checkout Payment"},"1223":{i:0.0024416827576594,u:"../capabilities/order_management/state_machine/state-machine-patterns.htm",a:"This topic provides an overview of the state machine patterns and the additional useful information.",t:"State Machine Patterns | Spryker"},"1224":{i:0.0005057448624256,u:"../capabilities/development/event/event-asynch.htm",a:"Asynchronous Events  An asynchronous event can be created by using the addListenerQueued method instead of addListener. The difference is that it queues the event to be processed later by another process/consumer. You must have queue configured before using this feature, see bellow.",t:"Asynchronous Events  "},"1225":{i:0.00192878275481076,u:"../capabilities/order_management/state_machine/state-machine-persistence.htm",a:"To persist the state of the item and make the connection with the state machine, you need to store related data into the database.",t:"Persistence - State Machine | Spryker"},"1226":{i:0.0005057448624256,u:"../capabilities/development/event/event-priority.htm",a:" The Event Collector \\Spryker\\Service\\Event\\Dependency\\EventCollectionInterface uses a priority queue store events so each that event can have different priority and will be executed in correct order when triggered. For example: \u003c?php\n$eventCollection\n    ...",t:"Listener Priority  "},"1227":{i:0.000530827605576364,u:"../resources/gluepublicspec/swagger-ui/oauth2-redirect.html",a:"\r\n    \u0027use strict\u0027;\r\n    function run () {\r\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\r\n        var sentState = oauth2.state;\r\n        var redirectUrl = oauth2.redirectUrl;\r\n        var isValid, qp, arr;\r\n        if (/code|token|error/.test(window.location.hash)) {\r\n            qp = window.location.hash.substring(1);\r\n        } else {\r\n            qp = location.search.substring(1);\r\n        }\r\n        arr = qp.split(\"\u0026\")\r\n        arr.forEach(function (v,i,_arr) { _arr[i] = \u0027\"\u0027 + v.replace(\u0027=\u0027, \u0027\":\"\u0027) + \u0027\"\u0027;})\r\n        qp = qp ? JSON.parse(\u0027{\u0027 + arr.join() + \u0027}\u0027,\r\n                function (key, value) {\r\n                    return key === \"\" ? value : decodeURIComponent(value)\r\n                }\r\n        ) : {}\r\n        isValid = qp.state === sentState\r\n        if ((\r\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\"||\r\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\"\r\n        ) \u0026\u0026 !oauth2.auth.code) {\r\n            if (!isValid) {\r\n                oauth2.errCb({\r\n                    authId: oauth2.auth.name,\r\n                    source: \"auth\",\r\n                    level: \"warning\",\r\n                    message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn\u0027t returned from auth server\"\r\n                });\r\n            }\r\n            if (qp.code) {\r\n                delete oauth2.state;\r\n                oauth2.auth.code = qp.code;\r\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\r\n            } else {\r\n                let oauthErrorMsg\r\n                if (qp.error) {\r\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\r\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\r\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\r\n                }\r\n                oauth2.errCb({\r\n                    authId: oauth2.auth.name,\r\n                    source: \"auth\",\r\n                    level: \"error\",\r\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server\"\r\n                });\r\n            }\r\n        } else {\r\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\r\n        }\r\n        window.close();\r\n    }\r\n",t:"oauth2-redirect"},"1228":{i:0.0016504322673781,u:"../feature_integration_guides/multiple_carts_+_quick_order/multiple-carts-quick-order-integration-201811.htm",a:"The Quick Order Feature allows ordering products by entering SKU and quantity in one page. The guide describes how to integrate the feature into your project. ",t:"Multiple Carts Add to Cart Feature Integration | Spryker"},"1229":{i:0.00308764950954433,u:"../capabilities/cart/quick_order/quick-order.htm",a:"The Quick Order feature enables customers to buy their commonly ordered products in just a few clicks, encouraging them to come back and buy more.",t:"Quick Order | Spryker"},"1230":{i:0.000395408474126064,u:"../feature_integration_guides/glue_api/catalog-search-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Search API feature in Spryker OS.",t:"Catalog Search API Feature Integration"},"1231":{i:0.0016504322673781,u:"../feature_integration_guides/company_account/business-on-behalf-feature-integration.htm",a:"The Business on Behalf feature allows you to have multiple company users per customer account as well as to select one company user as a default company user. This guide will walk you through the process of integrating the Business on Behalf feature into your project.",t:"Business on Behalf feature Integration | Spryker "},"1232":{i:0.0005057448624256,u:"../capabilities/development/event/event-adding.htm",a:" When adding an event, make sure you first decide what kind of events you want to trigger in your code. Events are stored in a class for later use, by adding its literal string value (ModuleName.subject.action). This value uniquely identifies an event in the event module, and all listeners attached ...",t:"Adding Events  "},"1233":{i:0.00289912448976594,u:"../capabilities/navigation/module-navigation-1-0.htm",a:" Overview The Navigation module manages multiple navigation menus that can be displayed on the frontend (Yves). Every navigation section can contain its own nested structure of navigation nodes. Navigation nodes have types that help define what kind of link they represent. The following node types ...",t:"Navigation Module Version 1.*  "},"1234":{i:0.0016504322673781,u:"../feature_integration_guides/multiple_carts/multiple-carts-feature-integration-201811.htm",a:"Multiple Carts allows customers to manage multiple shopping carts in one account. The guide describes how to integrate the feature into your project.",t:"Multiple Carts Feature Integration | Spryker"},"1235":{i:0.000432260431566089,u:"../capabilities/development/event/event-listen.htm",a:" There are two ways to listen to events, using direct listeners or subscribers. The difference between these two is that a subscriber allows the module providing the subscriber to wire up the handlers in the module that owns it without touching the EventDependencyProvider exception’s initial ...",t:"Listening to Events  "},"1236":{i:0.00173971268438877,u:"../capabilities/development/install-tool.htm",a:" Spryker offers an install tool which can be used to install the system as described in the install recipe file(s). Installation Install the module with composer by running the following command: \n        composer require spryker/install\n         After the installation you can run the command with ...",t:"Install Tool    "},"1237":{i:0.0192966982622736,u:"../feature_integration_guides/glue_api/glue-application-feature-integration-201903.htm",a:"Glue Application Feature Integration The latest version of this guide can be found at  Spryker Core Feature Integration . Install Feature API Prerequisites To start feature integration, overview and install the necessary features:",t:"Glue Application Feature Integration"},"1238":{i:0.00305329310095986,u:"../administration_interface_guide/content_management/content-widgets-201903.htm",a:" CMS widgets allow creating blocks, charts, a dynamic listing of product items, a product set or group, as well as embedding media files into CMS pages or blocks. This article describes how to add and use content widgets in your shop. CMS Widget Overview In Zed, a shop administrator can add the ...",t:"Content Widgets  "},"1239":{i:0.00192878275481076,u:"../capabilities/order_management/state_machine/state-machine-events.htm",a:"This topic describes the use of event triggers and the GET requests that are used.",t:"Triggering Events - State Machine | Spryker"},"1240":{i:0.000289658649513375,u:"../capabilities/product_management/product/product-lifecycle.htm",a:" The touch tables are able create the snapshot of what’s currently loaded into the Yves data storages ( both key-value and search data storages) If a product was added into the Zed database after the last export, then there’s no corresponding entry in the touch table for that product. Once it’s ...",t:"Product Lifecycle    "},"1241":{i:0.00119276845077586,u:"../capabilities/development/file_system/filesystem-api.htm",a:" Read API  getMetadata(FileSystemQueryTransfer $fileSystemQueryTransfer) Return FileSystemResourceMetadataTransfer, null on failure \u003c?php\n$fileSystemQueryTransfer = new ...",t:"File System API  "},"1242":{i:0.00106316360603856,u:"../feature_integration_guides/merchant_product_restrictions/merchant-product-restrictions-feature-integration-201811.htm",a:"Merchant Product Restrictions allows setting access to particular products. This guide describes the process of integrating the feature into a project.",t:"Merchant Product Restrictions Feature Integration | Spryker"},"1243":{i:0.0005589724124786,u:"../feature_integration_guides/glue_api/product_tax_sets/product-tax-sets-api-feature-integration-201903.htm",a:"This guide will guide you through the process of installing and configuring the Product Tax Sets API feature in your project.",t:"GLUE: Product Tax Sets API Feature Integration | Spryker"},"1244":{i:0.00240488701440944,u:"../capabilities/product_management/product-store_relation/product-store-relation-under-the-hood.htm",a:" Database Schema \n            The Product module introduces a new table: spy_product_abstract_store. The table stores all abstract product-store relations. An abstract product is available in a store when it has a\n            spy_product_abstract_store row for the given abstract product and store ...",t:"Under the Hood - Multi-Store Products  "},"1245":{i:0.000675930989069171,u:"../capabilities/order_management/url-handling-new-entity.htm",a:" The following information describes how to handle URLs for other types of entities that Spryker core provides. Prerequisites Before you begin, make sure the target entity is already in your database (the one to you would like to assign URLs to). In the examples below we\u0027ll call this entity ...",t:"Handling New Types of Entity URLs "},"1246":{i:0.000302392531210531,u:"../industry_partners/payment/payone/legacy_demoshop/v1_0/payone-v1-0.htm",a:" Partner Information We integrate with a wide range of payment methods that can be configured according to your needs and convenience. Payment method flows are configured using state machines.\n\n Payone provides seven main methods of payment:\n\n Credit Card Direct Debit\n Online Transfer Paypal ...",t:"Payment Integration - BS PayOne - 1.0"},"1247":{i:0.00230131830383903,u:"../capabilities/development/collector/collector-running.htm",a:" Each Collector is executed once for each Locale that’s configured in the Store. To see the currently configured locales, check the stores.php configuration file.\n\nThere are three commands which handle collectors related tasks.\n\n console collector:search:export\nconsole ...",t:"Running Collectors "},"1248":{i:0.00253732330492782,u:"../capabilities/product_management/product-store_relation/product-store-relation.htm",a:" \n            In a multi-store environment it might be necessary to configure the abstract product appearance per store (by default, all abstract products are available in all stores).\n            A dedicated partial form in Zed Admin UI allows to manage abstract product-store relations.\n            ...",t:"Product-Store Relation  "},"1249":{i:0.0016504322673781,u:"../capabilities/cart/quick_order/quick-order-feature-overview.htm",a:"On the Quick Order form in the web-shop, a customer can enter product SKU and Quantity and proceed by adding it to cart or by creating an order right away.",t:"Quick Order Feature Overview | Spryker"},"1250":{i:0.000469951493014397,u:"../feature_integration_guides/glue_api/wishlist_api/wishlist-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Wishlist API feature in Spryker OS.",t:"Wishlist API Feature Integration"},"1251":{i:0.0016504322673781,u:"../capabilities/checkout/multi-step_checkout/checkout-process.htm",a:"In order to use checkout in Yves it should be correctly configured and dependencies should be provided.",t:"Checkout Process | Spryker"},"1252":{i:0.00211805254523868,u:"../capabilities/product_management/product_reviews/product-review-under-the-hood.htm",a:" Database Schema The Product Review module adds a new table: spy_product_review. The table stores all product review related information such as description, rating, locale, customer, product, etc. Product Reviews in Search product-review type is defined under the already existing index in Search. ...",t:"Under the Hood - Product Reviews  "},"1253":{i:0.000446960753841013,u:"../capabilities/company_account/product_restrictions_from_merchant_to_buyer/product-restrictions-from-merchant-to-buyer.htm",a:"Product Restrictions from Merchant to Buyer provides clients with access to the products and information without overwhelming them with non-essential data.",t:"Product Restrictions from Merchant to Buyer | Spryker"},"1254":{i:0.000592059312289334,u:"../capabilities/shopping_list/products_with_options_-_outdated/product-options-in-shopping_lists-outdated.htm",a:"Products with Options in Shopping Lists feature allows customers to add products with options to shopping list and subsequently transfer them to cart.",t:"Products with Options in Shopping Lists | Spryker"},"1255":{i:0.000655113350047787,u:"../capabilities/navigation/t-add-navigation-zed.htm",a:" This tutorial describes how to make your new controller action accessible in the navigation bar. There are two locations where you can define the navigation config : In the global config/Zed/navigation.xml config file Within your module in src/Pyz/Zed/{moduleName}/Communication/navigation.xml ...",t:"Tutorial - Adding Navigation in Zed  "},"1256":{i:0.000324908125145147,u:"../capabilities/search_and_filter/dynamic-filters-functionality.htm",a:"Dynamic Filters Functionality  ML Multi-language In Zed there’s a section (Search and Filters -\u003e Filter Preferences) for managing the product attributes that you’d like to filter by in the shop. There are several filter types that the framework supports at the moment: single-select: filter for one ...",t:"Dynamic Filters Functionality | Spryker"},"1257":{i:0.000262602582266707,u:"../tutorials/howtos/ht-mvp-project-structuring.htm",a:"In this HowTo we will provide practical tips and guidelines for structuring MVP Projects.  The purpose of these guidelines is to help with the project planning stage.  In general, good products are built on strong foundations, and a cost-effective projects are managed through clarity, communication ...",t:"HowTo - MVP Project Structuring"},"1258":{i:0.0016504322673781,u:"../feature_integration_guides/product_measurement_unit/product-measurement-units-feature-integration-201811.htm",a:"The Measurement Units feature allows defining specific units of measure for products. The guide describes how to integrate the feature into your project.",t:"Feature Integration - Product Measurement Unit | Spryker"},"1259":{i:0.00027256073427716,u:"../administration_interface_guide/content_management/cms.htm",a:"The article provides detailed information with the related links for shop administrators to learn how to create and manage the content of your shop in Admin UI.",t:"Content Management System | Spryker"},"1260":{i:0.000291935382875393,u:"../capabilities/development/zed_api/zed-api-processor-stack.htm",a:" Request and Pre Processing\n We now need to decide further on the URL format. Should this be extension driven, which is easier to browse, or HTTP header driven, for example? What kind of URL query string transformation do we need, what kind of header parsing is required?\n\n In order to keep this ...",t:"Processor Stack - Zed API    "},});