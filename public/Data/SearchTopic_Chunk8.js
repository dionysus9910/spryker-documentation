define({"613":{i:0.000423843837656005,u:"../module_migration_guides/mg-search.htm",a:"Upgrading from Version 7.* to Version 8.* \n                    With this version of the Search module we have migrated to Elasticsearch 5.6. Please read the\n                     Elasticsearch\n                    Breaking Changes in 5.0  official documentation to adjust your custom implementation ...",t:"Migration Guide - Search"},"614":{i:0.000423843837656005,u:"../module_migration_guides/mg-session.htm",a:"Upgrading from Version 3.* to Version 4.* The previous version made use of the deprecated spryker/new-relic and the spryker/new-relic-api modules. To be able to use this version you need to install the spryker/monitoring module if you haven\u0027t done already by running: composer require ...",t:"Migration Guide - Session"},"615":{i:0.000423843837656005,u:"../module_migration_guides/mg-setup.htm",a:" Upgrading from Version 3.* to Version 4.*\n\n With this update the behavior of the setup:install command slightly changes. Instead of removing directories where generated files are stored, these directories will be kept and emptied.\n \nThe setup:install command utilizes two new commands for cleaning ...",t:"Migration Guide - Setup"},"616":{i:0.000739432473100884,u:"../module_migration_guides/mg-shipment.htm",a:"Upgrading from Version 5.* to Version 6.* In version 6, multi-currency prices are introduced for shipment methods, allowing to set up different net and gross price per shipment method for each preconfigured currency. The spy_shipment_method.default_price database column becomes deprecated. Shipment ...",t:"Migration Guide - Shipment"},"617":{i:0.000423843837656005,u:"../module_migration_guides/mg-step-engine.htm",a:" Upgrading from Version 2.* to Version 3.*\n \nIf you\u0027re migrating the StepEngine module from version 2 to version 3, you need to follow the steps described below.\n\n In Version 3 the StepCollectionInterface::getPreviousStep() has a new second optional argument (AbstractTransfer $dataTransfer). If you ...",t:"Migration Guide - Step Engine  "},"618":{i:0.00279126293540072,u:"../module_migration_guides/mg-tax.htm",a:" Upgrading from Version 4.* to Version 5.* In version 5, tax calculation logic changed, tax amount for options, expenses and items are now calculated in the Tax module.  The plugins: ExpenseTaxCalculatorPlugin, ItemTaxCalculatorPlugin and TaxTotalsCalculatorPlugin were removed, and replaced with: ...",t:"Migration Guide - Tax  "},"619":{i:0.00249024405235664,u:"../module_migration_guides/mg-touch.htm",a:" Upgrading from Version 3.* to Version 4.* Update/install spryker/touch to at least 4.0.0 version. Install the new database columns by running vendor/bin/console propel:diff. Propel should generate a migration file with the changes. Run vendor/bin/console propel:migrate to apply the database ...",t:"Migration Guide - Touch    "},"620":{i:0.000423843837656005,u:"../module_migration_guides/mg-transfer.htm",a:" Upgrading from Version 2.* to Version 3.* When upgrading to the new major version of the Transfer module, it is necessary to make sure that everywhere a $foo-\u003efromArray($bar-\u003etoArray()) statement is used the types are matching. From now on we are no longer silently ignoring when you try to set a ...",t:"Migration Guide - Transfer  "},"621":{i:0.000739432473100884,u:"../module_migration_guides/mg-wishlist.htm",a:" Upgrading from Version 5.* to Version 6.* With the implementation of the quote storage strategies, the new version 5.0.0 of the Cart module has been released. The Wishlist module is dependent on it, so make sure your Cart module\u0027s version is 5.0.0 or higher. CartClientInterface::storeQuote is ...",t:"Migration Guide - Wishlist "},"622":{i:0.000543936111628746,u:"../feature_integration_guides/about-integration.htm",a:"The integration guides provide step-by-step instructions on how to enable individual Spryker features for your project.  Please keep in mind, that since Spryker Commerce OS is a highly modular system, you have total freedom in choosing what features to add to your project. When making a decision to ...",t:"About Integration Guides"},"623":{i:0.000423843837656005,u:"../feature_integration_guides/agent-assist-feature-integration.htm",a:"Agent Assist enables agent users to log in to shop to perform actions on customersâ€™ behalf. This guide describes how to install Agent Assist in your project.",t:"Feature Integration - Agent Assist | Spryker"},"624":{i:0.000423843837656005,u:"../feature_integration_guides/business-on-behalf-feature-integration.htm",a:"The Business on Behalf feature allows you to have multiple company users per customer account as well as to select one company user as a default company user. This guide will walk you through the process of integrating the Business on Behalf feature into your project.",t:"Business on Behalf feature Integration | Spryker "},"625":{i:0.000423843837656005,u:"../feature_integration_guides/cart_-integration.htm",a:" This article describes how to add product variants and product pictures to an existing cart Prerequisites: Before starting make sure you are familiar with the concept of Spryker Super Attributes.  UI Changes: Cart now supports changing the items in the cart by modifying their attributes. If we have ...",t:"Cart Integration   "},"626":{i:0.000423843837656005,u:"../feature_integration_guides/category-filter-feature-integration.htm",a:"Prerequisites To prepare your project to work with the Category Filters: Require the Category Filters modules in your composer by running\n         composer require spryker/product-category-filter composer require spryker/product-category-filter-collector composer require ...",t:"Feature Integration - Category Filters"},"627":{i:0.000423843837656005,u:"../feature_integration_guides/product-group-feature-integration.htm",a:"Prerequisites To prepare your project to work with Product groups: Require the Product Group bundles in your composer.json by running composer require spryker/product-group spryker/product-group-collector. Install the new database tables. By running vendor/bin/console propel:diff. Propel should ...",t:"Feature Integration - Product Group"},"628":{i:0.000423843837656005,u:"../feature_integration_guides/enabling-cms-widget.htm",a:" \n\t\t\tCMS content widgets is a CMS feature for adding  dynamic content to CMS pages/blocks.\n\t\t For example, you can list a single product, product lists, product groups or product sets.\n\t\t Integration First of all you need to install the cms-content-widget module with Composer (update composer.json ...",t:"Enabling the Content Widget  "},"629":{i:0.000423843837656005,u:"../feature_integration_guides/permissions-feature-integration.htm",a:"The Permissions feature is shipped with following modules: To install the feature, follow the steps below. 1. Install necessary modules using composer composer update \"spryker/*\" \"spryker-shop/*\" composer require spryker/permission-extension:\"^1.0.0\" spryker/permission:\"^1.0.0\" 2. Add plugins to ...",t:"Permissions Feature Integration"},"630":{i:0.000423843837656005,u:"../feature_integration_guides/enabling-gift-cards.htm",a:" The Gift Cards feature is shipped with the following modules: GiftCard: implements basic functionality of the Gift Cards feature as  well as the  Replacement value-checking strategy . GiftCardBalance: implements gift card  Balance value-checking strategy . GiftCardMailConnector: responsible for ...",t:"Enabling Gift Cards"},"631":{i:0.000423843837656005,u:"../feature_integration_guides/merchant-custom-prices-feature-integration.htm",a:"The Merchant Custom Price Feature allows setting specific prices for merchants. The guide describes the process of integrating the feature into your project.",t:"Merchant Custom Prices Feature Integration | Spryker"},"632":{i:0.000423843837656005,u:"../feature_integration_guides/merchant-product-restrictions-feature.htm",a:"Merchant Product Restrictions allows setting access to particular products. This guide describes the process of integrating the feature into a project.",t:"Merchant Product Restrictions Feature Integration | Spryker"},"633":{i:0.000423843837656005,u:"../feature_integration_guides/minimum-order-value-feature-integration.htm",a:"The Minimum Order Value Feature allows setting a minimum threshold for customer\u0027s orders. The guide describes how to integrate the feature into your project. ",t:"Minimum Order Value Feature Integration | Spryker"},"634":{i:0.000423843837656005,u:"../feature_integration_guides/multiple-carts-feature-integration.htm",a:"Multiple Carts allows customers to manage multiple shopping carts in one account. The guide describes how to integrate the feature into your project.",t:"Multiple Carts Feature Integration | Spryker"},"635":{i:0.000423843837656005,u:"../feature_integration_guides/multiple-carts-add-to-cart-integration.htm",a:"The Quick Order Feature allows ordering products by entering SKU and quantity in one page. The guide describes how to integrate the feature into your project. ",t:"Multiple Carts Add to Cart Feature Integration | Spryker"},"636":{i:0.000423843837656005,u:"../feature_integration_guides/multiple-carts-reorder-feature-integration.htm",a:"The Reorder Feature allows reordering previous orders. This guide will walk you through the process of integrating the feature into your project. ",t:"Multiple Carts Reorder Feature Integration | Spryker"},"637":{i:0.000423843837656005,u:"../feature_integration_guides/payment-provider-integration.htm",a:" The Spryker Commerce OS offers integrations with several payment providers that can be used in the checkout and order management. Easily define the availability of a provider based on customer preferences and local regulations and specify the order the providers are displayed in during checkout.\n",t:"Payment Provider Integration    "},"638":{i:0.000423843837656005,u:"../feature_integration_guides/product-lists-feature-integration.htm",a:"The Product Lists Feature allows defining access to particular items. The guide will walk you through the process of integrating this feature into your project. ",t:"Products Lists Feature Integration | Spryker"},"639":{i:0.000423843837656005,u:"../feature_integration_guides/product-measurement-units-feature-integration.htm",a:"The Measurement Units feature allows defining specific units of measure for products. The guide describes how to integrate the feature into your project.",t:"Feature Integration - Product Measurement Unit | Spryker"},"640":{i:0.000423843837656005,u:"../feature_integration_guides/product-packaging-unit-feature-integration.htm",a:"The Product Packaging Unit Feature allows defining packaging units per abstract product. This guide describes how to integrate the feature into your project.",t:"Product Packaging Unit Feature Integration | Spryker"},"641":{i:0.000784120659574228,u:"../feature_integration_guides/product-review-feature-configuration.htm",a:"Configuring the Maximum Rating To change the maximum allowed rating, alter the Client configuration by extending the \\Spryker\\Client\\ProductReview\\ProductReviewConfig class in your project directory. Override getMaximumRating method to return the desired selectable maximum rating value. \n        ...",t:"Feature Configuration - Product Reviews"},"642":{i:0.000423843837656005,u:"../feature_integration_guides/product-relation-integration.htm",a:"Register a new collector plugin. How to is in .\n Then register a new twig service plugin  \\Spryker\\Yves\\ProductRelation\\Plugin\\ProductRelationTwigServiceProvider inside the \\Pyz\\Yves\\Application\\YvesBootstrap::registerServiceProviders plugin stack.  This will allow to use the UI carousel component ...",t:"Product Relation Integration"},"643":{i:0.000423843837656005,u:"../feature_integration_guides/quick-add-to-cart-feature-integration.htm",a:"Quick Add to Cart allows customers to buy products in a few clicks. This guide will walk you through the process of integrating this feature into your project.",t:"Quick Add to Cart Feature Integration | Spryker"},"644":{i:0.000423843837656005,u:"../feature_integration_guides/product-review-feature-integration.htm",a:"Prerequisites To prepare your project to work with Product Reviews: Require the Product Review modules in your composer by running\n             composer require spryker/product-review composer require spryker/product-review-collector composer require spryker/product-review-gui Install the new ...",t:"Feature Integration - Product Reviews"},"645":{i:0.000423843837656005,u:"../feature_integration_guides/product-store-relation-feature-integration.htm",a:"General Information \n            By default abstract products are available in all stores. This feature provides additional configuration when:\n             you have multiple stores, and you want to manage the appearance of abstract products per store. Prerequisites To prepare your project to work ...",t:"Feature Integration - Multi-Store Products"},"646":{i:0.000423843837656005,u:"../feature_integration_guides/shared-carts-feature-integration.htm",a:"The Shared Carts Feature allows sharing shopping carts within an entire business unit. The guide describes how to integrate the feature into your project. ",t:"Shared Carts Feature Integration | Spryker"},"647":{i:0.000423843837656005,u:"../feature_integration_guides/shopping-lists-feature-integration.htm",a:"Shopping list is a list of items that buyers buy or plan to buy frequently. Shopping lists allow your customers to quickly order regualry bought items. This guide will walk you through the process of integrating the Shopping lists feature into your project.",t:"Shopping Lists Feature Integration | Spryker"},"648":{i:0.000423843837656005,u:"../feature_integration_guides/volume-prices-feature-integration.htm",a:"The Volume Prices Feature allows setting specific prices for units based on quantities. The guide describes how to integrate the feature into your project.",t:"Volume Prices Feature Integration | Spryker"},"649":{i:0.000543936111628746,u:"../updating_the_legacy_demoshop_with_scos/about-updating.htm",a:"If you use Spryker Legacy Demoshop, you can enhance it with specific components of SCOS or make the Legacy Demoshop compatible with them. For example, you can  configure the Legacy Demoshop to use spryker-shop modules, Atomic Design and Publish \u0026 Synchronization ,  set up ShopUiCompatibility module ...",t:"Updating the Legacy Demoshop with SCOS"},"650":{i:0.0035944730541554,u:"../updating_the_legacy_demoshop_with_scos/demoshop-to-atomic-frontend.htm",a:" The following guide will help migrating an existing Demoshop project to Atomic Frontend. Update assets/Yves/default/app/index.js Append the following lines to the end of the file: var app = require(\u0027ShopUi/app\u0027);\napp.bootstrap(); Update assets/Yves/default/vendor.entry.js Lines to remove: // es6 ...",t:"Migrating from the Legacy Demoshop to Atomic Frontend "},"651":{i:0.0035944730541554,u:"../updating_the_legacy_demoshop_with_scos/demoshop-with-shop-app-atomic-design-and-ps.htm",a:"Infrastructure Preparation This has to be done only once for Demoshop (not for every feature.) Â  Shop App These steps are required to install features which use the new  shop pages and widgets  i.e. the shop app. Â  Add infrastructure modules To use the spryker-shop modules, you need to add new ...",t:"Making Demoshop Compatible with Shop App, Atomic Design, P\u0026S"},"652":{i:0.0035944730541554,u:"../updating_the_legacy_demoshop_with_scos/setting-up-shopuicompatibility.htm",a:"The ShopUiCompatibility module is the main module necessary for the  Atomic Frontend . This module is provided in SCOS by default. The following guide describes how to set up the ShopUICompatibility in the Legacy Demoshop. Â  To install ShopUiCompatibility module in the Legacy Demoshop, follow the ...",t:"Setting up ShopUiCompatibility Module in the Legacy Demoshop"},"653":{i:0.0035944730541554,u:"../updating_the_legacy_demoshop_with_scos/twig-compatibility-mode-demoshop-vs-suite.htm",a:"In the SCOS, all variables available in the Twig templates can be accessed from the _view variable. In the Demoshop we used a different technique and passed the Twig variables to the global Twig namespace directly. The following code examples will help to understand the difference. Demoshop ...",t:"Twig Compatibility: Legacy Demoshop vs SCOS"},"654":{i:0.000423843837656005,u:"../tutorials/about-tutorials.htm",a:" Welcome to Spryker Tutorials, in this section of the documentation you will find instructions on how to perform all types of tasks with Spryker Commerce OS If you are a PHP developer who is new to Spryker, visit our free online Bootcamp Training for a crash introduction course to Spryker. Check out ...",t:"About Tutorials "},"655":{i:0.000423843837656005,u:"../tutorials/introduction/introduction-tutorials.htm",a:"Introduction Tutorials Introduction tutorials describe how to perform basic tasks with the Spryker Commerce OS.",t:"Introduction Tutorials"},"656":{i:0.000423843837656005,u:"../tutorials/introduction/architectural-walkthrough.htm",a:"This is an architecture walkthrough as a coding exercise. Challenge Description Build a HelloSpryker module in Zed that will render the Hello Spryker! string, in reverse order, on the screen. The string must be retrieved from the config. Build a HelloSpryker module in Yves that will render the Hello ...",t:"Tutorial - Architectural Walkthrough"},"657":{i:0.000423843837656005,u:"../tutorials/introduction/boosting-cart-based-search.htm",a:"Challenge Description Based on the colors of the products that are in the cart of the user, the catalog should first display products that have the same color. Letâ€™s say for example that thereâ€™s a red product in the cart, then the top results in the catalog should also contain red products. ...",t:"Tutorial - Boosting Cart Based Search"},"658":{i:0.000423843837656005,u:"../tutorials/introduction/checkout.htm",a:"Challenge Description Integrate an additional step into the checkout process; a Voucher step where a customer enters a voucher code and gets a discount. Add the Voucher step after the Payment one. To explore further before starting, you can read about the  Checkout  and the  StepEngine  modules. ...",t:"Tutorial - Checkout"},"659":{i:0.000423843837656005,u:"../tutorials/introduction/dynamic-content-page.htm",a:"Challenge Description Create a CMS page that displays some (marketing) text and a list of personalized products as offers. Challenge Solving Highlights Static page For creating a CMS page, follow these steps: Create a CMS template called personalized_products.twig under ...",t:"Tutorial - Dynamic Content Page"},"660":{i:0.000423843837656005,u:"../tutorials/introduction/hello-world.htm",a:" Challenge Description Build a HelloWorld  module in Yves that will render the Hello world! string on the page. Manually building the HelloWorld module in Yves  Using Code Generator To save even more time, you can use code generator from development tools shipped with Spryker Code Generator console ...",t:"Tutorial - Hello World "},"661":{i:0.000423843837656005,u:"../tutorials/introduction/oms-state-machine.htm",a:"Challenge Description Create a simple state machine that demonstrates an order process. The simple order process has the following states: new, paid, shipped, closed, returned, and invalid. We use the invalid state in case a payment is unauthorized (could be used with some other cases as well). In ...",t:"Tutorial - OMS State Machine"},"662":{i:0.000423843837656005,u:"../tutorials/introduction/setup-hello-world-queue.htm",a:"This Tutorial demonstrates a simple Hello, World queue use case. We will create a hello queue and send/receive our messages to/from this queue with Hello, World content.  For this purpose, we will be using our default queue engine RabbitMQ.\n\n Preparation\n Before you begin, check to see that the ...",t:"Tutorial - Set Up a \"Hello World\" Queue"},"663":{i:0.00117369604777944,u:"../tutorials/introduction/handling-data-publish-and-synchronization.htm",a:"Tutorial - Handling Data - Publish and Synchronization  Challenge Description Publish and Synchronization (P\u0026S) allows exporting data from Spryker backend (Zed) to external endpoints (by default, Redis and Elasticsearch). The endpoints are usually consumed by frontend applications (including Yves). ...",t:"Handling Data - Publish and Synchronization"},"664":{i:0.000423843837656005,u:"../tutorials/introduction/stores.htm",a:"Challenge Description Override a Zed core module on project level, and then override it on store level. You can also repeat the same challenge for a Yvesmodule Challenge Solving Highlights Project Level Letâ€™s first override on the project level. Add an IndexController::indexAction() to ...",t:"Tutorial - Stores"},"665":{i:0.000513913043135561,u:"../tutorials/introduction/customizefrontend/t-customize-spryker-frontend.htm",a:"Spryker frontendÂ user interface can be customized and extended to meet the needs of your business. You can change the layout, styles and behavior of existing components, as well as create components on your own. There are 3 aspects of Spryker user interface that can be extended: views, templates and ...",t:"Tutorial - Customize Spryker Frontend"},"666":{i:0.00114703188474494,u:"../tutorials/introduction/customizefrontend/t-create-component.htm",a:"  As Spryker Shop implementsÂ the  Component Model , adding new functionality to it usually means implementing a new component. In this document, we shall review creation of a new component on the example of a simple block that displays the count of DOM elements of a certain type. To implement it: 1. ...",t:"Tutorial - Frontend - Create a Component"},"667":{i:0.000659525772631528,u:"../tutorials/introduction/customizefrontend/t-override-component.htm",a:"  If the implementation of any of the components shipped with Spryker frontend does not suite your needs, you can override it with a component of your own. The following article shows how to override a molecule calledÂ simple-carousel. By default, the component is used, for example, to display ...",t:"Tutorial - Frontend - Override a Component"},"668":{i:0.00114703188474494,u:"../tutorials/introduction/customizefrontend/t-extend-component.htm",a:"  With the idea of  atomic design  implemented inÂ Spryker frontend, you have the possibility to develop each functional element of user interface in a self-contained, isolated container called a component. The frontend design allows you not only to  create components  on your own, but also  replace  ...",t:"Tutorial - Frontend - Extend a Component"},"669":{i:0.000423843837656005,u:"../tutorials/howtos/how-tos.htm",a:"HowTos are simple instructions to guide you through the process of performing a single task.  Academy Navigation To navigate through content, click on an option from the right-hand table of contents or use the search (above).  You can also use navigation buttons on the top right corner of page:  ...",t:"HowTos"},"670":{i:0.000423843837656005,u:"../tutorials/howtos/feature_howtos/about-feature-howtos.htm",a:"Feature HowTos Feature HowTo tutorials describe step-by-step instructions intended to help developers perform tasks related to features of Spryker Commerce OS.",t:"Feature HowTos"},"671":{i:0.000423843837656005,u:"../tutorials/howtos/feature_howtos/ht-create-new-page-cms.htm",a:"This guide describes how to create a template for a new page that can then be created in the Admin UI.",t:"HowTo - Create a New CMS Page | Spryker"},"672":{i:0.000423843837656005,u:"../tutorials/howtos/ht-case-sensitive-file-system-mac.htm",a:"By default Mac OS uses a case-insensitive file system to support compatibility to applications (e.g. Photoshop) provided for the operating system. The file-system itself is capable of working in a case-sensitive mode. There are a number of options on how to change case sensitivity: Re-partition the ...",t:"HowTo - Handling Case Sensitive File-System on Mac OS"},"673":{i:0.000423843837656005,u:"../tutorials/howtos/ht-data-import.htm",a:"The following article describes with a real life example for importing product images how to build your own DataImport for a specific type. The Database Schema You should start by looking at the database tables you want to fill with data. The image below shows the table relation for product images. ...",t:"HowTo - Add a New DataImport Type"},"674":{i:0.00282433305140044,u:"../tutorials/howtos/ht-add-new-shipment-method-2.htm",a:" \nThis article describes the steps to add a new shipment method, without integrating with the shipment provider.\n In this tutorial weâ€™ll consider the case when you need to add a new shipment method, without the need to integrate it with the shipment providers system.\n \nWhatâ€™s important for this ...",t:"HowTo - Add a New Shipment Method 2.0"},"675":{i:0.000423843837656005,u:"../tutorials/howtos/ht-extend-inuse-core.htm",a:"This topic describes how to extend a core module that is used by another core module.\n\n Extra consideration must be taken when extending core modules that are already in use by another module. In the following example we will extend the Cart  -\u003e Calculation modules.\n\n Step 1:Â Modify the Interface ...",t:"HowTo - Extend a Core Module That is Used by Another"},"676":{i:0.000423843837656005,u:"../tutorials/howtos/ht-force-https.htm",a:"The following article describes how you can force to use HTTPS in your pages. Load balancer If your servers are behind a load balancer and the load balancer is doing the redirects from HTTP to HTTPS, you don\u0027t need to further configure the application.\n         Application Configuration Force HTTPS ...",t:"HowTo - Force HTTPS"},"677":{i:0.000423843837656005,u:"../tutorials/howtos/ht-mvp-project-structuring.htm",a:"In this HowTo we will provide practical tips and guidelines for structuring MVP Projects.  The purpose of these guidelines is to help with the project planning stage.  In general, good products are built on strong foundations, and a cost-effective projects are managed through clarity, communication ...",t:"HowTo - MVP Project Structuring"},"678":{i:0.000423843837656005,u:"../tutorials/howtos/ht-product-data-import-frontend.htm",a:"Product Customization This article describes flow of the product data from importing it to the SQL database to showing it in the front-end view.\n Importing Products to the SQL Database\n Products are imported in the SQL database through the Importer module. The product details are parsed from CSV ...",t:"HowTo - Product Data from Import to Front-End View"},"679":{i:0.000423843837656005,u:"../tutorials/howtos/ht-setup-spryker-with-mysql.htm",a:"Spryker supports MySQL database and for installing it with this database, follow these instructions to adjust the configuration. MySQL Version Currently Spryker works only with MySQL version 5.7 or higher.  Adjusting Spryker to Run with MySQL \n    For running the Spryker Demoshop with MySQL, it is ...",t:"HowTo - Setup Spryker with MySQL"},"680":{i:0.000423843837656005,u:"../tutorials/advanced/advanced-tutorials.htm",a:"Advanced Tutorials Advanced tutorials describe advanced Spryker OS activities. Academy Navigation To navigate through content, click on an option from the right-hand table of contents or use the search (above).  You can also use navigation buttons on the top right corner of page:  Navigate previous ...",t:"advanced_tutorials"},"681":{i:0.000423843837656005,u:"../tutorials/advanced/t-add-button-table.htm",a:"Depending on the button type that needs to be added (Update/Create/Remove/View), the following operations can be called : \u003c?php\n$this-\u003egenerateCreateButton(\u0027destination_URL\u0027, \u0027Button title\u0027, array $buttonOptions);\n$this-\u003egenerateEditButton(\u0027destination_URL\u0027, \u0027Button title\u0027, array ...",t:"Tutorial - Adding Buttons to Tables"},"682":{i:0.00141070800683447,u:"../tutorials/advanced/t-add-new-bundle.htm",a:"In this tutorial we will create a test module: HelloWorld module; the moduleâ€™s functionality is to show a â€˜Hello world!â€™ message to the user.\n\n When a new concept needs to be defined, a new module needs to be added on the project side to encapsulate that concept. The new module needs to follow the ...",t:"Tutorial - Adding a New Module"},"683":{i:0.000423843837656005,u:"../tutorials/advanced/t-calculator-plugin.htm",a:"This tutorial explains how to add new calculation plugin to the calculator stack. Requirement : display the tax amount per item. Right now, you can get the tax amount from grandTotal. For this, you have to add a new calculator into the existing stack for the  module. First, there are some data ...",t:"Tutorial - Calculator Plugin"},"684":{i:0.000423843837656005,u:"../tutorials/advanced/t-console-commands.htm",a:"A console command is a PHP class that contains the implementation of a functionality that can get executed from the command line. Spryker offers a wrapper over Symfonyâ€™s Console component, that makes the implementation and configuration of a console command easier. Implementing a New Console Command ...",t:"Tutorial - Console Commands"},"685":{i:0.000423843837656005,u:"../tutorials/advanced/t-create-table-view.htm",a:"This tutorial explains how to retrieve data from the database and render it in a table. Prerequisites: You have created a new  module . Create a QueryContainer Create the QueryContainer class in the HelloWorld module: mkdir -p src/Pyz/Zed/HelloWorld/Persistence/\ntouch ...",t:"Tutorial - Creating a Table View"},});