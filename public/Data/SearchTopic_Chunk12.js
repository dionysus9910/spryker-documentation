define({"977":{i:0.00166182815657811,u:"../silex_replacement/container-201903.htm",a:"Now, instead of using the \"Pimple Container\" class, Spryker is going to implement its own Continer since the original container is widely used by the Silex Microframework we are currently refactoring out. The Continer is used with services like Twig and Plugin stacks. The article contains information on adding services, checking if they are added, removing or extending them. Troubleshooting information is included too. ",t:"Container | Spryker"},"978":{i:0.000249280268665024,u:"../silex_replacement/migrating-away-from-silex.htm",a:"To refactor away from Silex, install the following packages: spryker/application \u003e= 3.13.2 spryker/container \u003e= 1.1.0 spryker/silex \u003e= 0.2.0 spryker/symfony \u003e= 3.2.2 spryker-shop/shop-application \u003e= 1.4.1 If you have problems installing one of those, use composer\u0027s why and why-not console commands ...",t:"Migrating Away From Silex"},"979":{i:0.00212814029324831,u:"../silex_replacement/router/router.htm",a:"The Router is responsible for matching a request to a route and generating URLs based on a route name. The Spryker\u0027s Router module is based on the Symfony\u0027s Routing component; for more information on it, check out the  documentation . This section describes how to install and configure the Router ...",t:"Router"},"980":{i:0.0011538433050736,u:"../silex_replacement/router/router-yves-201907.htm",a:"The Router is responsible for matching a request to a route and generating URLs based on a route name. The Spryker\u0027s Router module is based on the Symfony\u0027s Routing component; for more information on it, check out the  documentation . Modules You can find the list of all the modules related to the ...",t:"Router Yves"},"981":{i:0.0011538433050736,u:"../silex_replacement/router/router-zed-201907.htm",a:"The Router is responsible for matching a request to a route and generating URLs based on a route name. The Spryker\u0027s Router module is based on the Symfony\u0027s Routing component; for more information on it, check out the documentation. Modules You can find the list of all the modules related to the ...",t:"Router Zed"},"982":{i:0.000249280268665024,u:"../tutorials/about-tutorials.htm",a:" Welcome to Spryker Tutorials, in this section of the documentation you will find instructions on how to perform all types of tasks with Spryker Commerce OS If you are a PHP developer who is new to Spryker, visit our  free online Bootcamp Training  for a crash introduction course to Spryker. Check ...",t:"About Tutorials "},"983":{i:0.000249280268665024,u:"../tutorials/introduction/introduction-tutorials.htm",a:"Introduction Tutorials Introduction tutorials describe how to perform basic tasks with the Spryker Commerce OS.",t:"Introduction Tutorials"},"984":{i:0.00166182815657811,u:"../tutorials/introduction/tutorial-architecture-walkthrough-scos.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. The main idea of this task is to understand the Spryker architecture and how things work all together.  We will implement a very simple functionality ...",t:"Tutorial - Architectural Walkthrough - Spryker Commerce OS"},"985":{i:0.000249280268665024,u:"../tutorials/introduction/architectural-walkthrough-legacy-demoshop.htm",a:"This is an architecture walkthrough as a coding exercise. Challenge Description Build a HelloSpryker module in Zed that will render the Hello Spryker! string, in reverse order, on the screen. The string must be retrieved from the config. Build a HelloSpryker module in Yves that will render the Hello ...",t:"Tutorial - Architectural Walkthrough - Legacy Demoshop"},"986":{i:0.000249280268665024,u:"../tutorials/introduction/boosting-cart-based-search.htm",a:"Challenge Description Based on the colors of the products that are in the cart of the user, the catalog should first display products that have the same color. Let’s say for example that there’s a red product in the cart, then the top results in the catalog should also contain red products. ...",t:"Tutorial - Boosting Cart Based Search"},"987":{i:0.000249280268665024,u:"../tutorials/introduction/t-checkout-and-step-engine-spryker-commerce-os.htm",a:"Challenge Description This task helps you to learn how to: Work with Checkout and the Step Engine Apply and use discounts Extend the Spryker core code and functionalities In this task we will add a voucher step to the existing out-of-the-box Spryker checkout. 1. Add the Voucher Step Before adding ...",t:"Tutorial - Checkout and Step Engine - Spryker Commerce OS"},"988":{i:0.000249280268665024,u:"../tutorials/introduction/checkout.htm",a:"Challenge Description Integrate an additional step into the checkout process; a Voucher step where a customer enters a voucher code and gets a discount. Add the Voucher step after the Payment one. To explore further before starting, you can read about the  Checkout  and the  StepEngine  modules. ...",t:"Tutorial - Checkout - Legacy Demoshop"},"989":{i:0.000249280268665024,u:"../tutorials/introduction/t-cms.htm",a:"This artice helps you to create a static Contact Us page and integrate it into Yves. and then create your own template and use it.",t:"Tutorial - CMS | Spryker"},"990":{i:0.000249280268665024,u:"../tutorials/introduction/tutorial-hello-world-scos.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description Show \"Hello World!\" string on a web page on your browser. To do so, build a new module called HelloWorld. Build the HelloWorld ...",t:"Tutorial - Hello World - Spryker Commerce OS"},"991":{i:0.000249280268665024,u:"../tutorials/introduction/hello-world-legacy.htm",a:"Challenge Description Build a HelloWorld  module in Yves that will render the Hello world! string on the page. Manually building the HelloWorld module in Yves Create a module folder in Yves under src/Pyz/Yves/. This will be the location for all the module  files. Create an IndexController (as ...",t:"Tutorial - Hello World - Legacy Demoshop"},"992":{i:0.000249280268665024,u:"../tutorials/introduction/t-content-search-attribute-cart-based-catalog-personalization.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description This is another task on personalization. In this one, we will boost and personalize the catalog using the color attribute of a ...",t:"Tutorial - Content and Search - Attribute-Cart-Based Catalog Personalization - Spryker Commerce OS"},"993":{i:0.000249280268665024,u:"../tutorials/introduction/dynamic-content-page.htm",a:"Challenge Description Create a CMS page that displays some (marketing) text and a list of personalized products as offers. Challenge Solving Highlights Static page For creating a CMS page, follow these steps: Create a CMS template called personalized_products.twig under ...",t:"Tutorial - Dynamic Content Page - Legacy Demoshop"},"994":{i:0.000249280268665024,u:"../tutorials/introduction/t-oms-and-state-machines-spryker-commerce-os.htm",a:"Tutorial - OMS and State Machines - Spryker Commerce OS This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description In this task you will create a full order management process (OMS) using ...",t:"Tutorial - OMS and State Machines - Spryker Commerce OS | Spryker"},"995":{i:0.000249280268665024,u:"../tutorials/introduction/oms-state-machine.htm",a:"Challenge Description Create a simple state machine that demonstrates an order process. The simple order process has the following states: new, paid, shipped, closed, returned, and invalid. We use the invalid state in case a payment is unauthorized (could be used with some other cases as well). In ...",t:"Tutorial - OMS State Machine - Legacy Demoshop"},"996":{i:0.000249280268665024,u:"../tutorials/introduction/setup-hello-world-queue.htm",a:"This Tutorial demonstrates a simple Hello, World queue use case. We will create a hello queue and send/receive our messages to/from this queue with Hello, World content.  For this purpose, we will be using our default queue engine RabbitMQ.\n\n Preparation\n Before you begin, check to see that the ...",t:"Tutorial - Set Up a \"Hello World\" Queue - Legacy Demoshop"},"997":{i:0.00145561665396887,u:"../tutorials/introduction/mail_how_to_send.htm",a:"The following tutorial represents a real-world scenario for the customer registration. A Customer goes through the registration process in your frontend (Yves) and all customer information is sent to Zed. Zed uses the information to register the customer. Once the registration is completed, the ...",t:"Tutorial - Sending a Mail"},"998":{i:0.000249280268665024,u:"../tutorials/introduction/stores.htm",a:"Challenge Description Override a Zed core module on project level, and then override it on store level. You can also repeat the same challenge for a Yvesmodule Challenge Solving Highlights Project Level Let’s first override on the project level. Add an IndexController::indexAction() to ...",t:"Tutorial - Stores - Legacy Demoshop"},"999":{i:0.00166182815657811,u:"../tutorials/introduction/t-handling-data-publish-and-sync-scos.htm",a:"Challenge Description Publish and Synchronization (P\u0026S) allows exporting data from Spryker backend (Zed) to external endpoints (by default, Redis and Elasticsearch). The endpoints are usually consumed by frontend applications (including Yves). In this step-by-step tutorial, you will understand how ...",t:"Tutorial - Handling Data - Publish and Synchronization - Spryker Commerce OS"},"1000":{i:0.000769429364118278,u:"../tutorials/introduction/handling-data-publish-and-synchronization.htm",a:"Tutorial - Handling Data - Publish and Synchronization - Legacy Demoshop Challenge Description Publish and Synchronization (P\u0026S) allows exporting data from Spryker backend (Zed) to external endpoints (by default, Redis and Elasticsearch). The endpoints are usually consumed by frontend applications ...",t:"Handling Data - Publish and Synchronization"},"1001":{i:0.000249280268665024,u:"../tutorials/introduction/t-different-stores-different-logic-landing-pages.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description Spryker supports a possibility of having multi-stores. Not just that, it also supports having different logic for different ...",t:"Tutorial - Different Stores Different Logic - Landing Pages - Spryker Commerce OS"},"1002":{i:0.000249280268665024,u:"../tutorials/introduction/t-content-search-personalized-catalog-page.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description The aim of this task is to build the first block of personalization for your shop. We are going to build a new CMS page and fill ...",t:"Tutorial - Content and Search - Personalized Catalog Pages - Spryker Commerce OS"},"1003":{i:0.000249280268665024,u:"../tutorials/introduction/t-testing-tdd-scos.htm",a:"This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the  Spryker Training  web-site. Challenge Description This task helps to understand the main concepts of testing with Spryker and see how simple it is to build tests. You will use ...",t:"Tutorial - Testing and TDD - Spryker Commerce OS"},"1004":{i:0.000249280268665024,u:"../tutorials/introduction/glue_api/glue-api-tutorials.htm",a:"The tutorials describe how to use and customize the Glue API for your application.",t:"Glue API tutorials | Spryker"},"1005":{i:0.000729600016043263,u:"../tutorials/introduction/glue_api/implementing-rest-api-resource.htm",a:"This article provides step-by-step instructions on how to implement a REST API resource in a project.",t:"Implementing a REST API Resource | Spryker"},"1006":{i:0.000302252411051099,u:"../tutorials/introduction/glue_api/documenting-glue-api-resources.htm",a:"This tutorial describes how to set up and use the means of writing documentation for your project and gives advice on how to describe your REST API.",t:"Documenting GLUE API Resources | Spryker"},"1007":{i:0.000559167392883929,u:"../tutorials/introduction/glue_api/extending-a-rest-request-resource.htm",a:"This tutorial describes how to extend the Glue API modules to give you the possibility to customize them for your own needs.",t:"Extending a REST API Resource | Spryker"},"1008":{i:0.000525657176596508,u:"../tutorials/introduction/glue_api/validating-rest-request-format.htm",a:"This guide describes how to validate REST requests with the Glue API, explains the validation rules format and prerequisites to apply the validation rules.",t:"Validating REST Request Format | Spryker"},"1009":{i:0.000302252411051099,u:"../tutorials/introduction/glue_api/versioning-rest-request-resources.htm",a:"This tutorial describes how to implement the versioning system for the REST API resources to provide backward compatibility. ",t:"Versioning REST API Resources | Spryker"},"1010":{i:0.000333931715242835,u:"../tutorials/introduction/customizefrontend/t-customize-spryker-frontend.htm",a:"Spryker frontend user interface can be customized and extended to meet the needs of your business. You can change the layout, styles and behavior of existing components, as well as create components on your own. There are 3 aspects of Spryker user interface that can be extended: views, templates and ...",t:"Tutorial - Customize Spryker Frontend"},"1011":{i:0.00074529844064501,u:"../tutorials/introduction/customizefrontend/t-create-component.htm",a:"As Spryker Shop implements the  Component Model , adding new functionality to it usually means implementing a new component. In this document, we shall review creation of a new component on the example of a simple block that displays the count of DOM elements of a certain type. To implement it: 1. ...",t:"Tutorial - Frontend - Create a Component"},"1012":{i:0.000249280268665024,u:"../tutorials/introduction/customizefrontend/t-integrate-jquery.htm",a:"This tutorial discribes the procedure of integration JQuery into Atomic Frontend using jquery-countdown plugin as an example. ",t:"Tutorial - Frontend - Integrate JQuery into Atomic Frontend | Spryker"},"1013":{i:0.000428545868790548,u:"../tutorials/introduction/customizefrontend/t-override-component.htm",a:"  If the implementation of any of the components shipped with Spryker frontend does not suite your needs, you can override it with a component of your own. The following article shows how to override a molecule called simple-carousel. By default, the component is used, for example, to display ...",t:"Tutorial - Frontend - Override a Component"},"1014":{i:0.000249280268665024,u:"../tutorials/introduction/customizefrontend/t-use-component.htm",a:"This tutorial describes how to use a component in Spryker Shop. In particular, it describes two strategies (include and embed) of adding compontents to other components like views, page templates and widgets. ",t:"Tutorial - Frontend - Use a Component | Spryker"},"1015":{i:0.00074529844064501,u:"../tutorials/introduction/customizefrontend/t-extend-component.htm",a:"  With the idea of  atomic design  implemented in Spryker frontend, you have the possibility to develop each functional element of user interface in a self-contained, isolated container called a component. The frontend design allows you not only to  create components  on your own, but also  replace  ...",t:"Tutorial - Frontend - Extend a Component"},"1016":{i:0.000249280268665024,u:"../tutorials/howtos/how-tos.htm",a:"HowTos are simple step-by-step instructions to guide you through the process of performing a single task. There are three types of HowTos:  Feature HowTos ,  Glue API HowTos  and miscellaneous HowTos for developers. Feature HowTos can be useful for shop owners, administrators and developers as they ...",t:"About HowTos"},"1017":{i:0.000249280268665024,u:"../tutorials/howtos/spryker_in_docker_howtos/about-spryker-in-docker-howtos.htm",a:"Spryker in Docker HowTos Docker HowTo tutorials provide guides and instructions for tasks related to  Spryker in Docker . From these guides, you will learn how to perform the following tasks: Install Self-Signed SSL Certificates",t:"Spryker in Docker HowTos"},"1018":{i:0.000461168838209324,u:"../tutorials/howtos/spryker_in_docker_howtos/ht-install-self-signed-ssl-certificates-201907.htm",a:"This HowTo describes the steps you need to take to import a self-signed SSL (Secure Sockets Layer) certificate. A self-signed certificate is an identity certificate that is signed by the same entity whose identity it certificates. Such a certificate is used only for development purposes taking into ...",t:"HowTo - Install Self-Signed SSL Certificates"},"1019":{i:0.000264415166489617,u:"../tutorials/howtos/feature_howtos/about-feature-howtos.htm",a:"Feature HowTos Feature HowTo tutorials describe step-by-step instructions intended to help developers perform tasks related to features of Spryker Commerce OS.",t:"Feature HowTos"},"1020":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-adding-new-tag-for-comment.htm",a:"Tags are keywords associated with the comments. With their help, you can quickly find the necessary information discussed in the  Comments . To add the available tags for comments: Introduce the configuration file - CommentConfig: Pyz\\Shared\\Comment\\CommentConfig.php namespace Pyz\\Shared\\Comment;\n ...",t:"How-To - Adding a New Tag for Comment"},"1021":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-change-default-behaviour-of-event-trigerring-in-availability-storage-module.htm",a:"Learn how to change the default behavior of event triggering in availability storage module. Events can be set up to be teriggered when the amount of product is changes instead of the default behavior. ",t:"How to Change the Default Behavior of Event Triggering in Availability Storage Module | Spryker"},"1022":{i:0.000264415166489617,u:"../tutorials/howtos/feature_howtos/ht-configure-separators-default-number-rows.htm",a:"This how-to tutorial describes how to configure separators and default number of rows in the Paste your order foem for Quick Order page.",t:"Configuring Separators and Default Number of Rows | Spryker"},"1023":{i:0.00176272443428618,u:"../tutorials/howtos/feature_howtos/ht-create-cms-templates.htm",a:"This guide describes how to create a template for a new page that can then be created in the Admin UI.",t:"HowTo - Create a New CMS Page | Spryker"},"1024":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-disable-accounts-switch-for-bob-201907.htm",a:"We have implemented the functionality that allows you to disable switching between the Business-on-Behalf accounts. E.g., if the user logs in to the pre-defined company account that has Business-on-Behalf feature integrated, the shop owner can disable the ability to switch between the accounts. In ...",t:"HowTo - Disable Accounts Switch for Business on Behalf"},"1025":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-enable-cms-content-widgets-button-201907.htm",a:"The article describes how to enable the CMS content widgets button in the WYSIWYG editor on the Edit Placeholders page. The content widget drop-down button is used to add CMS content widgets to a block or a page. However, starting with the 201907.0 version, the content widget drop-down button has ...",t:"HowTo - Enable CMS Content Widgets Button in the WYSIWYG Editor"},"1026":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-generating-token-for-login-201907.htm",a:"How-To: Generating a Token for Login Customer Login by Token  feature allows B2B users to log in to a Spryker Shop using a token. A token is a unique identifier that contains all the information needed for authentication to fetch a specific resource without using a username and password. The tokens ...",t:"How-To: Generating a Token for Login | Spryker"},"1027":{i:0.000264415166489617,u:"../tutorials/howtos/feature_howtos/ht-import-minimum-order-value-data-201903.htm",a:" ML Multi-language MC Multi-currency MS Multi-store Besides setting  global and merchant relation thresholds  for minimum order values manually in the Administration Interface, they can also be imported in bulk from a .csv file. You can import minimum order value data from a .csv file having the ...",t:"HowTo - Import Minimum Order Value Data "},"1028":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-import-scheduled-prices-201907.htm",a:"Learn how to import product price schedules. Information about file format and the steps to take are included.",t:"How to Import Scheduled Prices | Spryker"},"1029":{i:0.000264415166489617,u:"../tutorials/howtos/feature_howtos/ht-make-product-shown-on-frontend-by-url.htm",a:" The article describes the flow on how to make a product searchable and displayed on Yves using a URL. There are a number of conditions that should be fulfilled to make your product searchable and shown on Yves by URL. What is important is to make sure that your product meets the following ...",t:"HowTo - Make a Product Searchable and Shown on Yves by URL "},"1030":{i:0.000249280268665024,u:"../tutorials/howtos/feature_howtos/ht-manage-a-big-number-of-categories-201903.htm",a:"Learn how to change the default tree view of the Category ZED UI section to the one suitable for managing a big number of categories. ",t:"HowTo Manage a Big Number of Categories | Spryker"},"1031":{i:0.000461168838209324,u:"../tutorials/howtos/feature_howtos/ht-schedule-cron-job-for-scheduled-prices-201907.htm",a:"Learn how to schedule the cron job shipped with Scheduled Prices feature.",t:"How to Schedule Cron Job for Scheduled Prices | Spryker"},"1032":{i:0.000264415166489617,u:"../tutorials/howtos/glue_api_howtos/about-glue-api-howtos.htm",a:"Glue API HowTos Glue API HowTo tutorials provide guides and instructions for tasks related to  Spryker Glue Rest API . From these guides, you will learn how to perform the following tasks: Configuring Visibility of the Included Section Configuring Glue for Cross-Origin Requests",t:"Glue API HowTos"},"1033":{i:0.000376791795874414,u:"../tutorials/howtos/glue_api_howtos/ht-configuring-visibility-included-section-201903.htm",a:"This guide provides step-by-step instructions on how to configure the visibility of the included section of REST responses in Spryker Glue API.",t:"Configuring Visibility of the Included Section | Spryker"},"1034":{i:0.000361656898049821,u:"../tutorials/howtos/glue_api_howtos/ht-configuring-glue-for-cross-origin-requests-201903.htm",a:"This article describes how to enable Cross-Origin Resource Sharing (CORS) in Spryker Glue REST API.",t:"Configuring Glue for Cross-Origin Requests | Spryker"},"1035":{i:0.000264415166489617,u:"../tutorials/howtos/ht-case-sensitive-file-system-mac.htm",a:"By default Mac OS uses a case-insensitive file system to support compatibility to applications (e.g. Photoshop) provided for the operating system. The file-system itself is capable of working in a case-sensitive mode. There are a number of options on how to change case sensitivity: Re-partition the ...",t:"HowTo - Handle Case Sensitive File-System on Mac OS"},"1036":{i:0.000264415166489617,u:"../tutorials/howtos/ht-data-import.htm",a:"The following article describes  how to build your own DataImport for a specific type. All steps in this article are built on the real life example for importing product images. The Database Schema You should start by looking at the database tables you want to fill with data. The image below shows ...",t:"HowTo - Add a New DataImport Type"},"1037":{i:0.000249280268665024,u:"../tutorials/howtos/ht-add-new-shipment-method-2.htm",a:" \nThis article describes the steps to add a new shipment method, without integrating with the shipment provider.\n In this tutorial we’ll consider the case when you need to add a new shipment method, without the need to integrate it with the shipment providers system.\n \nWhat’s important for this ...",t:"HowTo - Add a New Shipment Method 2.0"},"1038":{i:0.00145561665396887,u:"../tutorials/howtos/ht-mail-create-mailtype-plugin.htm",a:"This HowTo describes how to create and register a MailTypePlugin, which is necessary for establishing your mailing system. Creating a MailTypePlugin MailType is a class used to build the entire MailTransfer through an easy to use interface. Create the MailTypePlugin within the Mail module which ...",t:"HowTo - Create and Register a MailTypePlugin"},"1039":{i:0.00207425116179658,u:"../tutorials/howtos/ht-create-register-provider-plugin.htm",a:"This HowTo describes how to create and register a mail provider you want to use.  The mail provider is defined in the provider class. As each provider behaves differently, the provider class will also look different as well. Create a class which implements MailProviderPluginInterface. After that ...",t:"HowTo - Create and Register a Mail Provider"},"1040":{i:0.000249280268665024,u:"../tutorials/howtos/ht-debug-listeners-201903.htm",a:"Learn how to debug listeners using the event:trigger:listener command. The command debugs an event message with a specific listener mapped to it. It is useful for debugging issues when the transformed data is not stored in the specific strage table. Usage examplas are provided in the article. ",t:"HowTo Debug Listeners"},"1041":{i:0.000249280268665024,u:"../tutorials/howtos/ht-dump-queue-messages-201903.htm",a:"Learn about queue:dump console command which outputs a queue message information in a predefined output format. The console command allows to debug a message from a queue. The examples of the command usage are provided.",t:"How to Dump Queue Messages | Spryker"},"1042":{i:0.000249280268665024,u:"../tutorials/howtos/ht-extend-inuse-core.htm",a:"This topic describes how to extend a core module that is used by another core module.\n\n Extra consideration must be taken when extending core modules that are already in use by another module.  In the following example we will extend the Cart -\u003e Calculation modules.\n\n Step 1: Modify the Interface ...",t:"HowTo - Extend a Core Module That is Used by Another"},"1043":{i:0.000264415166489617,u:"../tutorials/howtos/ht-force-https.htm",a:"The following article describes how you can force to use HTTPS in your pages. Load balancer If your servers are behind a load balancer and the load balancer is doing the redirects from HTTP to HTTPS, you don\u0027t need to further configure the application.\n         Application Configuration Force HTTPS ...",t:"HowTo - Force HTTPS"},"1044":{i:0.000249280268665024,u:"../tutorials/howtos/ht-install-spryker-in-aws-environment.htm",a:"Learn how to configure native AWS services to prepare infrustructure for successful Spryker installation in AWS environment and about the installation itself. ",t:"HowTo Install Spryker In AWS Environment | Spryker"},"1045":{i:0.000249280268665024,u:"../tutorials/howtos/ht-product-data-import-frontend.htm",a:"Product Customization This article describes flow of the product data from importing it to the SQL database to showing it in the front-end view.\n Importing Products to SQL Database\n Products are imported in the SQL database through the Importer module. The product details are parsed from CSV files, ...",t:"HowTo - Product Data from Import to Front-End View"},"1046":{i:0.000249280268665024,u:"../tutorials/howtos/ht-setup-schedulers-for-different-environment-201907.htm",a:"Problem Spryker applications demand performing repetitive background operation - jobs. Such operations are necessary for synchronizing denormalized data into Search engine, key-value store, etc. We recommend running a set of predefined jobs in order for Spryker applications to operate properly. ...",t:"HowTo - Set up Schedulers for Different Environments"},"1047":{i:0.000264415166489617,u:"../tutorials/howtos/ht-setup-spryker-with-mysql.htm",a:"Spryker supports MySQL database and for installing it with this database, follow these instructions to adjust the configuration. MySQL Version Currently Spryker works only with MySQL version 5.7 or higher.  Adjusting Spryker to Run with MySQL \n    For running the Spryker Demoshop with MySQL, it is ...",t:"HowTo - Setup Spryker with MySQL"},"1048":{i:0.000264415166489617,u:"../tutorials/howtos/ht-setup-stores-with-multiple-locales.htm",a:"Multiple Locales This article describes the steps that you need to consider when you have to setup stores with multiple locales.\n\t\t Configure Locales for Store\n\t\t The stores configuration can be found in the config/Shared/stores.php file. \n\n\t\t For each store you can define a set of locales; the ...",t:"HowTo - Setup Stores with Multiple Locales"},"1049":{i:0.000264415166489617,u:"../tutorials/howtos/ht-create-personalized-prices.htm",a:" Personalized Prices This article describes the steps that you need to consider when you need to implement personalized prices for customer groups.\n \nOverview\n When implementing special prices that are according to the group the customer is part of, several steps need to be considered.\n Extend ...",t:"HowTo - Create Personalized Prices  "},"1050":{i:0.000249280268665024,u:"../tutorials/howtos/ht-use-queue-data-importer-201903.htm",a:"This article will explain you how to use the Queue Data feature that adds the ability to import data with the help of message queues.",t:"HowTo - Use Queue Data Importer | Spryker"},});