define({"400":{i:0.000407398798202665,u:"../resources_and_developer_tools/performance-scalability.htm",a:"Spryker Commerce OS was built to enable the development of high performance e-commerce applications that are able to support an extremely high number of unique visitors. However, no application can be both, light and heavy, at the same time.\n\n Therefore, we have two applications: Yves and Zed. Both ...",t:"Performance and Scalability"},"401":{i:0.00168910229892022,u:"../resources_and_developer_tools/plugin.htm",a:"Plugins are small classes that are used to connect bundles in a flexible and configurable way. In contrast to a direct call to a facade of another module, there can be an array of provided (Undefined variable: General.bundles/modules).\n\n According to our conventions, plugins are the only classes ...",t:"Plugin"},"402":{i:0.000407398798202665,u:"../resources_and_developer_tools/plugin-overview.htm",a:"To be able to use a new feature projects most likely need to add some plugins to their *DependencyProvider. Currently, it is not easy for projects to integrate a new feature and even we internally do not know to which DependencyProvider plugin A of module B can be added to bring functionality X. To ...",t:"Plugin Overview"},"403":{i:0.000407398798202665,u:"../resources_and_developer_tools/postgres-index-generator.htm",a:"Postgres doesn\u0027t automatically add indexes to foreign key columns. This can lead to performance issues with the database. In MySQL, you will get the indexes for the foreign key columns without the need to do something.  Most likely no one adds indexes for the foreign key columns manually when they ...",t:"Postgres Index Generator"},"404":{i:0.00254324733369245,u:"../resources_and_developer_tools/publish-and-synchronization-reference.htm",a:" To implement Publish and Synchronize in your code, you need to perform the following steps: 1. Add Publish Events Publish and Synchronize are event-driven. To start publishing data to the frontend, an event must be triggered. For this purpose, you need to add events for all changes you want to ...",t:"Publish and Synchronization Reference"},"405":{i:0.000471464947732906,u:"../resources_and_developer_tools/service.htm",a:"Service is a Spryker application layer shared by the Client application layer, the Zed application layer, and Yves application layer. This service layer provides the ability to register a service once and have it applied to both layers. Usage is focused on level details (infrastructure layer). For ...",t:"Service"},"406":{i:0.000407398798202665,u:"../resources_and_developer_tools/session-handlers.htm",a:"We provide a number of session handlers to work with different storages. By default, the demo-shop uses a locking Redis session handler for Yves and a non-locking Redis session handler for Zed in the development environment.\n\n The following session handlers are currently available:\n\n File\n ...",t:"Session Handlers"},"407":{i:0.000624674653361622,u:"../resources_and_developer_tools/transfer-objects.htm",a:"Transfer objects are simple data containers. Their purpose is to retrieve a standardized way to access data and to get more expressive method signatures. They are available everywhere in the system. How to Use Transfer Objects Simple usage The example shows a typical use case for a transfer object. ...",t:"Transfer Objects"},"408":{i:0.000407398798202665,u:"../maintenance/maintenance.htm",a:"Maintenance This section is dedicated to information on carrying out maintenance and maintenance-related questions.",t:"Maintenance"},"409":{i:0.00255745960439843,u:"../maintenance/post-installation-steps-and-additional-info.htm",a:" Git Configuration If you want to commit from within the VM, it is recommended to set the right Git preferences: git config --global user.email \"your.email@domain.tld\"\ngit config --global user.name \"Your Name\"\ngit config --global push.default simple\ngit config --global pull.rebase true\t\t VM ...",t:"Post-Installation Steps and Additional Info    "},"410":{i:0.000407398798202665,u:"../maintenance/vm-cleanup.htm",a:"Used to be: http://spryker.github.io/getting-started/installation/virtual-machine-cleanup/ If you need to cleanup the environment set up in the virtual machine, you can either do this by running a script or execute the cleanup steps manually.\n\n VM Cleanup - Automatic To cleanup the VM: Run the setup ...",t:"Virtual Machine Cleanup"},"411":{i:0.000407398798202665,u:"../front-end_developer_guide/user-interface-guide.htm",a:"In this section, you will find an introduction about how to build the UI for your project, when working with Spryker. The documents under this section will help you get started on designing and implementing the UI for both the front-end(Yves) and back-end(Zed) application. Academy Navigation To ...",t:"User Interface Guide"},"412":{i:0.000407398798202665,u:"../front-end_developer_guide/atomic_frontend/overview.htm",a:"Spryker Frontend implements the atomic design design. Read about the basic principles of Spryker UI implementation. Spryker UI is based on the component model, atomic design and BEM methodology concepts. ",t:"Atomic Frontend | Spryker"},"413":{i:0.000407398798202665,u:"../front-end_developer_guide/demoshop/overview.htm",a:"Demoshop  TODO:",t:"Demoshop "},"414":{i:0.00634825872316465,u:"../front-end_developer_guide/demoshop/antelope_global_tool/overview.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. Antelope is an  npm  global command line tool based upon  webpack  module bundler, designed to  build  the assets and  publish  ...",t:"Antelope Overview "},"415":{i:0.00275703141740998,u:"../front-end_developer_guide/demoshop/antelope_global_tool/asset-management-overview.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. When using the term assets,\nwe refer to a set of resources used for building UI. These resources include; html, css (or less, sass, ...",t:"Asset Management - Overview "},"416":{i:0.00270407567885352,u:"../front-end_developer_guide/demoshop/antelope_global_tool/build-optimization-antelope.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. We use Antelope for transpiling/building the assets and to optimize the resulting output.\n \nRead more about  antelope configuration ...",t:"Build and Optimization for Antelope "},"417":{i:0.00299135812476832,u:"../front-end_developer_guide/demoshop/antelope_global_tool/cli.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by Oryx. You can still use Antelope however, no new development is planned for this component. Antelope is a command line interface tool available and ready for use from your terminal/console .\n\n Before you proceed with setup, ...",t:"CLI "},"418":{i:0.00299135812476832,u:"../front-end_developer_guide/demoshop/antelope_global_tool/configuration.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by Oryx. You can still use Antelope however, no new development is planned for this component. A configuration file is a set of properties and methods that define how to process assets.\n\n Read more about  asset build and ...",t:"Configuration "},"419":{i:0.00266747876304108,u:"../front-end_developer_guide/demoshop/antelope_global_tool/development-antelope.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. Development refers to writing your own assets, consuming external dependencies and linking resources to make them work together.\n ...",t:"Development with Antelope "},"420":{i:0.00241130035235398,u:"../front-end_developer_guide/demoshop/antelope_global_tool/download-structure-antelope.htm",a:"Download and Structure (Antelope)  Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. Here you will find out how to download external dependencies and where to place them, together with ...",t:"Download and Structure - Antelope"},"421":{i:0.00299135812476832,u:"../front-end_developer_guide/demoshop/antelope_global_tool/publishing.htm",a:" Antelope Deprecation Notice: As of 04/2017 Antelope will be replaced by  Oryx . You can still use Antelope however, no new development is planned for this component. To publish assets means to place them (or the build output files) in a place where they can be accessed and loaded by the browser.\n ...",t:"Publishing "},"422":{i:0.000407398798202665,u:"../front-end_developer_guide/demoshop/frontend/frontend-overview.htm",a:" To learn how to build your assets in our Demoshop, read the  Demoshop Guide .\n\n Asset Management\n A set of resources used to build the UI, that includes html, css (or less, sass, stylus, etc.) and js (or jsx, etc.) files, images, fonts and so on.\n Assets are files, a large collection of files; a ...",t:"Frontend Overview "},"423":{i:0.000476658437627515,u:"../front-end_developer_guide/demoshop/frontend/build-optimization.htm",a:"Build and Optimization  We use  Webpack  and  Oryx  for transpiling/building the assets and to optimize the resulting output. For more on Webpack build process and requirements see: Key Concepts Getting started Using a Configuration Configuration Details Learn more about Spryker Oryx frontend ...",t:"Build Optimization"},"424":{i:0.000476658437627515,u:"../front-end_developer_guide/demoshop/frontend/demoshop-guide.htm",a:" Bootstrap the project To install all frontend the external dependecies for Yves and Zed, run in the VM console: cd /path/to/project/root ./setup -i Yves To build assets for Yves, run in the console: cd /path/to/project/root\nnpm run yves # build assets in development mode\nnpm run yves:dev # build ...",t:"Demoshop Guide "},"425":{i:0.000710985144985858,u:"../front-end_developer_guide/demoshop/frontend/development.htm",a:" Development refers to writing your own assets, consuming external dependencies and linking resources to make them work together.\n \nEssentially, the code you’re going to produce can be html, css and javascript (in any of their forms: jade, sass, less, coffescript, ecma 6, react js, etc.).\n\n ...",t:"Development "},"426":{i:0.00172771591004077,u:"../front-end_developer_guide/demoshop/frontend/download-structure.htm",a:" Here you will find out how to download external dependencies and where to place them, together with your own asset files.\n\n This page contains references to the following tools:   Webpack ,  Oryx  (Our frontend helper tool)and Oryx for Zed (Zed\u0027s frontend full automation tool). Make sure you are ...",t:"Download and Structure "},"427":{i:0.000476658437627515,u:"../front-end_developer_guide/demoshop/frontend/public-folder.htm",a:" To publish means to place the built assets in a place where they can be accessed and loaded by the browser.\n In the whole project, the only place with such access rights is the @project/public folder.\n\n Application Folders\n @project/public/Yves @project/public/Zed These folders contain only ...",t:"Public Folder "},"428":{i:0.00393221515799723,u:"../front-end_developer_guide/demoshop/oryx/oryx.htm",a:"  As of April 2017, Oryx replaces  Antelope Introduction\n Oryx is the Spryker projects frontend helper. The purpose of Oryx is to simplify the asset building process, giving developers the freedom to choose and configure the preprocessors for the frontend.\n\n Oryx relies on webpack 2.\n\n Oryx for ZED ...",t:"Oryx "},"429":{i:0.00396688482497893,u:"../front-end_developer_guide/demoshop/oryx/oryx-for-zed.htm",a:"  As of April 2017, Oryx replaces  Antelope Introduction\n oryx-for-zed is an extension of Oryx that performs a full build for Spryker Zed UI applications. It also provides access to Zed settings and Zed webpack configuration, so you can extend/change the whole building process.\n\n Requirements\n ...",t:"Oryx for Zed "},"430":{i:0.000407398798202665,u:"../front-end_developer_guide/demoshop/twig_templates/twig-overview.htm",a:" Given that we are working on a web application, we need a proper way to generate HTML dynamically. The most common approach relies on templates and for this we decided to go with Twig Template Engine.\n\n \nYou can use other technology for the front-end of your application as well; this is just a ...",t:"Overview - Twig "},"431":{i:0.000753696995326911,u:"../front-end_developer_guide/demoshop/twig_templates/twig-best-practices.htm",a:" Include vs Macros vs Embed\n With includes, you can include an entire template. The template has access to any template variables that are currently in scope.\n\n With macros, you are defining a kind of function within Twig that can render a particular component given appropriate objects.\n\n So you ...",t:"Best Practices - Twig Templates "},"432":{i:0.000407398798202665,u:"../glue_rest_api/glue-rest-api.htm",a:"This article unfolds the basics of the Glue REST API used in the Spryker Commerce OS. Get more information on the functionality and advantages of the REST API.",t:"Glue REST API | Spryker"},"433":{i:0.000580547896764788,u:"../glue_rest_api/glue_api_developer_guides/glue-api-developer-guides.htm",a:"This section describes general concepts and provides step-by-step instructions for developers working with the Glue REST API. Specifically, here you will find an overview of the Glue API infrastructure, security and authentication process, as well as guidelines on how to install and configure Glue ...",t:"Glue API Developer Guides"},"434":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_developer_guides/glue-infrastructure.htm",a:"The guide will walk you through the process of handling API requests at the Glue layer, including GlueApplication, Resource, and Relationship Modules.",t:"Glue Infrastructure | Spryker"},"435":{i:0.000493973347483727,u:"../glue_rest_api/glue_api_developer_guides/ht-implement-rest-api-resource.htm",a:"This article provides step-by-step instructions on how to implement a REST API resource in a project.",t:"How To Implement a REST API Resource | Spryker"},"436":{i:0.000493973347483727,u:"../glue_rest_api/glue_api_developer_guides/security-and-authentication.htm",a:"This article describes the authorization mechanism used in Spryker, the modules that provide it, as well as user scopes, database tables, and extension points.",t:"Security and Authentication | Spryker"},"437":{i:0.00271478809291765,u:"../glue_rest_api/glue_api_developer_guides/validating-rest-request-format.htm",a:"This guide describes how to validate REST requests with the Glue API, explains the validation rules format and prerequisites to apply the validation rules.",t:"Validating REST Request Format | Spryker"},"438":{i:0.000580547896764788,u:"../glue_rest_api/glue_api_storefront_guides/glue-api-storefront-guides.htm",a:"This section provides an overview of the Glue API feature resources. Here you will find general information about the feature resources, installation instructions, possible actions for the resources as well as sample requests/responses along with explanations of possible errors. Not found a guide ...",t:"Glue API Storefront Guides"},"439":{i:0.00232841692968555,u:"../glue_rest_api/glue_api_developer_guides/authentication-and-authorization.htm",a:"This article provides the list of private resources and describes how to install and use the means needed to work with the sensitive data.",t:"Authentication and Authorization | Spryker"},"440":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts.htm",a:"The Carts API provides access to management of customers\u0027 shopping carts. The carts come in two different forms: carts for registered customers and carts for guests. In your development, the resources provided by the API can support you in the development of shopping cart functionality for ...",t:"Managing Carts"},"441":{i:0.00116113908871121,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-guest-carts.htm",a:"The Carts API provides access to management of customers\u0027 shopping carts. The following document covers working with guest carts. Guest carts come with an expiration date, which means that unregistered users can use their carts only for a limited time frame.  After the lifetime of a guest cart ...",t:"Managing Guest Carts"},"442":{i:0.00128932071749999,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts-of-registered-users.htm",a:"The Carts API provides access to management of customers\u0027 shopping carts. The following document covers working with carts of registered users. If you want to know how to process carts of registered users, see  Managing Guest Carts . Guest Carts and Carts of Registered Users Access to carts of ...",t:"Managing Carts of Registered Users"},"443":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/managing-products.htm",a:"In Glue API, there are various product-related resources that allow you to access and manage product information. You can retrieve general information about concrete and abstract products, access product labels etc. See the following guides for more information: Retrieving Product Information ...",t:"Managing Products"},"444":{i:0.000580547896764788,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/accessing-product-labels.htm",a:"Product labels are used to focus the attention of your customers on a particular product. The article explores how to retrieve a product label by the label ID or product provided in the Product Labels API. ",t:"Accessing Product Labels | Spryker"},"445":{i:0.000667122446045849,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/retrieving-product-information.htm",a:"This article explains how to get various information and resources of an abstract or concrete product, such as availability, price, taxes, and image sets.",t:"Retrieving Product Information | Spryker"},"446":{i:0.00097446946896053,u:"../glue_rest_api/glue_api_storefront_guides/browsing-category-tree.htm",a:"The article helps you get the full category tree, including information on a category node, as well as retrieve categories by product easily and quickly. For this, use this guide that goes you through all the needed steps to reach the goal.",t:"Browsing Category Tree | Spryker"},"447":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_storefront_guides/catalog-search.htm",a:"This article provides a bunch of sample requests to be used to achieve the implementation of search options and gives explanations of request values.",t:"Catalog Search | Spryker"},"448":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_storefront_guides/getting-suggestions-for-autocompletion-and-search.htm",a:"This article provides information on which endpoints to use to get search and auto-completion suggestions for your products, categories, and CMS fields.",t:"Getting Suggestions for Auto-Completion and Search | Spryker"},"449":{i:0.00108293588078264,u:"../glue_rest_api/glue_api_storefront_guides/managing-customers.htm",a:"This article explains how to manage customer accounts and provides detailed information on which endpoints to use to create, anonymize, etc. a customer.",t:"Managing Customers | Spryker"},"450":{i:0.000954242306417564,u:"../glue_rest_api/glue_api_storefront_guides/managing-wishlists.htm",a:"Using the PATCH, GET, DELETE, and POST request sent to the endpoints provided in the Wishlists API, you can create, access, modify, delete, and to get wishlists. Use this detailed guide to help you handle this functionality for your customers",t:"Managing Wishlists | Spryker"},"451":{i:0.000622666921848807,u:"../glue_rest_api/glue_api_storefront_guides/retrieving-order-history.htm",a:"The guide instantiates a step-by-step procedure how to retrieve a list of orders or a specific order for the customer, including information on items, calculation, billing anf shipping addresses, expenses, payment providers, payment methods, etc. It also provides a detailed description for each attribute of the field.",t:"Retrieving Customer\u0027s Order History | Spryker"},"452":{i:0.000407398798202665,u:"../glue_rest_api/glue_api_storefront_guides/retrieving-store-configuration.htm",a:"This article explains how to retrieve the store configuration including currencies, countries, locales, and time zones.",t:"Retrieving Store Configuration | Spryker"},"453":{i:0.000407398798202665,u:"../glue_rest_api/rest-api-reference.htm",a:"This document provides an overview of REST API endpoints provided by Spryker by default.  For each endpoint, you will find its URL relative to the server, REST request parameters, as well as the appropriate request and response data formats. To send a request against our test server, use the Try it ...",t:"REST API Reference"},"454":{i:0.000407398798202665,u:"../industry_partners/partner-integration.htm",a:" In this section you will find information about our Industry Partner Integration solutions. Please visit our  Partners Registry  for a complete list of our partners. Hosting partners Claranet Continum Metaways root360 PlusServer Payment Providers Adyen Amazon Pay AfterPay Arvato Billpay BS Payone ...",t:"Industry Partner Integration    "},"455":{i:0.000407398798202665,u:"../industry_partners/hosting/hosting-partners.htm",a:"Find the best hosting platform to integrate your e-commerce solution: Claranet Claranet is your innovative partner for hosting your Spryker Shop. E-commerce businesses face the challenge of constantly delivering new features while guaranteeing a safe and performant operation. As one of Europe\u0027s ...",t:"Hosting Partners"},"456":{i:0.000487480256287647,u:"../industry_partners/hosting/claranet.htm",a:"Integrate Claranet hosting solution to host Spryker Legacy Demoshop.",t:"Claranet Partner Integration | Spryker"},"457":{i:0.000487480256287647,u:"../industry_partners/hosting/continum.htm",a:"Hosting Provider - Continum  Partner Information   Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Continum "},"458":{i:0.000487480256287647,u:"../industry_partners/hosting/metaways.htm",a:"Hosting Provider - Metaways  Partner Information Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Metaways"},"459":{i:0.000487480256287647,u:"../industry_partners/hosting/plusserver.htm",a:"Hosting Provider - PlusServer  Partner Information Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - PlusServer"},"460":{i:0.000487480256287647,u:"../industry_partners/hosting/root360.htm",a:"Hosting Provider - Root 360  Partner Information Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Root 360 "},"461":{i:0.000407398798202665,u:"../industry_partners/payment/payment-partners.htm",a:"Integrate your e-commerce solution with various payment partners: Adyen Adyen is a global payment company that allows businesses to accept e-commerce, mobile, and point-of-sale payments. Adyen has more than 3,500 customers and is listed on the stock exchange Euronext.\n\n\n\t\t\t\t\tAdyen offers merchants ...",t:"Payment Partners"},"462":{i:0.00273634940502508,u:"../industry_partners/payment/adyen/adyen.htm",a:"The Spryker Adyen module provides integration of Spryker e-commerce system with Adyen industry partner through API calls. Integration with checkout process and OMS (Order Management System) is provided.",t:"Adyen Payment Partner Integration | Spryker"},"463":{i:0.00272742424375576,u:"../industry_partners/payment/adyen/adyen-configuration.htm",a:"Configure your shop to use Adyen payment. The configuration consists of two main parts: editing the config file and adding the payment details to the State Machine (OMS) configuration.",t:"Adyen - Configuration | Spryker"},"464":{i:0.00272742424375576,u:"../industry_partners/payment/adyen/adyen-integration.htm",a:"Integrate Adyen payment provider into your Spryker project.",t:"Adyen - Integration | Spryker"},"465":{i:0.00272742424375576,u:"../industry_partners/payment/adyen/adyen-filter-payment-methods.htm",a:"Add filtering available payment methods with Adyen module to your Spryker project",t:"Adyen - Filter Payment Methods | Spryker"},"466":{i:0.00272742424375576,u:"../industry_partners/payment/adyen/adyen-provided-payment-methods.htm",a:"Spryker Adyen method provides the following payment methods: Credit Card, Direct Debit, Klarna Invoice, Prepayment, Sofort, PayPal, iDeal, AliPay, WeChatPay.\r\n\r\n",t:"Adyen - Provided Payment Methods | Spryker"},"467":{i:0.00311080801995448,u:"../industry_partners/payment/amazonpay/amazon-pay.htm",a:" Partner Information Amazon Pay consists of client-side tools (widget, javascript etc.) and Amazon API with SDKs written for different programming languages (PHP, Python, Ruby, Java, C#). Client-side tools are used for displaying GUI elements on some common pages of an internet shop, and it includes ...",t:"Payment Integration - Amazon Pay"},"468":{i:0.000407398798202665,u:"../industry_partners/payment/amazonpay/amazon-pay-configuration-scos.htm",a:"This tutorial describes the procedure of configuring and implementing Amazon Pay in Spryker Commerce OS Demoshop. ",t:"Amazon Pay - Configuration for the SCOS | Spryker"},"469":{i:0.00300024283426124,u:"../industry_partners/payment/amazonpay/amazon-pay-configuration.htm",a:"This tutorial describes the procedure of configuring and implementing Amazon Pay in Spryker Commerce OS Demoshop. ",t:"Amazon Pay - Configuration for the Legacy Demoshop | Spryker"},"470":{i:0.00307215520950052,u:"../industry_partners/payment/amazonpay/amazon-pay-email-notification.htm",a:" Since Amazon Pay requires some emails being sent in specific situations, please implement on a project level following authorization status update logic. UpdateOrderAuthorizationStatusTransaction Once the order authorization state is Suspended, the customer should receive an email stating that the ...",t:"Amazon Pay - Email Notifications  "},"471":{i:0.00307215520950052,u:"../industry_partners/payment/amazonpay/amazon-pay-refund.htm",a:" After successful authorization and capture processes order should be closed. This blocks any modifications to an order. From this state only Refund operation is possible. Refund can be partial if more than one item is set to refund or full. Amazon only requires the amount of money which has to be ...",t:"Amazon Pay - Refund  "},"472":{i:0.00303937245154975,u:"../industry_partners/payment/amazonpay/amazon-pay-state-machine.htm",a:" The state machine is different for synchronous and asynchronous flow. Although from status \"capture completed\" it is the same and in the state machine, it\u0027s presented as a sub-process. The state machine for the synchronous flow: The state machine for the asynchronous flow: OMS Commands Here is a ...",t:"Amazon Pay - State Machine  "},"473":{i:0.00307215520950052,u:"../industry_partners/payment/amazonpay/amazon-pay-api.htm",a:" So far we discussed the client side implementation provided by Amazon Pay. On the Spryker OS side, the module provides tools for rendering Amazon Pay widgets. Another part of the implementation is the Amazon Pay API function wrapper, implemented as a Facade. Each API call involves similar classes ...",t:"Amazon Pay - API"},"474":{i:0.00307215520950052,u:"../industry_partners/payment/amazonpay/amazon-pay-simulations.htm",a:" In order to reproduce some edge cases like declined payment or pending capture, Amazon provides two solutions. The first is special methods marked with a red star on payment widget. It allows reproducing different cases of \"decline\" payment workflow.  But there are more edge cases like expired ...",t:"Amazon Pay - Sandbox Simulations"},"475":{i:0.00251383476023429,u:"../industry_partners/payment/amazonpay/amazon-pay-order-ref-info.htm",a:"Amazon Pay - Order Reference and Information about Shipping Addresses  After successful authorization, a buyer will be redirected to an order details page to enter all the information necessary for placing an order: address of shipment, payment method, delivery method and some calculations about ...",t:"Amazon Pay - Obtaining an Amazon Order Reference and Information about Shipping Addresses"},"476":{i:0.00307215520950052,u:"../industry_partners/payment/amazonpay/amazon-pay-rendering-pay.htm",a:" Usually the checkout page includes information for the buyer to review, items in the cart, prices, total price information and some other order related details. From this page, the buyer can proceed to checkout by clicking a related GUI element (for example hyperlink or button). Amazon Pay provides ...",t:"Amazon Pay - Rendering a \"Pay with Amazon\" Button on the Cart Page"},"477":{i:0.00271210468900487,u:"../industry_partners/payment/amazonpay/amazon-pay-support-bundled-products.htm",a:"Bundled products are optional in the shop, thus support of those should be configured. First, you have to extend AmazonPayFactory: namespace Pyz\\Yves\\AmazonPay;\n \nuse Spryker\\Yves\\ProductBundle\\Grouper\\ProductBundleGrouper;\nuse SprykerEco\\Yves\\AmazonPay\\AmazonPayFactory as EcoAmazonPayFactory;\n ...",t:"Amazon Pay - Support of Bundled Products"},"478":{i:0.00044970227114682,u:"../industry_partners/payment/afterpay/afterpay.htm",a:"Payment Integration - AfterPay  Partner Information   Copyright and Disclaimer See  Disclaimer .   Last review date: Jul. 6th, 2018 ",t:"Payment Integration - AfterPay  "},});