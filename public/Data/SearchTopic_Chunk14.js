define({"1124":{i:0.00276120847488366,u:"../capabilities/checkout/multi-step_checkout/checkout-steps.htm",a:"This topic provides information about all checkout steps available for the customers.",t:"Checkout Steps | Spryker"},"1125":{i:0.00102591471824172,u:"../glue_rest_api/glue_api_storefront_guides/checking-out-purchases-and-getting-checkout-data.htm",a:"This article will help you set up the endpoint functionality for creating checkout experience, like placing orders and retrieving checkout information.",t:"Checking Out Purchases and Getting Checkout Data"},"1126":{i:0.00114199854061491,u:"../industry_partners/payment/arvato/v1_0/arvato-risk-check-1-0.htm",a:" \n    Accounted for by external credit agency data and internal existing customer- and order-details\n    the RiskCheck evaluates the probability of payment default for the customer orders.\n \n    The returned decision codes (Result – ActionCode – ResultCode) manage the definition of the eShop’s ...",t:"Arvato 1.0 - Risk Check"},"1127":{i:0.00192452559475963,u:"../capabilities/order_management/state_machine/state-machine-implementing-plugin.htm",a:"To start using state machine, create a new plugin by implementing the StateMachineHandlerInterface. You will find the interface methods to implement.",t:"Implementing the Plugin - State Machine | Spryker"},"1128":{i:0.00140996538825281,u:"../feature_integration_guides/shared_carts/shared-carts-feature-integration-201903.htm",a:"The Shared Carts Feature allows sharing shopping carts within an entire business unit. The guide describes how to integrate the feature into your project. ",t:"Shared Carts Feature Integration | Spryker"},"1129":{i:0.00192452559475963,u:"../capabilities/order_management/state_machine/state-machine-zed-presentation.htm",a:"To add manual trigger button or history for items, add some implementation. State machine provides methods for triggering events and retrieving history.",t:"Updating Presentation in Zed - State Machine | Spryker"},"1130":{i:0.000456997244860574,u:"../capabilities/product_management/product_group/product-group-under-the-hood.htm",a:" Database Schema The ProductGroup module provides spy_product_group table that stores product groups. Product group entities have only the id_product_group field, because we don’t need to display or refer to any groups in any way. The only necessary details for a group are the abstract products that ...",t:"Product Group - Under The Hood    "},"1131":{i:0.000260388330232939,u:"../capabilities/development/logger.htm",a:" Spryker contains a  PSR-3  compatible logger which can be customized to any needs. You can use the logger everywhere in the system, as in the example below: \u003c?php\n\nuse Spryker\\Shared\\Log\\LoggerTrait;\n\nclass MyClass\n{\n\n    use LoggerTrait;\n\n    public function myFunction()\n    {\n        // This will ...",t:"Logger    "},"1132":{i:0.000473667262658516,u:"../capabilities/product_management/product_options/product-options.htm",a:"Product options can be used to create product additions that can be sold with the actual product. ",t:"Product Options | Spryker"},"1133":{i:0.000365545223016866,u:"../feature_integration_guides/glue_api/product_tax_sets/product-tax-sets-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Product Tax Sets API feature in Spryker OS.",t:"Product Tax Sets API Feature Integration | Spryker"},"1134":{i:0.000687343602975332,u:"../capabilities/cms/cms_widget/cms-widget-overview-201903.htm",a:" The CMS Widget feature allows shop administrators to manage content on a CMS, category or product pages from the content widget menu in the Administration interface. With the feature  integrated , the content widget menu with  available widgets  will appear in the Edit Placeholders page under the ...",t:"CMS Widget Overview   "},"1135":{i:0.00164678963529226,u:"../feature_integration_guides/product_label/product-label-feature-integration-1-0.htm",a:"The Product Label feature allows highlighting specific products in your online shop. The guide describes how to integrate the feature in the project.",t:"Product Label Feature Integration | Spryker"},"1136":{i:0.000879820291522972,u:"../feature_integration_guides/glue_api/category-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Category API feature in Spryker OS.",t:"Category API Feature Integration | Spryker"},"1137":{i:0.00126867862115748,u:"../feature_integration_guides/prices/prices-feature-integration-201903.htm",a:"The Volume Prices Feature allows setting specific prices for units based on quantities. The guide describes how to integrate the feature into your project.",t:"Prices Feature Integration | Spryker"},"1138":{i:0.000324191421203882,u:"../capabilities/search_and_filter/search-multi-currency.htm",a:" MC Multi-currency \n            If you don\u0027t have the multi-currency feature in you current project yet and want to migrate, you have to follow certain steps to migrate your system.\n\n            First  migrate Price  and  modules related to multi-currency  before proceeding with the search for ...",t:"Multi-Currency - Search  "},"1139":{i:0.00192452559475963,u:"../capabilities/order_management/state_machine/state-machine-cronjob.htm",a:"This topic provides and overview of thre console commands dedicated for the state machine.",t:"Cron Jobs - State Machine | Spryker"},"1140":{i:0.000694167377727752,u:"../feature_integration_guides/glue_api/catalog-search-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Search API feature in Spryker OS.",t:"Search API Feature Integration | Spryker"},"1141":{i:0.000260388330232939,u:"../capabilities/development/installer.htm",a:" ML Multi-language MS Multi-store MC Multi-currency The Installer module is responsible of managing the installment process of required database data  in any environment. Plugin Stack You define the installer plugins of the bundles you want to include in the Pyz ImporterDependencyProvider: ...",t:"Installer    "},"1142":{i:0.00108605168829946,u:"../feature_integration_guides/shared_carts/shared-carts-feature-integration-201811.htm",a:"The Shared Carts Feature allows sharing shopping carts within an entire business unit. The guide describes how to integrate the feature into your project. ",t:"Shared Carts Feature Integration | Spryker"},"1143":{i:0.000516489402670845,u:"../feature_integration_guides/glue_api/product_labels_api_feature_integration/product-labels-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Product Labels API feature in Spryker OS.",t:"Product Labels API Feature Integration | Spryker"},"1144":{i:0.000547594652920501,u:"../feature_integration_guides/product-lists-catalog-integration-201903.htm",a:"Product Lists: Catalog Feature Integration  Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Product Lists: Catalog Feature Integration | Spryker"},"1145":{i:0.00238387393242311,u:"../capabilities/order_management/reclamations/reclamations-feature-overview.htm",a:"With the reclamations in place, you can do three things: create a new connected order, return money paid for the order, or close the reclamation.",t:"Reclamations Feature Overview | Spryker"},"1146":{i:0.00164678963529226,u:"../capabilities/order_management/step_engine/step-engine-workflow.htm",a:" When you need to define a multi-step process using the StepEngine feature, you need to implement the following interfaces: StepInterface - here you implement the logic that needs to get executed when the defined step takes place SubFormInterface - defines the name of the form and the pathProperty ...",t:"Step Engine Workflow    "},"1147":{i:0.000563812219535629,u:"../capabilities/search_and_filter/search-4-0.htm",a:" The latest version of this module can be found in  Search      section One of the most important features in an e-commerce application is to give the customer the ability to find the specific products. Depending on how easy it is to find the products the customer is searching for and how relevant ...",t:"Search 4.0"},"1148":{i:0.000317015983582391,u:"../capabilities/product_management/product_reviews/product-review-filter-and-sort.htm",a:" Prerequisites \n                Configure your product collector query which provides the product data for your product page map and add the required average rating value.\n             \n                Amend product page map to make it possible to filter and sort by rating value. Normalize the ...",t:"Filter \u0026 Sort by Average Rating - Product Reviews  "},"1149":{i:0.00164678963529226,u:"../feature_integration_guides/glue_api/navigation-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Navigation feature in Spryker OS.",t:"Navigation Feature Integration | Spryker"},"1150":{i:0.00300582175767216,u:"../feature_integration_guides/glue_api/customer-api-feature-integration.htm",a:"This guide will navigate through the process of installing and configuring of the Customer API feature used in Spryker OS.",t:"Customer API Feature Integration"},"1151":{i:0.000260388330232939,u:"../capabilities/development/zed-request.htm",a:" This module is used to handle requests from Yves to Zed and the responses from Zed. Internally it makes use of the well known  Guzzle  library. HandlerStackContainer Guzzle provides a way to add a so called middleware. It makes use of a handler stack where you can push a middleware to. For more ...",t:"Zed Request  "},"1152":{i:0.00206210280538341,u:"../capabilities/order_management/sales/sales-5-0.htm",a:" The latest version of this module can be found here  Sales     Getting Totals for Order Spryker does not store order grand total or subtotal amounts; all amounts are stored before calculation, order items store single item gross amounts, discounts store single item discount amount. To get the ...",t:"Sales 5.0    "},"1153":{i:0.000715458082196704,u:"../feature_integration_guides/glue_api/discontinued-products-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Discontinued Products feature in Spryker OS.",t:"Discontinued Products API Feature Integration | Spryker"},"1154":{i:0.00229623855107447,u:"../capabilities/development/collector/collector-sched-collector-jobs.htm",a:" The cronjob file jobs.php stores the configuration related to collectors.\n\n \u003c?php\n$jobs[] = [\n    \u0027name\u0027 =\u003e \u0027export-search\u0027,\n    \u0027command\u0027 =\u003e \u0027$PHP_BIN vendor/bin/console collector:search:export\u0027,\n    \u0027schedule\u0027 =\u003e \u0027*/10 * * * *\u0027,\n    \u0027enable\u0027 =\u003e false,\n    \u0027stores\u0027 =\u003e $allStores,\n];\n?\u003e In the ...",t:"Scheduling Collector Jobs "},"1155":{i:0.00104418250084924,u:"../feature_integration_guides/glue_api/wishlist_api/wishlist-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Wishlist API feature in Spryker OS.",t:"Wishlist API Feature Integration | Spryker"},"1156":{i:0.000490328689919864,u:"../capabilities/product_management/product_options/product-options-1.htm",a:"\n\t\t\t ML Multi-language MS Multi-store MC Multi-currency \n            Product options allow configuring a product further. You can define option types and each option type can have 1 to n option values.\n            Each option value has an associated price.\n             Example \n                    ...",t:"Product Options - Version 1 \n\t\t\t  "},"1157":{i:0.000623565923525245,u:"../feature_integration_guides/shopping_lists/shopping-lists-feature-integration-201903.htm",a:"Shopping Lists Feature Integration  This is an old version of the integration guide. The latest version can be found  here . Install Feature Core Prerequisites To start feature integration, overview and install the necessary features:",t:"Shopping Lists Feature Integration v.201903 | Spryker"},"1158":{i:0.000611611878361942,u:"../feature_integration_guides/glue_api/product_price_api/product-price-api-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Product Price API feature in Spryker OS.",t:"Product Price API Feature Integration | Spryker"},"1159":{i:0.00352011053236006,u:"../capabilities/development/collector/collector-development.htm",a:"The Collector module provides mechanisms to manage data consumed by front-end application. This article covers steps required to populate the data stores.",t:"Development - Collector | Spryker"},"1160":{i:0.000918477410899088,u:"../industry_partners/payment/arvato/v1_0/arvato-1-0.htm",a:" The purpose of developing the risk solution services is to provide a complete and comprehensive risk management\n    for the eCommerce/mail-order industry, contributing to a high level of modularization and automation. Besides the use\n    of pre-configured service modules for risk management, risk ...",t:"Risk Solution Services Integration - Arvato 1.0   "},"1161":{i:0.000456997244860574,u:"../capabilities/cms/cms_widget/cms-widget.htm",a:" CMS widget is the content snippet you can add and edit in the WYSIWYG editor. The CMS widget feature allows shop administrators to manage the way products, product groups, and products sets or other content, like charts and CMS blocks, is displayed on CMS pages. Therefore, with CMS widgets, the ...",t:"CMS Widget   "},"1162":{i:0.000318707233854779,u:"../feature_integration_guides/glue_api/alternative_products_api_feature_integration/alternative-products-api-feature-integration-201810.htm",a:"This guide will navigate you through the process of installing and configuring the Alternative Products API feature in Spryker OS.",t:"Alternative Products API Feature Integration | Spryker"},"1163":{i:0.000291291442272688,u:"../capabilities/development/zed_api/zed-api-crud-function.htm",a:" Filtering\n For find action we return a paginated collection that can be limited and customized based on query string input or headers. So using the provided FilterPreProcessors one can enable filtering (conditions), sorting (and multi-sorting) and pagination.\n\n Condition Filtering\n For the ...",t:"CRUD Functionality - Zed API    "},"1164":{i:0.00104305381619912,u:"../capabilities/search_and_filter/search_query.htm",a:" Once we have all necessary data in Elasticsearch, it’s time to display them in Yves. In order to achieve this, we first need to query Elasticsearch, which will return raw data for us that we need to  Process Query Result  to display it in our templates. In the SearchClient you can find the search() ...",t:"Search Query  "},"1165":{i:0.000260388330232939,u:"../capabilities/development/modules.htm",a:" A module is a group of files (PHP classes, test classes, configuration files, CSS files, etc) that refer to one concept and it’s written in a way that it makes it usable by other modules. Modules can be logically divided into categories where some are mandatory and necessary for running the OS and ...",t:"Module Guide    "},"1166":{i:0.00108435293169705,u:"../feature_integration_guides/merchant_custom_prices/merchant-custom-prices-feature-integration-201811.htm",a:"The Merchant Custom Price Feature allows setting specific prices for merchants. The guide describes the process of integrating the feature into your project.",t:"Merchant Custom Prices Feature Integration | Spryker"},"1167":{i:0.000445974825677958,u:"../capabilities/company_account/business_on_behalf/business-on-behalf.htm",a:" The latest version of this feature can be found at  Business On Behalf  . As a customer, you want sometimes to have multiple company user accounts within and across different companies, so that can access multiple companies with the same customer account but having different roles and permissions. ...",t:"Business on Behalf "},"1168":{i:0.000337325895480687,u:"../feature_integration_guides/glue_api/alternative_products_api_feature_integration/alternative-products-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Alternative Products API feature in Spryker OS.",t:"Alternative Products API Feature Integration | Spryker"},"1169":{i:0.000456997244860574,u:"../feature_integration_guides/product-review-feature-configuration.htm",a:"Configuring the Maximum Rating To change the maximum allowed rating, alter the Client configuration by extending the \\Spryker\\Client\\ProductReview\\ProductReviewConfig class in your project directory. Override getMaximumRating method to return the desired selectable maximum rating value. \n        ...",t:"Feature Configuration - Product Reviews"},"1170":{i:0.000462754550455116,u:"../capabilities/gift_cards/gift_card_purchase_and_management/gift-card-purchase-management.htm",a:"Gift card is a prepaid certificate entitling its owner to use it for the purchase of products for the gift card’s value. ",t:"Gift Card Purchase and Management | Spryker"},"1171":{i:0.000551095872870436,u:"../feature_integration_guides/glue_api/documentationreneratorrestapi-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the DocumentationGeneratorRestApi feature in Spryker OS.",t:"DocumentationGeneratorRestApi Feature Integration"},"1172":{i:0.00164678963529226,u:"../capabilities/order_management/step_engine/step-engine-use-case-scenario.htm",a:" Below you can see an example of configuration for the checkout process, containing two steps: an entry step and a success step. Click to expand the code sample \u003c?php\nnamespace Pyz\\Yves\\Checkout;\n\nuse Pyz\\Yves\\Checkout\\Form\\FormFactory;\nuse ...",t:"Use Case Scenario - Step Engine    "},"1173":{i:0.00164678963529226,u:"../feature_integration_guides/product_packaging_unit/product-packaging-unit-feature-integration-201811.htm",a:"The Product Packaging Unit Feature allows defining packaging units per abstract product. This guide describes how to integrate the feature into your project.",t:"Product Packaging Unit Feature Integration | Spryker"},"1174":{i:0.00128676960483129,u:"../feature_integration_guides/glue_api/product_price_api/price-api-feature-integration-201903.htm",a:"This guide will navigate through the process of installing and configuring of the Price API feature used in Spryker OS.",t:"Price API Feature Integration | Spryker"},"1175":{i:0.00164678963529226,u:"../feature_integration_guides/multiple_carts_+_reorder/multiple-carts-reorder-feature-integration-201811.htm",a:"The Reorder Feature allows reordering previous orders. This guide will walk you through the process of integrating the feature into your project. ",t:"Multiple Carts Reorder Feature Integration | Spryker"},"1176":{i:0.000563812219535629,u:"../capabilities/search_and_filter/search-3-0.htm",a:" The latest version of this module can be found in  Search      section One of the most important features in an e-commerce application is to give the customer the ability to find the products that he needs. Depending on how easy it is to find the products the customer is searching for and how ...",t:"Search 3.0"},"1177":{i:0.000431306934432573,u:"../capabilities/development/event/event-configure-q.htm",a:" Implementation is already present in demoshop and all code samples can be found there. To implement an events queue: Click to expand the code sample \u003c?php\nnamespace Pyz\\Client\\RabbitMq;\n\nuse ArrayObject;\nuse Generated\\Shared\\Transfer\\RabbitMqOptionTransfer;\nuse ...",t:"Configuring an Events Queue  "},"1178":{i:0.00164678963529226,u:"../capabilities/order_management/step_engine/step-engine-define-step.htm",a:" When adding a new step, you must implement the StepInterface. The StepInterface defines all the methods that StepEngine needs when executing a step: preCondition() - here you define the requirements for the step to get executed requireInput() - here you define if the step requires user input (e.g. ...",t:"Defining a Step - Step Engine    "},"1179":{i:0.00260778169327301,u:"../feature_integration_guides/shopping_lists_+_product_options_-_outdated/shopping-lists-product-options-feature-integration-201903-outdated.htm",a:"Shopping Lists: Product Options Feature Integration  Install Feature Core Prerequisites To start feature integration, overview ad install the necessary features.",t:"Shopping Lists: Product Options Feture Integration | Spryker"},"1180":{i:0.000725293376985976,u:"../capabilities/cart/calculation/calculation.htm",a:"The Calculation module is used to calculate the cart totals that are displayed in the cart/checkout or when the order is placed.",t:"Calculation | Spryker"},"1181":{i:0.000289019731326755,u:"../capabilities/product_management/product/product-define-variants.htm",a:" \n            Spryker’s data structure for products allows to design a product hierarchy.\n            The abstract product does not have stock, but defines various default properties for the descendant concrete products (product variants).\n            The concrete product (product variant) always ...",t:"Defining Variants with Abstract and Concrete Products   "},"1182":{i:0.000749171697041222,u:"../capabilities/shopping_list/products_with_options_-_outdated/product-options-in-shopping-lists-overview-outdated.htm",a:"When adding products with options to a shopping list from product details page, the selected options are saved in the shopping list.",t:"Products with Options in the Shopping Lists Feature Overview | Spryker"},"1183":{i:0.000551095872870436,u:"../feature_integration_guides/glue_api/rest_schema_validation/rest-schema-validation-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the REST Schema Validation feature in Spryker OS.",t:"REST Schema Validation Feature Integration"},"1184":{i:0.000291291442272688,u:"../capabilities/development/zed_api/zed-api-config.htm",a:" First of all we need to decide on the resources being exposed. Those will be mapped inside the ApiDependencyProvider:\n\n \u003c?php\nuse Spryker\\Zed\\CustomerApi\\Communication\\Plugin\\Api\\CustomerApiResourcePlugin;\nuse Spryker\\Zed\\ProductApi\\Communication\\Plugin\\Api\\ProductApiResourcePlugin;\n\n    /**\n     * ...",t:"Zed API Configuration    "},"1185":{i:0.000337062369566877,u:"../feature_integration_guides/shopping_lists/shopping-lists-feature-integration-201811.htm",a:"Shopping list is a list of items that buyers buy or plan to buy frequently. Shopping lists allow your customers to quickly order regualry bought items. This guide will walk you through the process of integrating the Shopping lists feature into your project.",t:"Shopping Lists Feature Integration | Spryker"},"1186":{i:0.00164678963529226,u:"../feature_integration_guides/agent_assist/agent-assist-feature-integration-201811.htm",a:"Agent Assist enables agent users to log in to shop to perform actions on customers’ behalf. This guide describes how to install Agent Assist in your project.",t:"Feature Integration - Agent Assist | Spryker"},"1187":{i:0.000260388330232939,u:"../capabilities/development/data-feed.htm",a:" BETA version\n This module is still in development. For questions and inquiries please contact  academy@spryker.com DataFeed module helps to query abstract products, categories, prices, availability data and related information for exporting or processing. The data Feed is not dependent on ...",t:"Data Feed Modules    "},"1188":{i:0.000640367440637932,u:"../capabilities/gift_cards/gift_card_purchase_and_management/gift-cards-purchase-redeeming.htm",a:"This article describes general concepts of gift cards, gift card’s purchase and redeeming process, as well as the various use case scenarios.",t:"Gift Cards Purchase and Redeeming | Spryker"},"1189":{i:0.00164678963529226,u:"../feature_integration_guides/minimum_order_value/minimum-order-value-feature-integration-201811.htm",a:"The Minimum Order Value Feature allows setting a minimum threshold for customer\u0027s orders. The guide describes how to integrate the feature into your project. ",t:"Minimum Order Value Feature Integration | Spryker"},"1190":{i:0.00150565554034837,u:"../capabilities/company_account/product_restrictions_from_merchant_to_buyer/product-restrictions-from-merchant-to-buyer-overview.htm",a:"Product Restrictions allow merchants to define the products that are available to each of their B2B customers.",t:"Product Restrictions from Merchant to Buyer Overview | Spryker"},"1191":{i:0.000291291442272688,u:"../capabilities/development/zed_api/zed-api-project-implementation.htm",a:" For the API and the API bundles to get activated we need to configure our own service provider stack in the Zed ApplicationDependencyProvider class:\n\n \u003c?php\n    /**\n     * @param \\Spryker\\Zed\\Kernel\\Container $container\n     *\n     * @return \\Silex\\ServiceProviderInterface[]\n     */\n    protected ...",t:"Project Implementation - Zed API    "},"1192":{i:0.000661527068868339,u:"../feature_integration_guides/glue_api/products-feature-integration-201907.htm",a:"Products Feature Integration Install Feature API Prerequisites To start feature integration, overview and install the necessary features:",t:"Products Feature Integration"},"1193":{i:0.000984209183809652,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts-of-registered-users.htm",a:"This article describes the endpoints that provide access to shopping carts management functionality for the carts of the registered users. ",t:"Managing Carts of Registered Users"},"1194":{i:0.00146294317986871,u:"../feature_integration_guides/glue_api/product_api_feature_integration/product-api-feature-integration-201903.htm",a:"This guide will navigate you through the process of installing and configuring the Product API feature in Spryker OS.",t:"Product API Feature Integration | Spryker"},"1195":{i:0.000260388330232939,u:"../capabilities/development/sequence-number.htm",a:" \n    Sometimes it should be ensured for a project that the just generated number is not used for the same purpose twice.\n    Spryker provides Sequence Number module which handles the unique number generation.\n General Usage The sequence number facade contains ::generate() method which provides a ...",t:"Sequence Number    "},"1196":{i:0.000324191421203882,u:"../capabilities/search_and_filter/search-configure-elasticsearch.htm",a:" Elasticsearch is a NoSQL data store which allows us to predefine the structure of the data we’ll be storing in it. Since the data structure we use is static, we would like to define it in advance. The definitions of the indexes and mapping types are written in JSON format, just as you’ll find it in ...",t:"Configure Elasticsearch    "},"1197":{i:0.000317015983582391,u:"../capabilities/product_management/product_reviews/product-review-feature-configuration.htm",a:" Configuring the Maximum Rating To change the maximum allowed rating, alter the Client configuration by extending the \\Spryker\\Client\\ProductReview\\ProductReviewConfig class in your project directory. Override getMaximumRating method to return the desired selectable maximum rating value. \n        ...",t:"Feature Configuration - Product Reviews  "},"1198":{i:0.00229033188937166,u:"../capabilities/product_management/product_options/product-option-module-1.htm",a:" ML Multi-language MS Multi-store MC Multi-currency This module manages the product options. The product options are product additions that can be sold with the actual product. Each product abstract can have multiple product option groups attached. Each product option value has a price, which ...",t:"Product Option Module - Version 1    "},"1199":{i:0.00229623855107447,u:"../capabilities/development/collector/collector-types.htm",a:" Data Collection\n\nData aggregation is a complex process of transforming scattered data between different resources, into a new one, usually smaller then the input. There are two basic Collector Types, depending on the way the data is being collected.\n\n AbstractPdoCollector - uses PHP Data Objects ...",t:"Collector Types "},"1200":{i:0.00927928639480646,u:"../feature_integration_guides/glue_api/glue-application-feature-integration.htm",a:"This guide will navigate you through the process of installing and configuring the Glue Application feature in Spryker OS.",t:"Glue Application Feature Integration"},"1201":{i:0.000510929544238528,u:"../capabilities/media_management/product-image-management.htm",a:"Group several images into sets and link them to products. One product can have several named and localized sets of images.",t:"Product Image Management | Spryker"},"1202":{i:0.00213793583148978,u:"../feature_integration_guides/company_account/company-account-feature-integration-201903.htm",a:"This integration guide provides a set of procedures needed to be performed in order to integrate the Business on Behalf feature into your project.",t:"Company Account Feature Integration | Spryker"},"1203":{i:0.000270349531509977,u:"../industry_partners/payment/payone/legacy_demoshop/v1_0/payone-paypal-express-checkout.htm",a:" The payment using PayPal requires redirect to PayPal website. When the customer is redirected to PayPal’s website, he must authorize himself and he has the option to either cancel or validate the transaction. A concern regarding payment flows that require redirection on third party website pages is ...",t:"PayOne - PayPal Express Checkout Payment"},});