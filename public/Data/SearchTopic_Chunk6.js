define({"516":{i:0.00110237418985445,u:"../maintenance/post-installation-steps-and-additional-info.htm",a:" Git Configuration If you want to commit from within the VM, it is recommended to set the right Git preferences: git config --global user.email \"your.email@domain.tld\"\ngit config --global user.name \"Your Name\"\ngit config --global push.default simple\ngit config --global pull.rebase true\t\t VM ...",t:"Post-Installation Steps and Additional Info    "},"517":{i:0.000399731176625441,u:"../maintenance/vm-cleanup.htm",a:"Used to be: http://spryker.github.io/getting-started/installation/virtual-machine-cleanup/ If you need to cleanup the environment set up in the virtual machine, you can either do this by running a script or execute the cleanup steps manually.\n\n VM Cleanup - Automatic To cleanup the VM: Run the setup ...",t:"Virtual Machine Cleanup"},"518":{i:0.000271896924151056,u:"../front-end_developer_guide/about-frontend-guide.htm",a:"This section is meant for the front-end developers and contains information on the Spryker front end architecture and concepts. The guide is broken up into the following parts: Yves front-end guidelines  that apply specifically to Yves and contain the following information: The main principles of ...",t:"About Front-End Developer Guide"},"519":{i:0.000304913028581448,u:"../front-end_developer_guide/yves/about-yves-guides.htm",a:"This section applies to Yves and contains information on how the frontend is built in Spryker. Spryker frontend implements a design methodology called atomic design.\n    Due to this, the UI layer of Spryker is called Atomic Frontend. The  Atomic Frontend      guide describes the basic principles of ...",t:"About Yves Guides"},"520":{i:0.000434501264908406,u:"../front-end_developer_guide/yves/atomic-frontend.htm",a:"Spryker Frontend implements the atomic design design. Read about the basic principles of Spryker UI implementation. Spryker UI is based on the component model, atomic design and BEM methodology concepts. ",t:"Atomic Frontend | Spryker"},"521":{i:0.00289660227426223,u:"../front-end_developer_guide/yves/modular-frontend.htm",a:"You will read about Modular Frontend concept which includes pages and widgets. Also, there is information about Pages module and how it can be extended. ",t:"Modular Frontend | Spryker"},"522":{i:0.000271896924151056,u:"../front-end_developer_guide/yves/adding-using-external-libraries-yves.htm",a:"Adding and Using External Library in Your Project via npm To install library and add it to dependencies, run the following command: npm i name-of-library Now you can use it in any component: name-of-your-component.ts \nimport Component from \u0027ShopUi/models/component\u0027;\nimport nameOfLibrary from ...",t:"Adding and Using External Libraries in Yves"},"523":{i:0.000271896924151056,u:"../front-end_developer_guide/yves/frontend-builder-for-yves.htm",a:"This article provides information about how to prepare assets (CSS, js, images, etc.) for different namespaces and their themes. Commands The builder has several modes to build frontend: npm run yves - builds assets in the development mode with all the namespaces and themes. npm run yves:watch - ...",t:"Frontend Builder for Yves"},"524":{i:0.000304913028581448,u:"../front-end_developer_guide/zed/about-zed-guides.htm",a:"About Zed Guides This section contains specific information on Zed frontend. In particular, how the  Orix builder  works.",t:"About Zed Guides"},"525":{i:0.0012463827285626,u:"../front-end_developer_guide/zed/oryx/oryx.htm",a:"Oryx is the Spryker projects frontend helper. The purpose of Oryx is to simplify the asset building process, giving developers the freedom to choose and configure the preprocessors for the frontend.\n\n Oryx relies on webpack 2.\n\n Oryx for ZED If you\u0027re looking for Oryx ZED dedicated solution, see  ...",t:"Oryx"},"526":{i:0.00988140795988905,u:"../front-end_developer_guide/zed/oryx/oryx-for-zed.htm",a:" Introduction\n oryx-for-zed is an extension of Oryx that performs a full build for Spryker Zed UI applications. It also provides access to Zed settings and Zed webpack configuration, so you can extend/change the whole building process.\n\n Requirements\n nodejs version 6.x LTS\n npm version \u003e= 3.x or ...",t:"Oryx for Zed "},"527":{i:0.000304913028581448,u:"../front-end_developer_guide/legacy_demoshop/about-legacy-demoshop-guides.htm",a:"The Legacy Demoshop Front-end guides provide information of how the front-end was built in the  Legacy Demoshop . Here you will find the following information: Overview of the Twig Template Engine  used for building the front-end; Twig Templates best practices  providing in-depth information on how ...",t:"About the Legacy Demoshop Front-end Guides"},"528":{i:0.000308922134530187,u:"../front-end_developer_guide/legacy_demoshop/twig_templates/twig-overview.htm",a:" Given that we are working on a web application, we need a proper way to generate HTML dynamically. The most common approach relies on templates and for this we decided to go with Twig Template Engine.\n\n \nYou can use other technology for the front-end of your application as well; this is just a ...",t:"Overview - Twig "},"529":{i:0.000571506355327522,u:"../front-end_developer_guide/legacy_demoshop/twig_templates/twig-best-practices.htm",a:" Include vs Macros vs Embed\n With includes, you can include an entire template. The template has access to any template variables that are currently in scope.\n\n With macros, you are defining a kind of function within Twig that can render a particular component given appropriate objects.\n\n So you ...",t:"Best Practices - Twig Templates "},"530":{i:0.000355144680732735,u:"../front-end_developer_guide/legacy_demoshop/build-optimization.htm",a:"Build and Optimization  We use  Webpack  and  Oryx  for transpiling/building the assets and to optimize the resulting output. For more on Webpack build process and requirements see: Key Concepts Getting started Using a Configuration Configuration Details Learn more about Spryker Oryx frontend ...",t:"Build Optimization"},"531":{i:0.000355144680732735,u:"../front-end_developer_guide/legacy_demoshop/demoshop-guide.htm",a:" Bootstrap the project To install all frontend the external dependecies for Yves and Zed, run in the VM console: cd /path/to/project/root ./setup -i Yves To build assets for Yves, run in the console: cd /path/to/project/root\nnpm run yves # build assets in development mode\nnpm run yves:dev # build ...",t:"Demoshop Guide "},"532":{i:0.000355144680732735,u:"../front-end_developer_guide/legacy_demoshop/development.htm",a:" Development refers to writing your own assets, consuming external dependencies and linking resources to make them work together.\n \nEssentially, the code youâ€™re going to produce can be html, css and javascript (in any of their forms: jade, sass, less, coffescript, ecma 6, react js, etc.).\n\n ...",t:"Development "},"533":{i:0.000617643823847889,u:"../front-end_developer_guide/legacy_demoshop/download-structure.htm",a:" Here you will find out how to download external dependencies and where to place them, together with your own asset files.\n\n This page contains references to the following tools:   Webpack ,  Oryx  (Our frontend helper tool)and Oryx for Zed (Zed\u0027s frontend full automation tool). Make sure you are ...",t:"Download and Structure "},"534":{i:0.000271896924151056,u:"../front-end_developer_guide/legacy_demoshop/frontend-overview.htm",a:" To learn how to build your assets in our Demoshop, read the  Demoshop Guide .\n\n Asset Management\n A set of resources used to build the UI, that includes html, css (or less, sass, stylus, etc.) and js (or jsx, etc.) files, images, fonts and so on.\n Assets are files, a large collection of files; a ...",t:"Frontend Overview "},"535":{i:0.000355144680732735,u:"../front-end_developer_guide/legacy_demoshop/public-folder.htm",a:" To publish means to place the built assets in a place where they can be accessed and loaded by the browser.\n In the whole project, the only place with such access rights is the @project/public folder.\n\n Application Folders\n @project/public/Yves @project/public/Zed These folders contain only ...",t:"Public Folder "},"536":{i:0.000304913028581448,u:"../front-end_developer_guide/miscellaneous/about-miscellaneous.htm",a:"About the Miscellaneous Guides This section contains general front-end related information and includes the following guides: User Interface Guide  outlining the basic design rules to help you get started with the front-end implementation of your project.",t:"About the Miscellaneous Guides"},"537":{i:0.000564089501235364,u:"../front-end_developer_guide/miscellaneous/user-interface-guide.htm",a:"User Interface Guide The attached document is aimed for Agencies and Designers. It sets out the basic design rules that will help you get started on designing and implementing the UI for both the front-end(Yves) and back-end(Zed) application when working with Spryker.",t:"User Interface Guide"},"538":{i:0.000301843275325976,u:"../glue_rest_api/glue-rest-api.htm",a:"This article unfolds the basics of the Glue REST API used in the Spryker Commerce OS. Get more information on the functionality and advantages of the REST API.",t:"Glue REST API | Spryker"},"539":{i:0.000336038720364257,u:"../glue_rest_api/glue_api_developer_guides/glue-api-developer-guides.htm",a:"This section contains information on developing with Glue REST API, which allows working with the endpoints provided in Spryker.",t:"Glue API Developer Guides | Spryker"},"540":{i:0.000744795126895515,u:"../glue_rest_api/glue_api_developer_guides/glue-infrastructure.htm",a:"The guide will walk you through the process of handling API requests at the Glue layer, including GlueApplication, Resource, and Relationship Modules.",t:"Glue Infrastructure | Spryker"},"541":{i:0.000625739309441965,u:"../glue_rest_api/glue_api_developer_guides/security-and-authentication.htm",a:"This article describes the authorization mechanism used in Spryker, the modules that provide it, as well as user scopes, database tables, and extension points.",t:"Security and Authentication | Spryker"},"542":{i:0.000336038720364257,u:"../glue_rest_api/glue_api_storefront_guides/glue-api-storefront-guides.htm",a:"This section provides an overview of the Glue API feature resources. Here you will find general information about feature resources, detailed endpoint descriptions, available RESTÂ verbs along with explanations of any errors that you may encounter. Not found a guide you are looking for? Let us know ...",t:"Glue API Storefront Guides"},"543":{i:0.0056872326847832,u:"../glue_rest_api/glue_api_storefront_guides/authentication-and-authorization.htm",a:"This article provides the list of private resources and describes how to install and use the means needed to work with the sensitive data.",t:"Authentication and Authorization | Spryker"},"544":{i:0.000301843275325976,u:"../glue_rest_api/glue_api_storefront_guides/retrieving-store-configuration.htm",a:"This article explains how to retrieve the store configuration including currencies, countries, locales, and time zones.",t:"Retrieving Store Configuration | Spryker"},"545":{i:0.000379391306930205,u:"../glue_rest_api/glue_api_storefront_guides/retrieving-navigation-trees-201907.htm",a:"The topic demonstrates how to retrieve navigation trees with the help of API endpoints.",t:"Retrieving Navigation Trees | Spryker"},"546":{i:0.000271896924151056,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/b2b-account-management-201907.htm",a:"This section contains information on managing B2B accounts with the help of Spryker REST APIs.",t:"B2B Account Management | Spryker"},"547":{i:0.00741252129932722,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/logging-in-as-company-user-201907.htm",a:"The article provides information on how to access private B2B resources using Spryker Glue API.",t:"Logging In as Company User | Spryker"},"548":{i:0.00328078463947045,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/retrieving-company-user-information-201907.htm",a:"The article provides information on how to retrieve information on company user accounts via endpoints provided by Spryker Glue API.",t:"Retrieving Company User Information | Spryker"},"549":{i:0.00328078463947045,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/retrieving-company-information-201907.htm",a:"The article describes how to leverage endpoints provided by Spryker Glue API to retrieve company information.",t:"Retrieving Company Information | Spryker"},"550":{i:0.00269369959670576,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/retrieving-business-unit-information-201907.htm",a:"The article describes how to use Spryker Glue API to retrieve business unit information.",t:"Retrieving Business Unit Information | Spryker"},"551":{i:0.00269369959670576,u:"../glue_rest_api/glue_api_storefront_guides/b2b_account_management/retrieving-company-role-information-201907.htm",a:"The article describes how to use Spryker Glue API to retrieve company roles.",t:"Retrieving Company Role Information | Spryker"},"552":{i:0.00116370799819894,u:"../glue_rest_api/glue_api_storefront_guides/browsing-category-tree.htm",a:"The article helps you get the full category tree, including information on a category node, as well as retrieve categories by product easily and quickly. For this, use this guide that goes you through all the needed steps to reach the goal.",t:"Browsing Category Tree | Spryker"},"553":{i:0.000707213907741559,u:"../glue_rest_api/glue_api_storefront_guides/catalog-search.htm",a:"This article provides a bunch of sample requests to be used to achieve the implementation of search options and gives explanations of request values.",t:"Catalog Search | Spryker"},"554":{i:0.000301843275325976,u:"../glue_rest_api/glue_api_storefront_guides/getting-suggestions-for-autocompletion-and-search.htm",a:"This article provides information on which endpoints to use to get search and auto-completion suggestions for your products, categories, and CMS fields.",t:"Getting Suggestions for Auto-Completion and Search | Spryker"},"555":{i:0.000271896924151056,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/managing-products.htm",a:"This section contains information on managing product-related resources for accessing and manipulating product information.",t:"Managing Products | Spryker"},"556":{i:0.000761029027644603,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/retrieving-product-information.htm",a:"This article explains how to get various information and resources of an abstract or concrete product, such as availability, price, taxes, and image sets.",t:"Retrieving Product Information | Spryker"},"557":{i:0.000359621458079161,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/accessing-product-labels.htm",a:"Product labels are used to focus the attention of your customers on a particular product. The article explores how to retrieve a product label by the label ID or product provided in the Product Labels API. ",t:"Accessing Product Labels | Spryker"},"558":{i:0.000444493029930786,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/retrieving-related-products-201903.htm",a:"The article demonstrates how to find alternatives for discontinued products with the help of Glue API endpoints.",t:"Retrieving Related Products | Spryker"},"559":{i:0.000405239050734982,u:"../glue_rest_api/glue_api_storefront_guides/managing_products/retrieving-alternative-products-201903.htm",a:"The article demonstrates how to find alternatives for discontinued products with the help of Glue API endpoints.",t:"Retrieving Alternative Products | Spryker"},"560":{i:0.000820119871725913,u:"../glue_rest_api/glue_api_storefront_guides/managing-customers.htm",a:"This article explains how to manage customer accounts and provides detailed information on which endpoints to use to create, anonymize, etc. a customer.",t:"Managing Customers | Spryker"},"561":{i:0.000861420890636776,u:"../glue_rest_api/glue_api_storefront_guides/managing-wishlists.htm",a:"Using the PATCH, GET, DELETE, and POST request sent to the endpoints provided in the Wishlists API, you can create, access, modify, delete, and to get wishlists. Use this detailed guide to help you handle this functionality for your customers",t:"Managing Wishlists | Spryker"},"562":{i:0.000301843275325976,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts.htm",a:"This section contains information on managing Spryker\u0027s shopping cart functionality for both registered and guest customers.",t:"Managing Carts | Spryker"},"563":{i:0.000941756257203211,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-guest-carts.htm",a:"This article describes the endpoints that provide access to shopping carts management functionality for the guest carts. ",t:"Managing Guest Carts | Spryker"},"564":{i:0.00104571655505955,u:"../glue_rest_api/glue_api_storefront_guides/managing_carts/managing-carts-of-registered-users.htm",a:"This article describes the endpoints that provide access to shopping carts management functionality for the carts of the registered users. ",t:"Managing Carts of Registered Users | Spryker"},"565":{i:0.000998377799177753,u:"../glue_rest_api/glue_api_storefront_guides/checking-out-purchases-and-getting-checkout-data.htm",a:"This article will help you set up the endpoint functionality for creating checkout experience, like placing orders and retrieving checkout information.",t:"Checking Out Purchases and Getting Checkout Data | Spryker"},"566":{i:0.000271896924151056,u:"../glue_rest_api/glue_api_storefront_guides/retrieving_content_item_data/retrieving-content-item-data-201907.htm",a:"This section provides guides that can help you access and manage relevant data of content items. You can retrieve information on each content item based on its content item key for all or a specific locale.  See the following guides for more details: Retrieving Banner Content Item Data Getting ...",t:"Retrieving Content Item Data"},"567":{i:0.000271896924151056,u:"../glue_rest_api/glue_api_storefront_guides/retrieving_content_item_data/getting-abstract-product-list-content-item-data-201907.htm",a:"Abstract Product List API provides resources to retrieve data on abstract products included in the Abstract Product List content item for all or specific locale",t:"Getting Abstract Product List Content Item Data | Spryker"},"568":{i:0.000271896924151056,u:"../glue_rest_api/glue_api_storefront_guides/retrieving_content_item_data/retrieving-banner-content-item-data-201907.htm",a:"Banner API implements REST API endpoint that can retrieve banner content item data available in the storage for all or a specific locale",t:"Retrieving Banner Content Item Data | Spryker"},"569":{i:0.000471567959123269,u:"../glue_rest_api/glue_api_storefront_guides/retrieving-order-history.htm",a:"The guide instantiates a step-by-step procedure how to retrieve a list of orders or a specific order for the customer, including information on items, calculation, billing anf shipping addresses, expenses, payment providers, payment methods, etc. It also provides a detailed description for each attribute of the field.",t:"Retrieving Customer\u0027s Order History | Spryker"},"570":{i:0.000528464109003859,u:"../glue_rest_api/b2c_api_react_example/b2c-api-react-example.htm",a:"B2C API Demo Shop is a single-page web application that deonstrates the use of Spryker Glue REST API in B2C scenarios.",t:"B2C API Demo Shop | Spryker"},"571":{i:0.000301843275325976,u:"../glue_rest_api/b2c_api_react_example/b2c-api-react-example-installation.htm",a:"This article describes installation of B2C API Demo Shop to experience the use of Spryker Glue REST API.",t:"B2C API Demo Shop Installation | Spryker"},"572":{i:0.000365985071539177,u:"../glue_rest_api/rest-api-reference.htm",a:"This page provides an exhaustive reference for the REST API endpoints present in Spryker by default with the corresponding parameters and data formats.",t:"REST API Reference | Spryker"},"573":{i:0.000271896924151056,u:"../industry_partners/partner-integration.htm",a:" In this section you will find information about our Industry Partner Integration solutions. Please visit our  Partners Registry  for a complete list of our partners. Hosting partners Claranet Continum Metaways Root360 PlusServer Payment Providers Adyen Amazon Pay AfterPay Arvato Braintree BSÂ Payone ...",t:"Industry Partner Integration    "},"574":{i:0.000271896924151056,u:"../industry_partners/hosting/hosting-partners.htm",a:"Find the best hosting platform to integrate your e-commerce solution: Claranet Claranet is your innovative partner for hosting your Spryker Shop. E-commerce businesses face the challenge of constantly delivering new features while guaranteeing a safe and performant operation. As one of Europe\u0027s ...",t:"Hosting Partners"},"575":{i:0.000326088874871285,u:"../industry_partners/hosting/claranet.htm",a:"Integrate Claranet hosting solution to host Spryker Legacy Demoshop.",t:"Claranet Partner Integration | Spryker"},"576":{i:0.000326088874871285,u:"../industry_partners/hosting/continum.htm",a:"Hosting Provider - Continum  Partner Information Â  Copyright and Disclaimer See  Disclaimer . Â  Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Continum "},"577":{i:0.000326088874871285,u:"../industry_partners/hosting/metaways.htm",a:"Hosting Provider - Metaways  Partner Information Copyright and Disclaimer See  Disclaimer . Â  Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Metaways"},"578":{i:0.000326088874871285,u:"../industry_partners/hosting/plusserver.htm",a:"Hosting Provider - PlusServer  Partner Information Copyright and Disclaimer See  Disclaimer . Â  Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - PlusServer"},"579":{i:0.000326088874871285,u:"../industry_partners/hosting/root360.htm",a:"Hosting Provider - Root 360  Partner Information Copyright and Disclaimer See  Disclaimer . Â  Last review date: Jul. 6th, 2018 ",t:"Hosting Provider - Root 360 "},"580":{i:0.000271896924151056,u:"../industry_partners/payment/payment-partners.htm",a:"Integrate your e-commerce solution with various payment partners: Adyen Adyen is a global payment company that allows businesses to accept e-commerce, mobile, and point-of-sale payments. Adyen has more than 3,500 customers and is listed on the stock exchange Euronext.\n\n\n\t\t\t\t\tAdyen offers merchants ...",t:"Payment Partners"},"581":{i:0.00230833449819022,u:"../industry_partners/payment/adyen/adyen.htm",a:"The Spryker Adyen module provides integration of Spryker e-commerce system with Adyen industry partner through API calls. Integration with checkout process and OMS (Order Management System) is provided.",t:"Adyen Payment Partner Integration | Spryker"},"582":{i:0.00247114946744844,u:"../industry_partners/payment/adyen/adyen-configuration.htm",a:"Configure your shop to use Adyen payment. The configuration consists of two main parts: editing the config file and adding the payment details to the State Machine (OMS) configuration.",t:"Adyen - Configuration | Spryker"},"583":{i:0.00247114946744844,u:"../industry_partners/payment/adyen/adyen-integration.htm",a:"Integrate Adyen payment provider into your Spryker project.",t:"Adyen - Integration | Spryker"},"584":{i:0.00230176179550974,u:"../industry_partners/payment/adyen/adyen-filter-payment-methods.htm",a:"Add filtering available payment methods with Adyen module to your Spryker project",t:"Adyen - Filter Payment Methods | Spryker"},"585":{i:0.00230176179550974,u:"../industry_partners/payment/adyen/adyen-provided-payment-methods.htm",a:"Spryker Adyen method provides the following payment methods: Credit Card, Direct Debit, Klarna Invoice, Prepayment, Sofort, PayPal, iDeal, AliPay, WeChatPay.\r\n\r\n",t:"Adyen - Provided Payment Methods | Spryker"},"586":{i:0.00208131693402696,u:"../industry_partners/payment/amazonpay/amazon-pay.htm",a:" Partner Information Amazon Pay consists of client-side tools (widget, javascript etc.) and Amazon API with SDKs written for different programming languages (PHP, Python, Ruby, Java, C#). Client-side tools are used for displaying GUI elements on some common pages of an internet shop, and it includes ...",t:"Payment Integration - Amazon Pay"},"587":{i:0.000271896924151056,u:"../industry_partners/payment/amazonpay/amazon-pay-configuration-scos.htm",a:"This tutorial describes the procedure of configuring and implementing Amazon Pay in Spryker Commerce OS Demoshop. ",t:"Amazon Pay - Configuration for the SCOS | Spryker"},"588":{i:0.00200489589627801,u:"../industry_partners/payment/amazonpay/amazon-pay-configuration-demoshop.htm",a:"This tutorial describes the procedure of configuring and implementing Amazon Pay in Spryker Commerce OS Demoshop. ",t:"Amazon Pay - Configuration for the Legacy Demoshop | Spryker"},"589":{i:0.00205291834985593,u:"../industry_partners/payment/amazonpay/amazon-pay-email-notification.htm",a:" Since Amazon Pay requires some emails being sent in specific situations, please implement on a project level following authorization status update logic. UpdateOrderAuthorizationStatusTransaction Once the order authorization state is Suspended, the customer should receive an email stating that the ...",t:"Amazon Pay - Email Notifications  "},"590":{i:0.00205291834985593,u:"../industry_partners/payment/amazonpay/amazon-pay-refund.htm",a:" After successful authorization and capture processes order should be closed. This blocks any modifications to an order. From this state only Refund operation is possible. Refund can be partial if more than one item is set to refund or full. Amazon only requires the amount of money which has to be ...",t:"Amazon Pay - Refund  "},"591":{i:0.00203101032454981,u:"../industry_partners/payment/amazonpay/amazon-pay-state-machine.htm",a:" The state machine is different for synchronous and asynchronous flow. Although from status \"capture completed\" it is the same and in the state machine, it\u0027s presented as a sub-process. The state machine for the synchronous flow: The state machine for the asynchronous flow: OMS Commands Here is a ...",t:"Amazon Pay - State Machine  "},"592":{i:0.00205291834985593,u:"../industry_partners/payment/amazonpay/amazon-pay-api.htm",a:" So far we discussed the client side implementation provided by Amazon Pay. On the Spryker OS side, the module provides tools for rendering Amazon Pay widgets. Another part of the implementation is the Amazon Pay API function wrapper, implemented as a Facade. Each API call involves similar classes ...",t:"Amazon Pay - API"},"593":{i:0.00205291834985593,u:"../industry_partners/payment/amazonpay/amazon-pay-simulations.htm",a:" In order to reproduce some edge cases like declined payment or pending capture, Amazon provides two solutions. The first is special methods marked with a red star on payment widget. It allows reproducing different cases of \"decline\" payment workflow.  But there are more edge cases like expired ...",t:"Amazon Pay - Sandbox Simulations"},"594":{i:0.00167980298393243,u:"../industry_partners/payment/amazonpay/amazon-pay-order-ref-info.htm",a:"Amazon Pay - Order Reference and Information about Shipping Addresses  After successful authorization, a buyer will be redirected to an order details page to enter all the information necessary for placing an order: address of shipment, payment method, delivery method and some calculations about ...",t:"Amazon Pay - Obtaining an Amazon Order Reference and Information about Shipping Addresses"},"595":{i:0.00205291834985593,u:"../industry_partners/payment/amazonpay/amazon-pay-rendering-pay.htm",a:" Usually the checkout page includes information for the buyer to review, items in the cart, prices, total price information and some other order related details. From this page, the buyer can proceed to checkout by clicking a related GUI element (for example hyperlink or button). Amazon Pay provides ...",t:"Amazon Pay - Rendering a \"Pay with Amazon\" Button on the Cart Page"},"596":{i:0.00181233598930085,u:"../industry_partners/payment/amazonpay/amazon-pay-support-bundled-products.htm",a:" Bundled products are optional in the shop, thus support of those should be configured. First, you have to extend AmazonPayFactory: namespace Pyz\\Yves\\AmazonPay;\n \nuse Spryker\\Yves\\ProductBundle\\Grouper\\ProductBundleGrouper;\nuse SprykerEco\\Yves\\AmazonPay\\AmazonPayFactory as EcoAmazonPayFactory;\n ...",t:"Amazon Pay - Support of Bundled Products"},"597":{i:0.000302977601770011,u:"../industry_partners/payment/afterpay/afterpay.htm",a:"Payment Integration - AfterPay  Partner Information Â  Copyright and Disclaimer See  Disclaimer . Â  Last review date: Jul. 6th, 2018 ",t:"Payment Integration - AfterPay  "},"598":{i:0.000271896924151056,u:"../industry_partners/payment/afterpay/afterpay-installation-and-configuration.htm",a:"This article describes the process of installing and configuring of AfterPay â€” a payment partner of Spryker.",t:"Afterpay Installation and Configuration | Spryker"},"599":{i:0.000874574675275826,u:"../industry_partners/payment/arvato/arvato.htm",a:"Risk Solution Services Integration - Arvato  Partner Information Â  See also: Arvato Risk Solution Services Integration  Arvato Risk Check\n            \n Arvato Store Order Arvato partners with e-commerce platform Spryker Â  Last review date: Jul. 5th, 2017  Â ",t:"Risk Solution Services Integration - Arvato"},});