<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OldOutdated">
    <head>
    </head>
    <body>
        <h1>Pe<MadCap:annotation MadCap:createDate="2018-10-10T14:19:28.2771873+03:00" MadCap:creator="Oksana Karasyova" MadCap:initials="OK" MadCap:comment="outdated\r\n" MadCap:editor="Oksana Karasyova" MadCap:editDate="2018-10-10T14:19:35.5301730+03:00">rformin</MadCap:annotation>g Core Updates Smoothly</h1>
        <p>Getting updates for your shop system can be quite tricky sometimes. As on one hand, you want your system to have all the newest functionalities and improvements, but on the other hand you might be reluctant of investing additional development effort into the updates. While minor updates are usually not painful at all, that might be not the case for major updates.</p>
        <p>This article will help you to streamline the process of updating the core components for your project.</p>
        <h2>Stay Up-to-Date with the New Features</h2>
        <p>First of all, make sure you do not miss our two-weekly release mail newsletter (you can subscribe to it <a href="https://now.spryker.com/release-notes">here</a>). Staying up to date with the improvements and new features will help you decide which of them to take. It’s not recommended to take all major releases or new modules just because they exist. Always think of the business value you gain from the update, as updates always take some time and it’s up to you to decide if the migration effort is justified in your specific case.</p>
        <h2>Check for Newer Module Versions</h2>
        <p>We also recommend to use <var>^</var> in <var>composer.json</var> for spryker-modules and then to run <var>composer update</var> from time to time to get all patches (without migration effort!). Read more <a href="https://academy.spryker.com/understanding_spryker/atomic_releases.html?Highlight=release#checking-for-newer-versions">here</a>. To check which major updates are available without changing composer.json, run <var>php composer.phar outdated</var> command.</p>
        <p>Just for the modules that have been extended (overwritten factory and classes) the version number needs be fixed and updates need to be done manually.</p>
        <p>&#160;</p>
        <p><i>Last review date: Nov. 23rd, 2017 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Fabian Wesner</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>