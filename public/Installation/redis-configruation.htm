<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.Draft,ReleaseVersions.2019-02,ReleaseVersions.2019-03">
    <head><title>Redis Configuration | Spryker</title>
        <meta name="description" content="Learn about Redis configuration in Spryker. The article contains the standart configuration, advanced configuration for Redis key-value storage and session storage. " />
    </head>
    <body>
        <h1>Redis Configuration</h1>
        <h2>Preface</h2>
        <p>In Spryker, Redis is used in two scenarios:</p>
        <ul>
            <li>key-value storage (modules: <var>Spryker.Storage</var>, <var>Spryker.Collector</var> and <var>Spryker.Heartbeat</var>)</li>
            <li>session data storage (modules: <var>Spryker.Session</var>)</li>
        </ul>
        <p>Each scenario utilizes a separate set of configuration values.</p>
        <p>Advanced configuration allows to use Redis in replication mode, including support for Redis Sentinel.</p>
        <h2>Standard Configuration</h2>
        <p>Standard Redis client configuration uses the environment configuration values set under keys which are defined as constants in <var>\Spryker\Shared\Storage\StorageConstants</var>. The standard environment configuration would look like this:</p><pre><code class="language-PHP line-numbers">
$config[StorageConstants::STORAGE_REDIS_PROTOCOL] = 'tcp';
$config[StorageConstants::STORAGE_REDIS_HOST] = '127.0.0.1';
$config[StorageConstants::STORAGE_REDIS_PORT] = '10009';
$config[StorageConstants::STORAGE_REDIS_PASSWORD] = false;
$config[StorageConstants::STORAGE_REDIS_DATABASE] = 0;</code></pre>
        <h2>Advanced Configuration for Redis Key-Value Storage</h2>
        <p>To be able to use Redis replication, one should define connection parameters using <var>StorageConstants::STORAGE_PREDIS_CLIENT_CONFIGURATION</var> value as key. Under this key, an array of DSN strings, which identify specific Redis nodes, should be set. In addition to configuration parameters, a set of configuration options has to be specified to enable Redis replication facilities. These options need to be stored under the <var>StorageConstants::STORAGE_PREDIS_CLIENT_OPTIONS</var> key.</p>
        <p>Example (regular master-slave replication):</p><pre><code class="language-PHP line-numbers">
$config[StorageConstants::STORAGE_PREDIS_CLIENT_CONFIGURATION] = [
    'tcp://10.0.0.1?alias=master',
    'tcp://10.0.0.2',
    'tcp://10.0.0.3',
];
 
$config[StorageConstants::STORAGE_PREDIS_CLIENT_OPTIONS] = [
    'replication' =&gt; true',
];</code></pre>
        <p class="info">For this configuration, one of the Redis servers should be identified as master using the parameter <var>alias</var>.</p>
        <p>Configuration setup for Redis Sentinel would look like this:</p><pre><code class="language-PHP line-numbers">
$config[StorageConstants::STORAGE_PREDIS_CLIENT_CONFIGURATION] = [
    'tcp://10.0.0.1',
    'tcp://10.0.0.2',
    'tcp://10.0.0.3',
];
 
$config[StorageConstants::STORAGE_PREDIS_CLIENT_OPTIONS] = [
    'replication' =&gt; 'sentinel',
    'service' =&gt; 'mymaster',
];</code></pre>
        <p>The configuration under <var>StorageConstants::STORAGE_PREDIS_CLIENT_CONFIGURATION</var> is to be used exclusively, i.e. no other storage configuration will be used for the Redis client. If the configuration parameters are not set under the <var>StorageConstants::STORAGE_PREDIS_CLIENT_CONFIGURATION</var> key, the Redis client will fall back to the regular configuration described above.</p>
        <h2>Advanced Configuration for Redis Session Storage</h2>
        <p>All the configuration concepts described above are relevant for configuring Redis as a session storage. Two things to be considered are the name of configuration constants and the fact that Yves and Zed sessions have separate storages with distinct configuration sets. Redis session configuration uses constants from <var>\Spryker\Shared\Session\SessionConstants</var>. Configuration for Yves session to use Redis Sentinel would look like this:</p><pre><code class="language-PHP line-numbers">
$config[SessionConstants::YVES_SESSION_PREDIS_CLIENT_CONFIGURATION] = [
    'tcp://10.0.0.1',
    'tcp://10.0.0.2',
    'tcp://10.0.0.3',
];
 
$config[SessionConstants::YVES_SESSION_PREDIS_CLIENT_OPTION] = [
    'replication' =&gt; 'sentinel',
    'service' =&gt; 'mymaster',
];</code></pre>
        <p>For Zed, it would look as follows:</p><pre><code class="language-PHP line-numbers">
$config[SessionConstants::ZED_SESSION_PREDIS_CLIENT_CONFIGURATION] = [
    'tcp://10.0.0.1',
    'tcp://10.0.0.2',
    'tcp://10.0.0.3',
];
 
$config[SessionConstants::ZED_SESSION_PREDIS_CLIENT_OPTION] = [
    'replication' =&gt; 'sentinel',
    'service' =&gt; 'mymaster',
];</code></pre>
        <p>&#160;</p>
        <p><i>Last review date: Feb 19, 2019</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment">by Pavlo Asaulenko, Andrii Tserkovnyi</MadCap:conditionalText>
        </p>
    </body>
</html>