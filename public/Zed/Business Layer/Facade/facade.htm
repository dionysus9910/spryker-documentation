<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:lastBlockDepth="4" MadCap:lastHeight="556" MadCap:lastWidth="1888">
    <head>
    </head>
    <body>
        <h1>Facade</h1>
        <p MadCap:conditions="General.Hidden Comment">Used to be: http://spryker.github.io/development-guide/zed/business-layer/facade/</p>
        <p>The facade acts as an internal API. The main responsibility of the facade is to hide the internal implementation.</p>
        <p>The simply only delegates the calls to internal business models. Similar to a remote web service, the client should not care about how a specific task is done. This is also important for future updates of the core. As long as the contract of the facade is not broken, an update can be integrated without (too much) pain.</p>
        <p>Spryker’s facades are an implementation of the <a href="https://en.wikipedia.org/wiki/Facade_pattern" target="_blank">Facade pattern</a>.</p>
        <p>In Spryker, the facades are the entry point into Zed’s business layer. All the other models are behind the facade and must not be accessed directly.</p>
        <p>
            <img src="../../../Resources/Images/facade-as-internal-api.png" title="Facade as an Internal API" alt="Facade as an Internal API" class="Thumbnail" />
        </p>
        <p MadCap:conditions="General.Image_Source">https://www.gliffy.com/go/share/image/s3wp117rflr6464nk2kf.png?utm_medium=live-embed&amp;utm_source=custom</p>
        <p><strong>See also:</strong>
        </p>
        <ul>
            <li>
                <MadCap:xref href="zed-facade-how-to-use.htm">How to Use a Facade</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="zed-facade-how-to-implement.htm">How to Implement a Facade</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="zed-facade-design-by-contract.htm">Design by Contract (DBC) - Facade</MadCap:xref>
            </li>
        </ul>
    </body>
</html>