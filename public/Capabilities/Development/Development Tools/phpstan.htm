<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="ReleaseVersions.2019-02,ReleaseVersions.2019-03">
    <head><title>PHPStan | Spryker</title>
        <meta name="description" content="This article describes how to install and use PHPStan for static code analysis in Spryker with the proper level of control." />
    </head>
    <body>
        <h1>PHPStan</h1>
        <p><a href="https://github.com/phpstan/phpstan">PHPStan</a> is a static code analyzer that introspects the code without running it and catches various classes of bugs prior to unit testing.</p>
        <p>
            <h2>Installation</h2>
        </p>
        <p>To install PHPStan, run:</p>
        <p><pre><code class="language-PHP line-numbers">composer require --dev phpstan/phpstan</code></pre>
        </p>
        <p>
            <h2>Usage</h2>
            <p>1. Run the following command to generate autocompletion and prevent any error messages that might occur due to the incomplete classes:</p>
            <p><pre><code class="language-PHP line-numbers">vendor/bin/console dev:ide:generate-auto-completion</code></pre>
            </p>
            <p>2. Run this command to start analyzing:</p>
            <p><pre><code class="language-PHP line-numbers">php -d memory_limit=2048M vendor/bin/phpstan analyze -c vendor/spryker/spryker/phpstan.neon vendor/&lt;spryker | spryker-eco | spryker-middleware&gt;/&lt;MODULE&gt;/ -l 2</code></pre>
            </p>
            <p class="important">Note that running this command with the level 2 key (<b>-l 2</b>) and having no errors is obligatory, and having no errors with level 5 (<b>-l 5</b>) is highly recommended.</p>
            <h2>Additional Functionality</h2>
            <p><b>Main Configuration File Inheritance</b>
            </p>
            <p>To avoid duplicated code while specifying a different configuration in the <i>parameters</i> section of the <i>phpstat.neon</i> file, it is possible to extend this file and determine only the changes needed for a particular configuration of a module.</p>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot style="font-weight: bold;">./[ROOT]/phpstan.neon:</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">parameters:
    excludes_analyse:
        - %rootDir%/../../../src/Generated/*
        - %rootDir%/../../../src/Orm/*
 
bootstrap: %rootDir%/../../../phpstan-bootstrap.php
 
services:
    -
        class: PhpStan\DynamicType\FacadeDynamicTypeExtension
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
...
            </code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot style="font-weight: bold;">./[Module]/phpstan.neon:</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">parameters:
    ignoreErrors:
    - '#.+ has invalid typehint type Symfony\\Component\\OptionsResolver\\OptionsResolverInterface.#'
    - '#Argument of an invalid type .+RolesTransfer supplied for foreach, only iterables are supported.#'
            </code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <p><b>See also:</b>
            </p>
            <ul>
                <li><a href="architecture-sniffer.htm">Architecture sniffer</a>
                </li>
                <li><a href="code-sniffer.htm">Code sniffer</a>
                </li>
            </ul>
            <p>&#160;</p>
            <p><i>Last review date: Jan 11, 2019</i> <MadCap:conditionalText MadCap:conditions="General.Hidden Comment">by Dmitriy Mikhailov and Dmitry Beirak</MadCap:conditionalText></p>
        </p>
    </body>
</html>