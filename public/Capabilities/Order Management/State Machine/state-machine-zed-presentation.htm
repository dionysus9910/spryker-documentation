<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2B,Spryker.B2C,Spryker.DemoShop,Spryker.ShopSuite,Spryker.MultiStore">
    <head>
    </head>
    <body>
        <h1><a name="Updating"></a>Updating Presentation in Zed - State Machine <img src="../../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../Resources/Images/shoptype/MasterSuite.png" /> <img src="../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <p>
            <MadCap:popup>
                <MadCap:popupHead>MS</MadCap:popupHead>
                <MadCap:popupBody>Multi-store</MadCap:popupBody>
            </MadCap:popup>
        </p>
        <p>To add manual trigger button or history for items, you need to add some implementation. State machine provides methods for triggering events and for retrieving history.</p>
        <p><var>StateMachineFacade::processedStateMachine(StateMachineItemTransfer[])</var> updates the given array of items with data from state machine persistence. This method is useful when you are not storing all the data for the StateMachineItemTransfer into the local table. Given <var>StateMachineItemTransfer[]</var> with (idItemState, identifier, idStateMachineProcess) it will fill other data.</p>
        <p><var>StateMachineFacade::getManualEventsForStateMachineItems(StateMachineItemTransfer[])</var> will return the array containing the mapping of the manual events, where the key is the local entity identifier. This can be used for adding a manual triggering button.</p>
        <p><var>StateMachineFacade::getStateHistoryByStateItemIdentifier($idStateMachineProcess, $identifier)</var> will return history of a given item, array of <var>StateMachineItemTransfer[]</var>. This can be used to display past event transitions that happened for the item.</p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="order-process-modelling-state-machines.htm">State Machine Modelling</a>
            </li>
            <li><a href="state-machine-cronjob.htm">Cron Jobs - State Machine</a>
            </li>
            <li><a href="state-machine-events.htm">Triggering Events - State Machine</a>
            </li>
            <li><a href="state-machine-implementing-plugin.htm">Implementing the Plugin - State Machine</a>
            </li>
            <li><a href="state-machine-patterns.htm">State Machine parrerns</a>
            </li>
            <li><a href="state-machine-persistence.htm">Persistence - State Machine</a>
            </li>
            <li><a href="http://documentation.spryker.com/state_machine_cookbook/state-machine-cookbook.htm">State Machine cookbook</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><![CDATA[
		
		]]><i>Last review date: </i><i>Oct. 2nd, 2017 </i><MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Denis Turkov</i><![CDATA[
]]></MadCap:conditionalText></p>
    </body>
</html>