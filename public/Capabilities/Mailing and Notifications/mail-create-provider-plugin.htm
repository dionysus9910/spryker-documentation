<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2C,Spryker.B2B">
    <head>
    </head>
    <body>
        <h1>Create a MailProviderPlugin <img src="../../Resources/Images/shoptype/B2B_Shop.png" /> <img src="../../Resources/Images/shoptype/B2C_Shop.png" /></h1>
        <p>The provider class is used to define the Mail Provider you want to use. As each provider behaves differently the provider class will also look different accordingly.</p>
        <p>Create a class which implements <var>MailProviderPluginInterface</var>. After that register your provider in the Mail module.</p>
        <h2>Register the Mail Provider </h2>
        <p>To add your provider to the <var>MailProviderCollection</var> add it to <var>MailDependencyProvider</var>:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Mail;

...

public function provideBusinessLayerDependencies(Container $container) 
{
    ...
    
    $container-&gt;extend(self::MAIL_PROVIDER_COLLECTION, function (MailProviderCollectionAddInterface $mailProviderCollection) {
        $mailProviderCollection-&gt;addProvider(new YourProviderPlugin(), MailConfig::MAIL_TYPE_ALL);
    
        return $mailProviderCollection;
    });
    
    ...
}
...</code></pre>
        <p>By using <var>$container-&gt;extend()</var> you get the <var>MailProviderCollectionAddInterface</var> where you can add your provider to. The <var>MailProviderCollectionAddInterface::addProvider()</var> takes as first argument the provider you want to use and as second argument one or a list of MailTypes which should be handled by this provider.</p>
        <p>As you can see in the example above the provider is registered to all MailTypes by using <var>MailConfig::MAIL_TYPE_ALL</var>. If you want the provider to only handle a specific MailType use the MailType constant from your MailTypePlugin e.g. <var>CustomerRegistrationMailTypePlugin::MAIL_TYPE</var>.</p>
        <h3>To Use More Than One Provider</h3>
        <p>To send mails through different providers, register more than one provider to the Mail module. This supports creating a scenario where, all marketing mails through provider A and all others through provider B, In <MadCap:xref href="#top">Register the Mail Provider</MadCap:xref> you already made use of this technique to register one provider to all types. The following example demonstrates how to wire up more than one provider:</p><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Mail;

...

public function provideBusinessLayerDependencies(Container $container) 
{
    ...
    
    $container-&gt;extend(self::MAIL_PROVIDER_COLLECTION, function (MailProviderCollectionAddInterface $mailProviderCollection) {
        $mailProviderCollection
            -&gt;addProvider(new ProviderAPlugin(), [MailTypeA::MAIL_TYPE, MailTypeB::MAIL_TYPE])
            -&gt;addProvider(new ProviderBPlugin(), MailTypeC::MAIL_TYPE);
    
        return $mailProviderCollection;
    });
    
    ...
}
...</code></pre>
        <p>If a MailType can be handled by more than one provider the email will be send by both of them.</p>
    </body>
</html>