<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.DemoShop">
    <head>
    </head>
    <body>
        <h1>Development <img src="../../../Resources/shoptype/Demoshop.png" /></h1>
        <p>Development refers to writing your own assets, consuming external dependencies and linking resources to make them work together.
</p>
        <p>
Essentially, the code you’re going to produce can be html, css and javascript (in any of their forms: jade, sass, less, coffescript, ecma 6, react js, etc.).

</p>
        <h2>CommonJS
</h2>
        <p>We decided to adopt <strong>CommonJS </strong>as the default development specification for <var>javascript </var>files.

You can read more about it <a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/#detailcommonjs" target="_blank">here</a>.

</p>
        <p>While it’s mandatory for Zed, we recommend to adopt it also for Yves.

</p>
        <p>The code below is a CommonJS module example:

</p><pre><code class="language-bash line-numbers">'use strict';

// dependencies
var externalDep = require('external-module');
var localDep = require('./local/module');

// module internal variables
var privateVariable = 'I am private';

// module internal function
function privateFunction(){
    // implemetation
}

// module.exports exposes its content ouside the module
// making it accessible for other modules
module.export = {
    publicProperty: 'Hello Spryker',
    publicFunction: function(){
        // implementation
    }
};
</code></pre>
        <p>With this approach, you can directly include every module (external/local) that you need, and expose publicly only the functions and the properties you want to. Each module has its own scope, so nothing goes global.

</p>
        <p>As far as this approach has been designed to use javascript on server side (<var>node.js</var>), commands like <var>require</var>, <var>module </var>or <var>export </var>are reserved words not naturally available in browsers’ vanilla javascript. To use them, you need to add a library or a pre-compiling tool capable of interpreting them.

</p>
        <p>For this reason, we rely on <MadCap:xref href="../Oryx/oryx.htm">Oryx</MadCap:xref>.</p>
    </body>
</html>