<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.DemoShop">
    <head>
    </head>
    <body>
        <h1>Download and Structure <img src="../../../Resources/shoptype/Demoshop.png" /></h1>
        <p>Here you will find out how to download external dependencies and where to place them, together with your own asset files.

</p>
        <p class="note">This page contains references to the following tools:  <a href="https://webpack.js.org/" target="_blank">Webpack</a>, <a href="../Oryx/oryx.htm" target="_blank">Oryx</a> (Our frontend helper tool)and Oryx for Zed (Zed's frontend full automation tool). Make sure you are familiar with these tools before continuing.</p>
        <h2>
Yves
</h2>
        <p>Yves UI must be implemented on project level.
</p>
        <h3>Dependencies
</h3>
        <p>You can use the package manager that you prefer, but we strongly recommend to use <var>npm</var> or <var>yarn</var>.</p>
        <h3>Creating/extending Yves</h3>
        <p>Yves come with themes: they are basically UI dresses.<![CDATA[

]]></p>
        <p>You can create a new theme by creating a folder under <var>@project/assets/Yves</var> and placing your assets there.
</p>
        <p>Change the<var> @project/package.json</var> manifest file to manage all external dependencies.</p><pre><code class="language-bash line-numbers">npm install --save jquery bootstrap font-awesome # add yves direct dependencies
npm install --save-dev sass-loader node-sass # add build dev dependencies</code></pre>
        <h2>Zed
</h2>
        <p>Zed UI can be extended on project level.
</p>
        <h3>Core Dependencies
</h3>
        <p>Each module that implements a UI may have external dependencies.

They are declared in the corrisponding <var>@core/&lt;module-name&gt;/assets/Zed/pakage.json</var> manifest file. <strong>Please do not change this file as it’s part of a core module</strong>. If you want to add a new dependency to Zed, read <MadCap:xref href="#Download">Download External Dependencies</MadCap:xref> section.</p>
        <p>To download the module dependencies, you can use the package manager that you prefer, but we strongly recommend to use <var>npm </var>or <var>yarn</var>.</p>
        <p>
They will be eventually stored under the <var>@core/&lt;module-name&gt;/assets/Zed/node_modules</var> folder.

</p>
        <h3>Extending Zed</h3>
        <p>Zed has one theme only. </p>
        <p>You can extend the Zed UI by creating <var>@project/assets.zed</var> and place your assets in there. Use <var>oryx-for-zed</var> to include and manage your code</p>
        <p class="info"><strong>Gui module as default UI provider:
</strong><![CDATA[
]]><br />Gui module manages all the dependencies needed in Zed. It provides the base structure for every module that implements a UI, and Zed Antelope configuration. <strong>Be sure you have it in your project, otherwise Zed UI will not be available</strong>.
</p>
        <h3><a name="Download"></a>Download External Dependencies</h3>
        <p>The best way to download all the external dependencies is by using<var> ./setup -i|-zed</var>:

</p><pre><code class="language-bash line-numbers">cd /path/to/your/project-root
./setup -i
</code></pre>
        <p>Otherwise, use <var>npm </var>or <var>yarn</var>:</p><pre xml:space="preserve"><code class="bash">cd /path/to/your/project-root
npm install

cd /path/to/gui/module 
npm install

cd /path/to/another/module 
npm install</code></pre>
    </body>
</html>