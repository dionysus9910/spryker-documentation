<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.DemoShop">
    <head>
        <link href="../../../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>CLI <img src="../../../Resources/shoptype/Demoshop.png" /></h1>
        <p class="important"><strong>Antelope Deprecation Notice:</strong>
            <br />As of 04/2017 Antelope will be replaced by Oryx. You can still use Antelope however, no new development is planned for this component.</p>
        <p>Antelope is a command line interface tool available and ready for use from your terminal/console .

</p>
        <p>Before you proceed with setup, read the <a href="overview.htm">requirements</a>.
</p>
        <h2>Setup
</h2>
        <p>Once <var>node.js </var>and <var>npm </var>are installed, run:

</p><pre><code class="language-bash line-numbers">npm install -g antelope</code></pre>
        <p>You can choose to install a specific version of Antelope, as in the example below:

</p><pre><code class="language-bash line-numbers">npm install -g antelope#2.0.0 # specific version
npm install -g antelope#"&gt;=0.2.0 &lt;1.0.0" # version range (npm semver)</code></pre>
        <h2>How it Works
</h2>
        <p>Antelope is a tool dedicated for Spryker projects, so it <strong>must be executed from the project root folder</strong>.

Once there, at least for the first time, you should run a test to check that everything is fine.

</p><pre><code class="language-bash line-numbers">cd /path/to/your/project-root
antelope test</code></pre>
        <h2>Install the <var>npm </var>Dependencies
</h2>
        <p>Instead of manually downloading and configuring each dependency in your project, use this command to search and execute <var>npm </var>install for each <var>package.json</var> in your project.

</p>
        <p>The modules will be installed:

</p>
        <ul>
            <li class="bullet_list">on project level (Yves themes dependencies);
</li>
            <li class="bullet_list">on Spryker core level (Zed UI specific dependecies).
</li>
        </ul><pre><code class="language-bash line-numbers">antelope install</code></pre>
        <p class="info"><strong>One manifest only
</strong>
            <br />Create just one <var>package.json</var> file for your project to manage all the external dependencies. Read <a href="../Frontend/download-structure.htm#Download">Download External Dependencies</a> for further information.
</p>
        <p class="note"><strong>Re-run installation after each update

</strong>
            <br />Remember to run this command every time you add a new Yves dependency, start with a brand new project or after a Spryker Core update. It will guarantee an updated and reliable front-end dependency tree, avoiding <var>Antelope </var>build errors.
</p>
        <h2>Build Assets
</h2>
        <p>This command loads the <a href="configuration.htm">webpack configuration</a> associated with each application (<var>Yves </var>and <var>Zed</var>) and/or theme, and runs it.

</p>
        <p>Every asset is processed and copied in the proper public folder.

</p>
        <p>If you need to build the assets for the entire project, run the build command as in the example below:

</p><pre><code class="language-bash line-numbers">antelope build
</code></pre>
        <p>If you need to build the assets only for <var>Zed </var>or only for <var>Yves</var>, you can run the build command with one of the following arguments:
</p><pre><code class="language-bash line-numbers">
antelope build zed # builds Zed assets only
antelope build yves # builds Yves assets only, all available themes
</code></pre>
        <p>There are several options you can run this command with:
</p>
        <table class="TableStyle-PatternedRows2" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/PatternedRows2.css');" cellspacing="0">
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <col class="TableStyle-PatternedRows2-Column-Regular" />
            <thead>
                <tr class="TableStyle-PatternedRows2-Head-Header1">
                    <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Flag	</th>
                    <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Application	</th>
                    <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Mode	</th>
                    <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Description
</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>-t, --theme</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>Yves	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>All	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">
                        <p>Define the Yves theme to exclusively target in build process.</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>-w, --watch</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>	
	Yves, Zed</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>Development	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">
                        <p>Add watchers over the assets. When you change a file, Antelope rebuilds the target. To build Yves with watchers, you need to specify a theme.
</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>	-d, --debug</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>	Yves, Zed</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">
                        <p>Debug	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">
                        <p>Print a more verbose cli output.</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>
-l, --legacy</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>Yves, Zed</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">
                        <p>Legacy	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">
                        <p>For projects that use Spryker version 1.x or below.</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                    <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                        <p>			
--production</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                        <p>	Yves, Zed	</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                        <p>Production</p>
                    </td>
                    <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">
                        <p>Optimize the output.
</p>
                    </td>
                </tr>
            </tbody>
        </table><pre><code class="language-bash line-numbers">antelope build ... --watch
antelope build yves --theme demoshop
antelope build ... --debug
antelope build ... --legacy
antelope build ... --production
antelope build ... -dwl
</code></pre>
        <h2>Help
</h2>
        <p>To see the output of the <strong>cli</strong> help:
</p><pre><code class="language-bash line-numbers">
antelope --help # commands list
antelope build --help # available flags list for command
</code></pre>
        <p>
            <MadCap:relatedTopics style="mc-use-custom-sort-order: true;">
                <MadCap:relatedTopic src="overview.htm" />
                <MadCap:relatedTopic src="download-structure-antelope.htm" />
                <MadCap:relatedTopic src="configuration.htm" />
                <MadCap:relatedTopic src="development-antelope.htm" />
                <MadCap:relatedTopic src="cli.htm" />
                <MadCap:relatedTopic src="build-optimization-antelope.htm" />
                <MadCap:relatedTopic src="publishing.htm" />
                <MadCap:relatedTopic src="asset-management-overview.htm" />
            </MadCap:relatedTopics>
        </p>
    </body>
</html>