<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-conditions="Spryker.DemoShop,Spryker.B2C" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Technology Partners|Payment">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Payment Integration - Computop</title>
        <!-- Google Tag Manager -->
        <script>/* <![CDATA[ */(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','GTM-NP24S2');/* ]]> */</script>
        <!-- End Google Tag Manager -->
        <script>/* <![CDATA[ */
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.src = "https://www.googletagmanager.com/gtag/js?id==UA-56589105-4";
			document.getElementsByTagName('head').item(0).appendChild(s);
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', 'UA-56589105-4');
		/* ]]> */</script>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/perfect-scrollbar.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../resources/scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <link href="../../../resources/tablestyles/patternedrows2.css" rel="stylesheet" />
        <script src="../../../resources/scripts/custom.modernizr.js">
        </script>
        <script src="../../../resources/scripts/jquery.min.js">
        </script>
        <script src="../../../resources/scripts/require.min.js">
        </script>
        <script src="../../../resources/scripts/require.config.js">
        </script>
        <script src="../../../resources/scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../resources/scripts/plugins.min.js">
        </script>
        <script src="../../../resources/scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search the Academy" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <!-- Google Tag Manager (noscript) -->
                                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NP24S2" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                </noscript>
                                <!-- End Google Tag Manager (noscript) -->
                                <div class="search-container">
                                    <form class="search" action="#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="breadcrumbs-block">
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                        </div>
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchHome mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="Dqly2dyu1Ea0R_cAlj2xdw">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="Dqly2dyu1Ea0R_cAlj2xdw:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="toolbar-wrapper">
                                                    <div class="widget-github js-widget-github"><a class="widget-github-link js-widget-github-link" href="https://github.com/spryker/spryker-documentation" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M13.5 0C6.057 0 0 6.057 0 13.5c0 5.888 3.791 10.905 9.058 12.745a.463.463 0 0 0 .258.088c1.316.43 2.724.667 4.184.667C20.943 27 27 20.943 27 13.5S20.943 0 13.5 0zm0 .931c6.93 0 12.569 5.639 12.569 12.569 0 5.428-3.459 10.061-8.287 11.818a1.903 1.903 0 0 1-.092-.527v-2.446c0-.975-.477-2.037-.946-2.75 2.584-.436 5.537-1.776 5.537-6.779 0-1.37-.429-2.58-1.275-3.598.186-.611.415-1.9-.225-3.52a.47.47 0 0 0-.291-.272c-.13-.04-1.326-.35-3.806 1.277a12.921 12.921 0 0 0-6.36 0c-2.481-1.63-3.68-1.319-3.809-1.277a.47.47 0 0 0-.29.273C5.582 7.319 5.811 8.607 6 9.218c-.85 1.018-1.279 2.227-1.279 3.598 0 4.957 2.9 6.323 5.463 6.778-.322.407-.66.934-.81 1.47-.661.184-2.018.19-2.929-1.37-.032-.06-.829-1.475-2.4-1.584-.25.002-.882.042-1.035.525-.169.537.424.944.679 1.117l.058.034c.029.015.707.371 1.213 1.644.105.333 1.03 2.84 4.353 2.399.002.367 0 .552-.004.7v.26c0 .15-.045.378-.096.525C4.386 23.558.931 18.924.931 13.5.931 6.57 6.57.931 13.5.931zm6.51 5.375c.5 1.471.158 2.537.035 2.839a.468.468 0 0 0 .089.49c.805.883 1.214 1.952 1.214 3.181 0 4.72-2.796 5.666-5.535 5.97a.464.464 0 0 0-.253.815c.368.314 1.199 1.68 1.199 2.744v2.446c0 .009.001.414.134.809a12.513 12.513 0 0 1-6.792-.002c.135-.396.139-.802.139-.81l.001-.248c.002-.211.006-.497 0-1.266a.473.473 0 0 0-.174-.362.47.47 0 0 0-.391-.09c-3.126.681-3.802-1.576-3.828-1.67l-.016-.047c-.448-1.135-1.037-1.713-1.388-1.975.759.267 1.182 1.007 1.193 1.024 1.231 2.107 3.264 2.162 4.328 1.685a.463.463 0 0 0 .27-.36c.095-.665.826-1.545 1.196-1.87a.464.464 0 0 0 .136-.488.461.461 0 0 0-.39-.324c-2.73-.31-5.524-1.266-5.524-5.98 0-1.228.41-2.3 1.219-3.181a.464.464 0 0 0 .087-.491c-.124-.302-.467-1.364.031-2.837.396.013 1.362.182 2.988 1.286.112.076.256.1.387.063.973-.27 2.058-.416 3.135-.421 1.08.005 2.166.15 3.14.421.131.037.273.013.386-.063 1.635-1.11 2.6-1.275 2.984-1.288z" /></svg></a>
                                                    </div>
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic NextTopic Print ExpandAll CollapseAll;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="js-anchorer main-content">
                                                    <h1>Payment Integration - Computop <img src="../../../resources/images/shoptype/b2c_shop.png" /> <img src="../../../resources/images/shoptype/demoshop.png" /></h1>
                                                    <p>
                                                        <img src="../../../resources/images/computop/computop-logo.png" alt="Computop-logo" />
                                                    </p>
                                                    <h2>Partner Information</h2>
                                                    <table style="margin-left: 0; margin-right: auto;">
                                                        <col />
                                                        <col />
                                                        <tbody>
                                                            <tr>
                                                                <td><a href="https://www.computop.com/de//" target="_blank">ABOUT COMPUTOP</a>
                                                                </td>
                                                                <td>&#160;</td>
                                                            </tr>
                                                            <tr>
                                                                <td colspan="2">
                                                                    <p>Computop is a leading international Payment Service Provider that enables merchants and white label customers to process global multichannel payments. Computop’s state of the art and wholly owned payment platform Computop Paygate offers seamless solutions for mobile, online and in store payment transactions. All transactions processed by Computop Paygate are secure as our platform is PCI certified.</p>
                                                                    <p>Computop offers a global payment management solution that is connected to over 350 payment methods and acquirer connections worldwide, customizable fraud prevention, tokenization and other value added services like currency conversion and debt management that result in secure transaction processing and higher conversion rates.</p>
                                                                    <p>Paygate is scalable and favoured by merchants in the travel, gaming, gambling, digital, hospitality, and the retail industry. Prebuilt payment and fraud management integration cartridges or modules are available for leading ERP and shop system solutions including demandware, hybris, intershop, Magento, and IBM Websphere.</p>
                                                                    <p>Founded in 1997, Computop is a global player for the 21st century. Headquartered in Bamberg, Germany, the company has sales operations in New York, London, and Shanghai. Computop is trusted by the largest global brands worldwide including Samsung, The Otto Group, C&amp;A, Fossil, Metro Cash &amp; Carry, and Swarovski.</p>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <h2>
            General Information</h2>
                                                    <p>We integrate with a wide range of payment methods that can be configured according to your needs and convenience. Payment method flows are configured using state machines.
        </p>
                                                    <p>The SprykerEco.Computop <var>spryker-eco/computop</var> bundle provides integration Spryker e-commerce system with Computop industry partner. It requires the SprykerEco.ComputopApi <var>spryker-eco/computop-api</var> bundle that provides the REST Client for making API calls to the Computop Payment Provider.</p>
                                                    <p>The SprykerEco.Computop bundle includes integration with:</p>
                                                    <ul>
                                                        <li value="1">Checkout process - payment forms with all necessary fields that are required to make payment request, save order information and so on.</li>
                                                        <li value="2">OMS (Order Management System) - state machines, all necessary commands for making modification requests and conditions for changing orders status accordingly.</li>
                                                    </ul>
                                                    <p>The SprykerEco.Computop bundle provides the following payment methods:</p>
                                                    <ul>
                                                        <li class="bullet_list" value="1"><a href="computop-credit-card.htm">Credit Card</a>
                                                        </li>
                                                        <li class="bullet_list" value="2"><a href="computop-direct-debit.htm">Direct Debit</a>
                                                        </li>
                                                        <li class="bullet_list" value="3"><a href="computop-easy-credit.htm">EasyCredit</a>
                                                        </li>
                                                        <li class="bullet_list" value="4"><a href="computop-ideal.htm">iDeal</a>
                                                        </li>
                                                        <li class="bullet_list" value="5"><a href="computop-paydirekt.htm">Paydirekt</a>
                                                        </li>
                                                        <li class="bullet_list" value="6"><a href="computop-paynow.htm">PayNow</a>
                                                        </li>
                                                        <li class="bullet_list" value="7"><a href="computop-paypal.htm">PayPal</a>
                                                        </li>
                                                        <li class="bullet_list" value="8"><a href="computop-sofort.htm">SofortÜberweisung</a>
                                                        </li>
                                                    </ul>
                                                    <h2>Installation</h2>
                                                    <p>To install the payment provider, run:</p><pre><code class="language-php line-numbers">composer require spryker-eco/computop</code></pre>
                                                    <h2>Configuration</h2>
                                                    <p>All the necessary configurations can be found in:</p><pre><code class="language-php line-numbers">vendor/spryker-eco/computop/config/config.dist.php</code></pre>
                                                    <div class="table-wrap">
                                                        <table style="width: 100%;mc-table-style: url('../../../resources/tablestyles/patternedrows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                                                            <col class="TableStyle-PatternedRows2-Column-Regular" />
                                                            <col class="TableStyle-PatternedRows2-Column-Regular" />
                                                            <col class="TableStyle-PatternedRows2-Column-Regular" />
                                                            <thead>
                                                                <tr class="TableStyle-PatternedRows2-Head-Header1">
                                                                    <td class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Configuration Key</td>
                                                                    <td class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</td>
                                                                    <td class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Description</td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::MERCHANT_ID]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Computop merchant identifier.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::BLOWFISH_PASSWORD]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Password for blowfish hashing.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::HMAC_PASSWORD]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Password for hmac hashing.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::PAYDIREKT_SHOP_KEY]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Shop key for Paydirect payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::IDEAL_ISSUER_ID]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Issuer ID for Ideal payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::PAY_NOW_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Init API call endpoint for PayNow payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::CREDIT_CARD_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Init API call endpoint for Credit Card payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::PAYPAL_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Init API call endpoint for PayPal payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::DIRECT_DEBIT_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Init API call endpoint for Direct Debit payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::SOFORT_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Init API call endpoint for Sofort payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::PAYDIREKT_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Init API call endpoint for Paydirect payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::IDEAL_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Init API call endpoint for Ideal payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::EASY_CREDIT_INIT_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Init API call endpoint for Easy Credit payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::EASY_CREDIT_STATUS_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Status API call endpoint for Easy Credit payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::EASY_CREDIT_AUTHORIZE_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Authorize API call endpoint for Easy Credit payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::AUTHORIZE_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Authorize API call endpoint.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::CAPTURE_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Capture API call endpoint.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::REVERSE_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Reserve API call endpoint.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::INQUIRE_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Inquire API call endpoint.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::REFUND_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Refund API call endpoint. </td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::RESPONSE_MAC_REQUIRED]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">MAC is required for methods (to check MAC on response).</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::CREDIT_CARD_TEMPLATE_ENABLED]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">bool</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Is custom template enabled for Credit Card payment method.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::CREDIT_CARD_TX_TYPE]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">TX TYPE for Credit Card payment method (empty string).</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::PAY_NOW_TX_TYPE]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">TX TYPE for PayNow payment method (empty string).</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::PAY_PAL_TX_TYPE]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">TX TYPE for PayPal payment method (Auth).</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::PAYMENT_METHODS_WITHOUT_ORDER_CALL]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Array of payment methods without order call.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::PAYMENT_METHODS_CAPTURE_TYPES]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Array with mapping payment methods and their capture types (MANUAL or AUTO).</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::CRIF_ENABLED]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">bool</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Is CRIF risk check enabled.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::CRIF_ACTION]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">CRIF API call endpoint.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopApiConstants::CRIF_PRODUCT_NAME]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>QuickCheckConsumer</var> or <var>CreditCheckConsumer</var> or <var>QuickCheckBusiness</var> or <var>CreditCheckBusiness</var> or <var>IdentCheckConsume</var>.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopApiConstants::CRIF_LEGAL_FORM]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">PERSON or COMPANY or UNKNOWN.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>$config[ComputopConstants::CRIF_GREEN_AVAILABLE_PAYMENT_METHODS]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">List of payment methods available with green response code.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>$config[ComputopConstants::CRIF_YELLOW_AVAILABLE_PAYMENT_METHODS]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">List of payment methods available with yellow response code.</td>
                                                                </tr>
                                                                <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                                                    <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows"><var>$config[ComputopConstants::CRIF_RED_AVAILABLE_PAYMENT_METHODS]</var>
                                                                    </td>
                                                                    <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">array</td>
                                                                    <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">List of payment methods available with red response code.</td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                    <p>Also you have to add payment methods to State Machine (OMS) configuration in the <var>config_default.php</var> file:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />config/Shared/config_default.php</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">$config[OmsConstants::PROCESS_LOCATION] = [
	...
	APPLICATION_ROOT_DIR . '/vendor/spryker-eco/cmoputop/config/Zed/Oms',
];
$config[OmsConstants::ACTIVE_PROCESSES] = [
	...
	'ComputopPayNow01',
	'ComputopCreditCard01',
	'ComputopDirectDebit01',
	'ComputopPaydirekt01',
	'ComputopPayPal01',
	'ComputopSofort01',
	'ComputopIdeal01',
	'ComputopEasyCredit01',
];
$config[SalesConstants::PAYMENT_METHOD_STATEMACHINE_MAPPING] = [
	...
	ComputopConfig::PAYMENT_METHOD_PAY_NOW =&gt; 'ComputopPayNow01',
	ComputopConfig::PAYMENT_METHOD_CREDIT_CARD =&gt; 'ComputopCreditCard01',
	ComputopConfig::PAYMENT_METHOD_DIRECT_DEBIT =&gt; 'ComputopDirectDebit01',
	ComputopConfig::PAYMENT_METHOD_PAYDIREKT =&gt; 'ComputopPaydirekt01',
	ComputopConfig::PAYMENT_METHOD_PAY_PAL =&gt; 'ComputopPayPal01',
	ComputopConfig::PAYMENT_METHOD_SOFORT =&gt; 'ComputopSofort01',
	ComputopConfig::PAYMENT_METHOD_IDEAL =&gt; 'ComputopIdeal01',
	ComputopConfig::PAYMENT_METHOD_EASY_CREDIT =&gt; 'ComputopEasyCredit01',
];</code></pre>
                                                        </div>
                                                    </div>
                                                    <h2>Integration into Project
        </h2>
                                                    <p>Update <var>CheckoutPageDependencyProvider</var> to add payment subform plugins, payment method handlers, provide Computop client and <var>UtilText</var> service:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\CheckoutPageDependencyProvider</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage;
 
...
use Spryker\Yves\StepEngine\Dependency\Plugin\Form\SubFormPluginCollection;
use SprykerEco\Shared\Computop\ComputopConfig;
use SprykerEco\Yves\Computop\Plugin\ComputopPaymentHandlerPlugin;
use SprykerEco\Yves\Computop\Plugin\CreditCardSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\DirectDebitSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\EasyCreditSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\IdealSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\PaydirektSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\PayNowSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\PayPalSubFormPlugin;
use SprykerEco\Yves\Computop\Plugin\SofortSubFormPlugin;
...
 
class CheckoutPageDependencyProvider extends SprykerShopCheckoutPageDependencyProvider
{
	public const CLIENT_COMPUTOP = 'CLIENT_COMPUTOP';
	public const SERVICE_UTIL_TEXT = 'SERVICE_UTIL_TEXT';
 
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
	 */
	public function provideDependencies(Container $container)
	{
		$container = parent::provideDependencies($container);
		$container = $this-&gt;extendPaymentMethodHandler($container);
		$container = $this-&gt;extendSubFormPluginCollection($container);
		$container = $this-&gt;addComputopClient($container);
		$container = $this-&gt;addUtilTextService($container);
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
	 */
	protected function extendPaymentMethodHandler(Container $container): Container
	{
		$container-&gt;extend(static::PAYMENT_METHOD_HANDLER, function (StepHandlerPluginCollection $paymentMethodHandler) {
			...
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_SOFORT);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_PAYDIREKT);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_IDEAL);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_CREDIT_CARD);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_PAY_PAL);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_DIRECT_DEBIT);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_EASY_CREDIT);
			$paymentMethodHandler-&gt;add(new ComputopPaymentHandlerPlugin(), ComputopConfig::PAYMENT_METHOD_PAY_NOW);
 
			return $paymentMethodHandler;
		});
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
	 */
	protected function extendSubFormPluginCollection(Container $container): Container
	{
		$container-&gt;extend(static::PAYMENT_SUB_FORMS, function (SubFormPluginCollection $subFormPluginCollection) {
			...
			$subFormPluginCollection-&gt;add(new CreditCardSubFormPlugin());
			$subFormPluginCollection-&gt;add(new PayPalSubFormPlugin());
			$subFormPluginCollection-&gt;add(new DirectDebitSubFormPlugin());
			$subFormPluginCollection-&gt;add(new SofortSubFormPlugin());
			$subFormPluginCollection-&gt;add(new PaydirektSubFormPlugin());
			$subFormPluginCollection-&gt;add(new IdealSubFormPlugin());
			$subFormPluginCollection-&gt;add(new EasyCreditSubFormPlugin());
			$subFormPluginCollection-&gt;add(new PayNowSubFormPlugin());
 
			return $subFormPluginCollection;
		});
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
	 */
	protected function addComputopClient(Container $container): Container
	{
		$container[static::CLIENT_COMPUTOP] = function () use ($container) {
			return $container-&gt;getLocator()-&gt;computop()-&gt;client();
		};
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
	 */
	protected function addUtilTextService(Container $container): Container
	{
		$container[static::SERVICE_UTIL_TEXT] = function () use ($container) {
			return $container-&gt;getLocator()-&gt;utilText()-&gt;service();
		};
 
		return $container;
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>ShipmentStep</var> if you want to use CRIF risk check payment methods filtering logic:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\Steps\ShipmentStep</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Process\Steps;
 
use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use Spryker\Yves\StepEngine\Dependency\Plugin\Handler\StepHandlerPluginCollection;
use SprykerEco\Client\Computop\ComputopClientInterface;
use SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToCalculationClientInterface;
use SprykerShop\Yves\CheckoutPage\Process\Steps\ShipmentStep as SprykerShipmentStep;
use Symfony\Component\HttpFoundation\Request;
 
class ShipmentStep extends SprykerShipmentStep
{
	/**
	 * @var \SprykerEco\Client\Computop\ComputopClientInterface
	 */
	protected $computopClient;
 
	/**
	 * @param \SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToCalculationClientInterface $calculationClient
	 * @param \Spryker\Yves\StepEngine\Dependency\Plugin\Handler\StepHandlerPluginCollection $shipmentPlugins
	 * @param string $stepRoute
	 * @param string $escapeRoute
	 * @param \SprykerEco\Client\Computop\ComputopClientInterface $computopClient
	 */
	public function __construct(
		CheckoutPageToCalculationClientInterface $calculationClient,
		StepHandlerPluginCollection $shipmentPlugins,
		$stepRoute,
		$escapeRoute,
		ComputopClientInterface $computopClient
	) {
		parent::__construct(
			$calculationClient,
			$shipmentPlugins,
			$stepRoute,
			$escapeRoute
		);
 
		$this-&gt;computopClient = $computopClient;
	}
 
	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return \Generated\Shared\Transfer\QuoteTransfer
	 */
	public function execute(Request $request, AbstractTransfer $quoteTransfer)
	{
		$quoteTransfer = parent::execute($request, $quoteTransfer);
 
		return $this-&gt;computopClient-&gt;performCrifApiCall($quoteTransfer);
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add <var>PayNow</var> Checkout step if you want to use this payment method in your project:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\Steps\ComputopPayNowStep</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Process\Steps;
 
use Spryker\Service\UtilText\UtilTextServiceInterface;
use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use SprykerEco\Shared\Computop\ComputopConfig;
use SprykerShop\Yves\CheckoutPage\Process\Steps\AbstractBaseStep;
 
class ComputopPayNowStep extends AbstractBaseStep
{
	protected const FORM_TOKEN_LENGTH = 43;
 
	/**
	 * @var \Spryker\Service\UtilText\UtilTextServiceInterface
	 */
	protected $utilTextService;
 
	/**
	 * @param \Spryker\Service\UtilText\UtilTextServiceInterface $utilTextService
	 * @param string $stepRoute
	 * @param string $escapeRoute
	 */
	public function __construct(
		UtilTextServiceInterface $utilTextService,
		$stepRoute,
		$escapeRoute
	) {
		parent::__construct($stepRoute, $escapeRoute);
 
		$this-&gt;utilTextService = $utilTextService;
	}
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function requireInput(AbstractTransfer $quoteTransfer)
	{
		if ($this-&gt;isMethodPayNow($quoteTransfer)) {
			return true;
		}
 
		return false;
	}
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function postCondition(AbstractTransfer $quoteTransfer)
	{
		return true;
	}
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return array
	 */
	public function getTemplateVariables(AbstractTransfer $quoteTransfer): array
	{
		return [
			'data' =&gt; $quoteTransfer-&gt;getPayment()-&gt;getComputopPayNow()-&gt;getData(),
			'len' =&gt; $quoteTransfer-&gt;getPayment()-&gt;getComputopPayNow()-&gt;getLen(),
			'merchant' =&gt; $quoteTransfer-&gt;getPayment()-&gt;getComputopPayNow()-&gt;getMerchantId(),
			'action' =&gt; $quoteTransfer-&gt;getPayment()-&gt;getComputopPayNow()-&gt;getUrl(),
			'brandOptions' =&gt; $this-&gt;getBrandOptions(),
			'formToken' =&gt; $this-&gt;utilTextService-&gt;generateRandomString(static::FORM_TOKEN_LENGTH),
		];
	}
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	protected function isMethodPayNow(AbstractTransfer $quoteTransfer): bool
	{
		return $quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection() === ComputopConfig::PAYMENT_METHOD_PAY_NOW;
	}
 
	/**
	 * @return string[]
	 */
	protected function getBrandOptions(): array
	{
		return [
			'VISA' =&gt; [
				'value' =&gt; 'VISA',
				'label' =&gt; 'Visa',
			],
			'MasterCard' =&gt; [
				'value' =&gt; 'MasterCard',
				'label' =&gt; 'Master Card',
			],
			'AMEX' =&gt; [
				'value' =&gt;'AMEX',
				'label' =&gt; 'American Express',
			],
			'DINERS' =&gt; [
				'value' =&gt; 'DINERS',
				'label' =&gt; 'Diners Club',
			],
			'JCB' =&gt; [
				'value' =&gt; 'JCB',
				'label' =&gt; 'JCB',
			],
			'CBN' =&gt; [
				'value' =&gt; 'CBN',
				'label' =&gt; 'CBN',
			],
			'SWITCH' =&gt; [
				'value' =&gt; 'SWITCH',
				'label' =&gt; 'Switch',
			],
			'SOLO' =&gt; [
				'value' =&gt; 'SOLO',
				'label' =&gt; 'Solo',
			],
		];
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>PlaceOrder</var> checkout step to add <var>PayNow</var> payment method data in <var>QuoteTransfer</var> (necessary only for <var>PayNow</var> payment method):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\Steps\PlaceOrderStep</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Process\Steps;
 
use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use Spryker\Yves\Messenger\FlashMessenger\FlashMessengerInterface;
use SprykerEco\Client\Computop\ComputopClientInterface;
use SprykerEco\Shared\Computop\ComputopConfig;
use SprykerShop\Yves\CheckoutPage\Process\Steps\PlaceOrderStep as SprykerPlaceOrderStep;
use SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToCheckoutClientInterface;
use SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToGlossaryStorageClientInterface;
use Symfony\Component\HttpFoundation\Request;
 
class PlaceOrderStep extends SprykerPlaceOrderStep
{
	/**
	 * @var \SprykerEco\Client\Computop\ComputopClientInterface
	 */
	protected $computopClient;
 
	/**
	 * @param \SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToCheckoutClientInterface $checkoutClient
	 * @param \Spryker\Yves\Messenger\FlashMessenger\FlashMessengerInterface $flashMessenger
	 * @param string $currentLocale
	 * @param \SprykerShop\Yves\CheckoutPage\Dependency\Client\CheckoutPageToGlossaryStorageClientInterface $glossaryStorageClient
	 * @param \SprykerEco\Client\Computop\ComputopClientInterface $computopClient
	 * @param string $stepRoute
	 * @param string $escapeRoute
	 * @param array $errorCodeToRouteMatching
	 */
	public function __construct(
		CheckoutPageToCheckoutClientInterface $checkoutClient,
		FlashMessengerInterface $flashMessenger,
		string $currentLocale,
		CheckoutPageToGlossaryStorageClientInterface $glossaryStorageClient,
		ComputopClientInterface $computopClient,
		$stepRoute,
		$escapeRoute,
		$errorCodeToRouteMatching = []
	) {
		parent::__construct(
			$checkoutClient,
			$flashMessenger,
			$currentLocale,
			$glossaryStorageClient,
			$stepRoute,
			$escapeRoute,
			$errorCodeToRouteMatching
		);
 
		$this-&gt;computopClient = $computopClient;
	}
 
	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return \Spryker\Shared\Kernel\Transfer\AbstractTransfer
	 */
	public function execute(Request $request, AbstractTransfer $quoteTransfer)
	{
		if ($this-&gt;isPaymentPayNow($quoteTransfer) &amp;&amp; $this-&gt;isComputopPaymentExist($quoteTransfer)) {
			return $quoteTransfer;
		}
 
		$quoteTransfer = parent::execute($request, $quoteTransfer);
 
		if ($this-&gt;isPaymentPayNow($quoteTransfer)) {
			$this-&gt;setComputopInitData($quoteTransfer);
		}
 
		return $quoteTransfer;
	}
 
	/**
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	protected function isPaymentPayNow(AbstractTransfer $quoteTransfer): bool
	{
		return $quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection() === ComputopConfig::PAYMENT_METHOD_PAY_NOW;
	}
 
	/**
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	protected function isComputopPaymentExist(AbstractTransfer $quoteTransfer): bool
	{
		$quoteTransfer = $this-&gt;computopClient-&gt;isComputopPaymentExist($quoteTransfer);
 
		return (bool)$quoteTransfer-&gt;getPayment()-&gt;getIsComputopPaymentExist();
	}
 
	/**
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return \Generated\Shared\Transfer\QuoteTransfer
	 */
	protected function setComputopInitData(AbstractTransfer $quoteTransfer)
	{
		$paymentSelection = $quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection();
		$paymentMethod = ucfirst($paymentSelection);
		$methodGet = 'get' . $paymentMethod;
		$methodSet = 'set' . $paymentMethod;
 
		$computopPaymentTransfer = $quoteTransfer-&gt;getPayment()-&gt;$methodGet();
		$computopPaymentTransfer
			-&gt;setData($this-&gt;checkoutResponseTransfer-&gt;getComputopInitPayment()-&gt;getData())
			-&gt;setLen($this-&gt;checkoutResponseTransfer-&gt;getComputopInitPayment()-&gt;getLen());
		$quoteTransfer-&gt;getPayment()-&gt;$methodSet($computopPaymentTransfer);
 
		return $quoteTransfer;
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add Easy Credit Checkout step if you want to use this payment method in your project:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\Steps\ComputopEasyCreditStep</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Process\Steps;
 
use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use Spryker\Yves\StepEngine\Dependency\Step\StepWithExternalRedirectInterface;
use SprykerEco\Shared\Computop\ComputopConfig;
use SprykerShop\Yves\CheckoutPage\Process\Steps\AbstractBaseStep;
use Symfony\Component\HttpFoundation\Request;
 
class ComputopEasyCreditStep extends AbstractBaseStep implements StepWithExternalRedirectInterface
{
	/**
	 * @var string
	 */
	protected $redirectUrl = '';
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function requireInput(AbstractTransfer $quoteTransfer)
	{
		return false;
	}
 
	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return \Spryker\Shared\Kernel\Transfer\AbstractTransfer
	 */
	public function execute(Request $request, AbstractTransfer $quoteTransfer)
	{
		if ($quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection() !== ComputopConfig::PAYMENT_METHOD_EASY_CREDIT) {
			return $quoteTransfer;
		}
 
		$this-&gt;redirectUrl = $quoteTransfer-&gt;getPayment()-&gt;getComputopEasyCredit()-&gt;getUrl();
 
		return $quoteTransfer;
	}
 
	/**
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function postCondition(AbstractTransfer $quoteTransfer)
	{
		return true;
	}
 
	/**
	 * Return external redirect url, when redirect occurs not within same application. Used after execute.
	 *
	 * @return string
	 */
	public function getExternalRedirectUrl()
	{
		return $this-&gt;redirectUrl;
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>SummaryOrder</var> Checkout step to add Easy Credit fees information on summary page (necessary only for Easy Credit payment method):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\Steps\SummaryStep</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * Copyright © 2016-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */
 
namespace Pyz\Yves\CheckoutPage\Process\Steps;
 
use Generated\Shared\Transfer\PaymentTransfer;
use Generated\Shared\Transfer\QuoteTransfer;
use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use SprykerShop\Yves\CheckoutPage\Process\Steps\SummaryStep as SprykerSummaryStep;
 
class SummaryStep extends SprykerSummaryStep
{
	/**
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return array
	 */
	public function getTemplateVariables(AbstractTransfer $quoteTransfer)
	{
		return [
			'quoteTransfer' =&gt; $quoteTransfer,
			'cartItems' =&gt; $this-&gt;productBundleClient-&gt;getGroupedBundleItems(
				$quoteTransfer-&gt;getItems(),
				$quoteTransfer-&gt;getBundleItems()
			),
			'additionalData' =&gt; $this-&gt;getAdditionalData($quoteTransfer),
		];
	}
 
	/**
	 * @param \Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return array
	 */
	protected function getAdditionalData(QuoteTransfer $quoteTransfer): array
	{
		if ($quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection() !== PaymentTransfer::COMPUTOP_EASY_CREDIT) {
			return [];
		}
 
		$easyCreditStatusResponse = $quoteTransfer
			-&gt;getPayment()
			-&gt;getComputopEasyCredit()
			-&gt;getEasyCreditStatusResponse();
 
		$financing = $easyCreditStatusResponse-&gt;getFinancingData();
		$process = $easyCreditStatusResponse-&gt;getProcessData();
 
		return [
			'installmentPlanMoney' =&gt; [
				'Kaufbetrag' =&gt; (int)round($financing['finanzierung']['bestellwert'] * 100),
				'+ Zinsen' =&gt; (int)round($financing['ratenplan']['zinsen']['anfallendeZinsen'] * 100),
				'= Gesamtbetrag' =&gt; (int)round($financing['ratenplan']['gesamtsumme'] * 100),
				'Ihre monatliche Rate' =&gt; (int)round($financing['ratenplan']['zahlungsplan']['betragRate'] * 100),
				'letzte Rate' =&gt; (int)round($financing['ratenplan']['zahlungsplan']['betragLetzteRate'] * 100),
			],
			'installmentPlanTax' =&gt; [
				'Sollzinssatz p.a. fest für die gesamte Laufzeit' =&gt; $financing['ratenplan']['zinsen']['nominalzins'],
				'effektiver Jahreszins' =&gt; $financing['ratenplan']['zinsen']['effektivzins'],
			],
			'installmentText' =&gt; $financing['tilgungsplanText'],
			'installmentLink' =&gt; $process['allgemeineVorgangsdaten']['urlVorvertraglicheInformationen'],
		];
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>StepFactory</var> to add/update necessary checkout steps:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Process\StepFactory</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Process;
 
use Pyz\Yves\CheckoutPage\Process\Steps\ComputopEasyCreditStep;
use Pyz\Yves\CheckoutPage\Process\Steps\ComputopPayNowStep;
use Pyz\Yves\CheckoutPage\CheckoutPageDependencyProvider;
use Pyz\Yves\CheckoutPage\Plugin\Provider\CheckoutPageControllerProvider;
use Pyz\Yves\CheckoutPage\Process\Steps\ShipmentStep;
use Pyz\Yves\CheckoutPage\Process\Steps\PlaceOrderStep;
use Pyz\Yves\CheckoutPage\Process\Steps\SummaryStep;
use Spryker\Service\UtilText\UtilTextServiceInterface;
use Spryker\Yves\StepEngine\Process\StepCollection;
use SprykerEco\Client\Computop\ComputopClientInterface;
use SprykerShop\Yves\CheckoutPage\Process\StepFactory as SprykerStepFactory;
use SprykerShop\Yves\HomePage\Plugin\Provider\HomePageControllerProvider;
 
/**
 * @method \SprykerShop\Yves\CheckoutPage\CheckoutPageConfig getConfig()
 */
class StepFactory extends SprykerStepFactory
{
	/**
	 * @return \Spryker\Yves\StepEngine\Process\StepCollectionInterface
	 */
	public function createStepCollection()
	{
		$stepCollection = new StepCollection(
			$this-&gt;getUrlGenerator(),
			CheckoutPageControllerProvider::CHECKOUT_ERROR
		);
 
		$stepCollection
			-&gt;addStep($this-&gt;createEntryStep())
			-&gt;addStep($this-&gt;createCustomerStep())
			-&gt;addStep($this-&gt;createAddressStep())
			-&gt;addStep($this-&gt;createShipmentStep())
			-&gt;addStep($this-&gt;createPaymentStep())
			-&gt;addStep($this-&gt;createComputopEasyCreditStep())
			-&gt;addStep($this-&gt;createSummaryStep())
			-&gt;addStep($this-&gt;createPlaceOrderStep())
			-&gt;addStep($this-&gt;createPayNowStep())
			-&gt;addStep($this-&gt;createSuccessStep());
 
		return $stepCollection;
	}
 
	/**
	 * @return \SprykerShop\Yves\CheckoutPage\Process\Steps\ShipmentStep
	 */
	public function createShipmentStep()
	{
		return new ShipmentStep(
			$this-&gt;getCalculationClient(),
			$this-&gt;getShipmentPlugins(),
			CheckoutPageControllerProvider::CHECKOUT_SHIPMENT,
			HomePageControllerProvider::ROUTE_HOME,
			$this-&gt;getComputopClient()
		);
	}
 
	/**
	 * @return \SprykerShop\Yves\CheckoutPage\Process\Steps\PlaceOrderStep
	 */
	public function createPlaceOrderStep()
	{
		return new PlaceOrderStep(
			$this-&gt;getCheckoutClient(),
			$this-&gt;getFlashMessenger(),
			$this-&gt;getStore()-&gt;getCurrentLocale(),
			$this-&gt;getGlossaryStorageClient(),
			$this-&gt;getComputopClient(),
			CheckoutPageControllerProvider::CHECKOUT_PLACE_ORDER,
			HomePageControllerProvider::ROUTE_HOME,
			[
				static::ERROR_CODE_GENERAL_FAILURE =&gt; self::ROUTE_CART,
				'payment failed' =&gt; CheckoutPageControllerProvider::CHECKOUT_PAYMENT,
				'shipment failed' =&gt; CheckoutPageControllerProvider::CHECKOUT_SHIPMENT,
			]
		);
	}
 
	/**
	 * @return \Pyz\Yves\CheckoutPage\Process\Steps\ComputopEasyCreditStep
	 */
	protected function createComputopEasyCreditStep()
	{
		return new ComputopEasyCreditStep(
			CheckoutPageControllerProvider::CHECKOUT_COMPUTOP_EASYCREDIT,
			HomePageControllerProvider::ROUTE_HOME
		);
	}
 
	/**
	 * @return \Pyz\Yves\CheckoutPage\Process\Steps\SummaryStep
	 */
	public function createSummaryStep()
	{
		return new SummaryStep(
			$this-&gt;getProductBundleClient(),
			CheckoutPageControllerProvider::CHECKOUT_SUMMARY,
			HomePageControllerProvider::ROUTE_HOME
		);
	}
 
	/**
	 * @return \Pyz\Yves\CheckoutPage\Process\Steps\ComputopPayNowStep
	 */
	protected function createPayNowStep()
	{
		return new ComputopPayNowStep(
			$this-&gt;getUtilTextService(),
			CheckoutPageControllerProvider::CHECKOUT_COMPUTOP_PAYNOW,
			HomePageControllerProvider::ROUTE_HOME
		);
	}
 
	/**
	 * @return \SprykerEco\Client\Computop\ComputopClientInterface
	 */
	public function getComputopClient(): ComputopClientInterface
	{
		return $this-&gt;getProvidedDependency(CheckoutPageDependencyProvider::CLIENT_COMPUTOP);
	}
 
	/**
	 * @return \Spryker\Service\UtilText\UtilTextServiceInterface
	 */
	public function getUtilTextService(): UtilTextServiceInterface
	{
		return $this-&gt;getProvidedDependency(CheckoutPageDependencyProvider::SERVICE_UTIL_TEXT);
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>CheckoutPageFactory</var> for project level <var>StepFactory</var> usage:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\CheckoutPageFactory</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage;
 
use Pyz\Yves\CheckoutPage\Process\StepFactory;
use SprykerShop\Yves\CheckoutPage\CheckoutPageFactory as SprykerShopCheckoutPageFactory;
 
class CheckoutPageFactory extends SprykerShopCheckoutPageFactory
{
	/**
	 * @return \SprykerShop\Yves\CheckoutPage\Process\StepFactory
	 */
	public function createStepFactory()
	{
		return new StepFactory();
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>CheckoutPage</var> <var>CheckoutController</var> to add <var>PayNow</var> and <var>EasyCredit</var> step actions (if you use these payment methods):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Controller\CheckoutController</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Controller;
 
use SprykerShop\Yves\CheckoutPage\Controller\CheckoutController as SprykerShopCheckoutController;
use Symfony\Component\HttpFoundation\Request;
 
/**
 * @method \SprykerShop\Yves\CheckoutPage\CheckoutPageFactory getFactory()
 */
class CheckoutController extends SprykerShopCheckoutController
{
	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 *
	 * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
	 */
	public function easyCreditAction(Request $request)
	{
		return $this-&gt;createStepProcess()-&gt;process($request);
	}
 
	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 *
	 * @return array|\Spryker\Yves\Kernel\View\View|\Symfony\Component\HttpFoundation\RedirectResponse
	 */
	public function paynowAction(Request $request)
	{
		$quoteValidationResponseTransfer = $this-&gt;canProceedCheckout();
 
		if (!$quoteValidationResponseTransfer-&gt;getIsSuccessful()) {
			$this-&gt;processErrorMessages($quoteValidationResponseTransfer-&gt;getMessages());
 
			return $this-&gt;redirectResponseInternal(static::ROUTE_CART);
		}
 
		$response = $this-&gt;createStepProcess()-&gt;process($request);
 
		if (!is_array($response)) {
			return $response;
		}
 
		return $this-&gt;view(
			$response,
			$this-&gt;getFactory()-&gt;getCustomerPageWidgetPlugins(),
			'@CheckoutPage/views/paynow/paynow.twig'
		);
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>CheckoutPageControllerProvider</var> to define <var>PayNow</var> and <var>EasyCredit</var> step actions (if you use these payment methods):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\CheckoutPage\Plugin\Provider\CheckoutPageControllerProvider</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\CheckoutPage\Plugin\Provider;
 
use Silex\Application;
use SprykerShop\Yves\CheckoutPage\Plugin\Provider\CheckoutPageControllerProvider as SprykerShopCheckoutPageControllerProvider;
 
class CheckoutPageControllerProvider extends SprykerShopCheckoutPageControllerProvider
{
	public const CHECKOUT_COMPUTOP_EASYCREDIT = 'checkout-computop-easycredit';
	public const CHECKOUT_COMPUTOP_PAYNOW = 'checkout-computop-paynow';
 
	/**
	 * @param \Silex\Application $app
	 *
	 * @return void
	 */
	protected function defineControllers(Application $app)
	{
		$this-&gt;addCheckoutIndexRoute()
			-&gt;addCustomerStepRoute()
			-&gt;addAddressStepRoute()
			-&gt;addShipmentStepRoute()
			-&gt;addPaymentStepRoute()
			-&gt;addCheckoutSummaryStepRoute()
			-&gt;addPlaceOrderStepRoute()
			-&gt;addCheckoutErrorRoute()
			-&gt;addCheckoutSuccessRoute()
			-&gt;addComputopPayNowRoute()
			-&gt;addComputopEasyCreditRoute();
	}
 
	/**
	 * @return $this
	 */
	protected function addComputopPayNowRoute()
	{
		$this-&gt;createController('/{checkout}/computop/paynow', static::CHECKOUT_COMPUTOP_PAYNOW, 'CheckoutPage', 'Checkout', 'paynow')
			-&gt;assert('checkout', $this-&gt;getAllowedLocalesPattern() . 'checkout|checkout')
			-&gt;value('checkout', 'checkout')
			-&gt;method('GET|POST');
 
		return $this;
	}
 
	/**
	 * @return $this
	 */
	protected function addComputopEasyCreditRoute()
	{
		$this-&gt;createController('/{checkout}/computop/easycredit', static::CHECKOUT_COMPUTOP_EASYCREDIT, 'CheckoutPage', 'Checkout', 'easyCredit')
			-&gt;assert('checkout', $this-&gt;getAllowedLocalesPattern() . 'checkout|checkout')
			-&gt;value('checkout', 'checkout')
			-&gt;method('GET|POST');
 
		return $this;
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Change <var>CheckoutPageControllerProvider</var> from core to project level in <var>YvesBootstrap</var> (if you use <var>PayNow</var> or Easy Credit payment methods):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\ShopApplication\YvesBootstrap</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">- use SprykerShop\Yves\CheckoutPage\Plugin\Provider\CheckoutPageControllerProvider;
+ use Pyz\Yves\CheckoutPage\Plugin\Provider\CheckoutPageControllerProvider;</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend payment twig to add Computop payment methods:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Pyz/Yves/CheckoutPage/Theme/default/views/payment/payment.twig</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">...
 
{% define data = {
	backUrl: _view.previousStepUrl,
	forms: {
		payment: _view.paymentForm
	},
	title: 'checkout.step.payment.title' | trans,
	customForms: {
		'Computop/credit-card': ['credit-card', 'computop'],
		'Computop/direct-debit': ['direct-debit', 'computop'],
		'Computop/easy-credit': ['easy-credit', 'computop'],
		'Computop/ideal': ['ideal', 'computop'],
		'Computop/paydirekt': ['paydirekt', 'computop'],
		'Computop/paynow': ['paynow', 'computop'],
		'Computop/paypal': ['paypal', 'computop'],
		'Computop/sofort': ['sofort', 'computop'],
	}
} %}
 
...</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add paynow checkout step template if you want to use this payment method:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Pyz/Yves/CheckoutPage/Theme/default/views/paynow/paynow.twig</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-twig line-numbers">{% extends template('page-layout-checkout', 'CheckoutPage') %}
 
{% define data = {
	paynowAction: _view.action,
	paynowBrandOptions: _view.brandOptions,
	paynowMerchant: _view.merchant,
	paynowData: _view.data,
	paynowLen: _view.len,
	paynowFormToken: _view.formToken,
	title: 'checkout.step.paynow.title' | trans,
} %}
 
{% block breadcrumb %}{% endblock %}
 
{% block content %}
	&lt;div class="form box"&gt;
		&lt;form name="paynowStepForm" method="post" action="{{ data.paynowAction }}"&gt;
			&lt;div id="paynowStepForm" class="grid"&gt;
				&lt;div class="form__fields col col--sm-12 col--lg-6"&gt;
					&lt;div class="form__field"&gt;
						&lt;label for="paynowStepForm_CCBrand" class="label label--required"&gt;{{ 'checkout.step.paynow.credit_card_brand'| trans }}&lt;/label&gt;
						{% include atom('select') with {
							modifiers: ['expand'],
							data: {
								options: data.paynowBrandOptions
							}
						} only %}
					&lt;/div&gt;
					&lt;div class="form__field"&gt;
						&lt;label for="paynowStepForm_CCNr" class="label label--required"&gt;{{ 'checkout.step.paynow.credit_card_number'| trans }}&lt;/label&gt;
						&lt;input class="input input--expand" type="text" id="paynowStepForm_CCNr" name="CCNr" required="required"&gt;
					&lt;/div&gt;
					&lt;div class="form__field"&gt;
						&lt;label for="paynowStepForm_CCExpiry" class="label label--required"&gt;{{ 'checkout.step.paynow.credit_card_expiry'| trans }}&lt;/label&gt;
						&lt;input class="input input--expand" type="text" id="paynowStepForm_CCExpiry" name="CCExpiry" required="required"&gt;
					&lt;/div&gt;
					&lt;div class="form__field"&gt;
						&lt;label for="paynowStepForm_CCCVC" class="label label--required"&gt;{{ 'checkout.step.paynow.cvv'| trans }}&lt;/label&gt;
						&lt;input class="input input--expand" type="text" id="paynowStepForm_CCCVC" name="CCCVC" required="required"&gt;
					&lt;/div&gt;
					&lt;input type="hidden" id="paynowStepForm_MerchantID" name="MerchantID" value="{{ data.paynowMerchant }}"&gt;
					&lt;input type="hidden" id="paynowStepForm_Data" name="Data" value="{{ data.paynowData }}"&gt;
					&lt;input type="hidden" id="paynowStepForm_Len" name="Len" value="{{ data.paynowLen }}"&gt;
					&lt;input type="hidden" id="paynowStepForm__token" name="paynowStepForm[_token]" value="{{ data.paynowFormToken }}"&gt;
					&lt;div class="form__field"&gt;
						&lt;button type="submit" class="button button--success button--expand"&gt;{{ 'checkout.step.paynow.pay_button_text'| trans }}&lt;/button&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/form&gt;
	&lt;/div&gt;
{% endblock %}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add easy-credit-summary molecule is you want to use Easy Credit payment method:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />src/Pyz/Yves/CheckoutPage/Theme/default/components/molecules/easy-credit-summary/easy-credit-summary.twig</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-twig line-numbers">{% extends model('component') %}
 
{% define config = {
	name: 'easy-credit-summary'
} %}
 
{% define data = {
	additionalData: null
} %}
 
{% block body %}
	&lt;div class="box"&gt;
		&lt;h6&gt;{{ 'computop.easycredit.intallment_plan' | trans }}&lt;/h6&gt;
		&lt;hr /&gt;
		{% for key, value in data.additionalData.installmentPlanMoney %}
			&lt;div class="grid"&gt;
				&lt;span class="col col--sm-8"&gt;{{ key }}&lt;/span&gt;
				&lt;span class="col col--sm-4 text-right"&gt;{{ value | money }}&lt;/span&gt;
			&lt;/div&gt;
		{% endfor %}
		{% for key, value in data.additionalData.installmentPlanTax %}
			&lt;div class="grid"&gt;
				&lt;span class="col col--sm-8"&gt;{{ key }}&lt;/span&gt;
				&lt;span class="col col--sm-4 text-right"&gt;{{ value }}%&lt;/span&gt;
			&lt;/div&gt;
		{% endfor %}
		&lt;p&gt;{{ data.additionalData.installmentText }}&lt;/p&gt;
		&lt;a href="{{ data.additionalData.installmentLink }}"&gt;{{ 'computop.easycredit.installment_link_text' | trans }}&lt;/a&gt;
	&lt;/div&gt;
{% endblock %}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend summary twig to add Easy Credit fees information (necessary for Easy Credit payment method):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Pyz/Yves/CheckoutPage/Theme/default/views/payment/payment.twig</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-twig line-numbers">{% extends template('page-layout-checkout', 'CheckoutPage') %}
 
{% define data = {
	cart: _view.quoteTransfer,
	backUrl: _view.previousStepUrl,
	transfer: _view.quoteTransfer,
	cartItems: _view.cartItems,
	shippingAddress: _view.quoteTransfer.shippingAddress,
	billingAddress: _view.quoteTransfer.billingAddress,
	shipmentMethod: _view.quoteTransfer.shipment.method.name,
	paymentMethod: _view.quoteTransfer.payment.paymentMethod,
	additionalData: _view.additionalData,
 
	forms: {
		summary: _view.summaryForm
	},
 
	overview: {
		shipmentMethod: _view.quoteTransfer.shipment.method.name,
		payments: _view.quoteTransfer.payments,
		expenses: _view.quoteTransfer.expenses,
		voucherDiscounts: _view.quoteTransfer.voucherDiscounts,
		cartRuleDiscounts: _view.quoteTransfer.cartRuleDiscounts,
 
		prices: {
			subTotal: _view.quoteTransfer.totals.subtotal,
			storeCurrency: _view.quoteTransfer.shipment.method.storeCurrencyPrice,
			grandTotal: _view.quoteTransfer.totals.grandtotal,
			priceToPay: _view.quoteTransfer.totals.priceToPay,
			tax: _view.quoteTransfer.totals.taxtotal.amount,
			discountTotal: _view.quoteTransfer.totals.discounttotal | default
		}
	},
 
	title: 'checkout.step.summary.title' | trans
} %}
 
{% block content %}
	&lt;div class="grid"&gt;
		&lt;div class="col col--sm-12 col--lg-4"&gt;
			&lt;div class="box"&gt;
				&lt;span class="float-right"&gt;{{ 'checkout.step.summary.with_method' | trans }} &lt;strong&gt;{{data.paymentMethod}}&lt;/strong&gt;&lt;/span&gt;
				&lt;h6&gt;{{ 'checkout.step.summary.payment' | trans }}&lt;/h6&gt;
				&lt;hr/&gt;
 
				{% include molecule('display-address') with {
					class: 'text-small',
					data: {
						address: data.billingAddress
					}
				} only %}
			&lt;/div&gt;
 
			&lt;div class="box"&gt;
				&lt;span class="float-right"&gt;{{ 'checkout.step.summary.with_method' | trans }} &lt;strong&gt;{{ data.shipmentMethod }}&lt;/strong&gt;&lt;/span&gt;
				&lt;h6&gt;{{ 'checkout.step.summary.shipping' | trans }}&lt;/h6&gt;
				&lt;hr/&gt;
 
				{% include molecule('display-address') with {
					class: 'text-small',
					data: {
						address: data.shippingAddress
					}
				} only %}
			&lt;/div&gt;
 
			{% if data.additionalData is defined and data.additionalData is not empty %}
				{% include molecule('easy-credit-summary', 'CheckoutPage') with {
					data: {
						additionalData: data.additionalData
					}
				} only %}
			{% endif %}
		&lt;/div&gt;
 
		&lt;div class="col col--sm-12 col--lg-8"&gt;
			&lt;div class="box"&gt;
				{% for item in data.cartItems %}
					{% set item = item.bundleProduct is defined ? item.bundleProduct : item %}
					{% embed molecule('summary-item', 'CheckoutPage') with {
						data: {
							name: item.name,
							quantity: item.quantity,
							price: item.sumPrice | money,
							options: item.productOptions | default({}),
							bundleItems: item.bundleItems | default([]),
							quantitySalesUnit: item.quantitySalesUnit,
							amountSalesUnit: item.amountSalesUnit,
							amount: item.amount
						},
						embed: {
							isLast: not loop.last,
							item: item
						}
					} only %}
						{% block body %}
							{{parent()}}
							{% if widgetExists('CartNoteQuoteItemNoteWidgetPlugin') %}
								{% if embed.item.cartNote is not empty %}
									{{ widget('CartNoteQuoteItemNoteWidgetPlugin', embed.item) }} {# @deprecated Use molecule('note-list', 'CartNoteWidget') instead. #}
								{% endif %}
							{% elseif embed.item.cartNote is not empty %}
								{% include molecule('note-list', 'CartNoteWidget') ignore missing with {
									data: {
										label: 'cart_note.checkout_page.item_note',
										note: embed.item.cartNote
									}
								} only %}
							{% endif %}
							{% if embed.isLast %}&lt;hr/&gt;{% endif %}
						{% endblock %}
					{% endembed %}
				{% endfor %}
			&lt;/div&gt;
 
			{% if data.transfer.cartNote is not empty %}
				{% if widgetExists('CartNoteQuoteNoteWidgetPlugin') %}
					&lt;div class="box"&gt;
						{{ widget('CartNoteQuoteNoteWidgetPlugin', data.transfer) }}  {#@deprecated Use molecule('note-list', 'CartNoteWidget') instead.#}
					&lt;/div&gt;
				{% else %}
					&lt;div class="box"&gt;
						{% include molecule('note-list', 'CartNoteWidget') ignore missing with {
							data: {
								label: 'cart_note.checkout_page.quote_note',
								note: data.transfer.cartNote
							}
						} only %}
					&lt;/div&gt;
				{% endif %}
			{% endif %}
 
			&lt;div class="box"&gt;
				{% widget 'CartCodeFormWidget' args [data.transfer] only %}
				{% elsewidget 'CheckoutVoucherFormWidget' args [data.transfer] only %} {# @deprecated Use CartCodeFormWidget instead. #}
				{% elsewidget 'CheckoutVoucherFormWidgetPlugin' args [data.transfer] only %} {# @deprecated Use CheckoutVoucherFormWidget instead. #}
				{% endwidget %}
			&lt;/div&gt;
 
			{% embed molecule('form') with {
				class: 'box',
				data: {
					form: data.forms.summary,
					submit: {
						enable: can('SeeOrderPlaceSubmitPermissionPlugin'),
						text: 'checkout.step.place.order' | trans
					},
					cancel: {
						enable: true,
						url: data.backUrl,
						text: 'general.back.button' | trans
					}
				},
				embed: {
					overview: data.overview,
					cart: data.cart
				}
			} only %}
				{% block body %}
					{% include molecule('summary-overview', 'CheckoutPage') with {
						data: embed.overview
					} only %}
 
					{% include molecule('gift-card-payment-summary', 'GiftCardWidget') ignore missing with {
						data: {
							cart: embed.cart
						}
					} only %}
 
					&lt;hr /&gt;
					{{parent()}}
				{% endblock %}
			{% endembed %}
		&lt;/div&gt;
	&lt;/div&gt;
{% endblock %}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add controller provider:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Yves\ShopApplication\YvesBootstrap</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Yves\ShopApplication;
 
...
use SprykerEco\Yves\Computop\Plugin\Provider\ComputopControllerProvider;
...
 
class YvesBootstrap extends SprykerYvesBootstrap
{
	...
 
	/**
	 * @param bool|null $isSsl
	 *
	 * @return \SprykerShop\Yves\ShopApplication\Plugin\Provider\AbstractYvesControllerProvider[]
	 */
	protected function getControllerProviderStack($isSsl)
	{
		return [
			...   
			new ComputopControllerProvider($isSsl),
		];
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add checkout plugins:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Zed\Checkout\CheckoutDependencyProvider</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Zed\Checkout;
 
...
use SprykerEco\Zed\Computop\Communication\Plugin\Checkout\ComputopDoSaveOrderPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Checkout\ComputopPostSaveHookPlugin;
 
class CheckoutDependencyProvider extends SprykerCheckoutDependencyProvider
{
	...
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Checkout\Dependency\Plugin\CheckoutSaveOrderInterface[]
	 */
	protected function getCheckoutOrderSavers(Container $container)
	{
		/** @var \Spryker\Zed\Checkout\Dependency\Plugin\CheckoutSaveOrderInterface[] $plugins */
		$plugins = [
			...
			new ComputopDoSaveOrderPlugin(),
		];
 
		return $plugins;
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Checkout\Dependency\Plugin\CheckoutPostSaveHookInterface[]
	 */
	protected function getCheckoutPostHooks(Container $container)
	{
		return [
			...
			new ComputopPostSaveHookPlugin(),
		];
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Add OMS commands and conditions:</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Zed\Oms\OmsDependencyProvider</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">public function provideBusinessLayerDependencies(Container $container): Container
{
	$container = parent::provideBusinessLayerDependencies($container);
	$container = $this-&gt;extendCommandPlugins($container);
	$container = $this-&gt;extendConditionPlugins($container);
 
	return $container;
}
&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Zed\Oms;
 
...
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Command\AuthorizePlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Command\CancelPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Command\CapturePlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Command\EasyCreditAuthorizePlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Command\RefundPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Condition\IsAuthorizedPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Condition\IsCancelledPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Condition\IsCapturedPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Condition\IsInitializedPlugin;
use SprykerEco\Zed\Computop\Communication\Plugin\Oms\Condition\IsRefundedPlugin;
 
class OmsDependencyProvider extends SprykerOmsDependencyProvider
{
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Kernel\Container
	 */
	public function provideBusinessLayerDependencies(Container $container)
	{
		$container = parent::provideBusinessLayerDependencies($container);
		$container = $this-&gt;extendCommandPlugins($container);
		$container = $this-&gt;extendConditionPlugins($container);
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Kernel\Container
	 */
	protected function extendCommandPlugins(Container $container): Container
	{
		$container-&gt;extend(self::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection) {
			...
			$commandCollection-&gt;add(new AuthorizePlugin(), 'Computop/Authorize');
			$commandCollection-&gt;add(new CancelPlugin(), 'Computop/Cancel');
			$commandCollection-&gt;add(new CapturePlugin(), 'Computop/Capture');
			$commandCollection-&gt;add(new EasyCreditAuthorizePlugin(), 'Computop/EasyCreditAuthorize');
			$commandCollection-&gt;add(new RefundPlugin(), 'Computop/Refund');
 
			return $commandCollection;
		});
 
		return $container;
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Kernel\Container
	 */
	protected function extendConditionPlugins(Container $container): Container
	{
		$container-&gt;extend(OmsDependencyProvider::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) {
			...
			$conditionCollection-&gt;add(new IsAuthorizedPlugin(), 'Computop/IsAuthorized');
			$conditionCollection-&gt;add(new IsCancelledPlugin(), 'Computop/IsCancelled');
			$conditionCollection-&gt;add(new IsCapturedPlugin(), 'Computop/IsCaptured');
			$conditionCollection-&gt;add(new IsInitializedPlugin(), 'Computop/IsInitialized');
			$conditionCollection-&gt;add(new IsRefundedPlugin(), 'Computop/IsRefunded');
 
			return $conditionCollection;
		});
 
		return $container;
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>Extend <var>PaymentDependencyProvider</var> to add payment method filter plugin (if you want to use CRIF risk check):</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />\Pyz\Zed\Payment\PaymentDependencyProvider</a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre xml:space="preserve"><code class="language-php line-numbers">&lt;?php
 
/**
 * This file is part of the Spryker Suite.
 * For full license information, please view the LICENSE file that was distributed with this source code.
 */
 
namespace Pyz\Zed\Payment;
 
...
use SprykerEco\Zed\Computop\Communication\Plugin\ComputopPaymentMethodFilterPlugin;
 
class PaymentDependencyProvider extends SprykerPaymentDependencyProvider
{
	/**
	 * @return \Spryker\Zed\Payment\Dependency\Plugin\Payment\PaymentMethodFilterPluginInterface[]
	 */
	protected function getPaymentMethodFilterPlugins()
	{
		return [
			...
			new ComputopPaymentMethodFilterPlugin(),
		];
	}
}</code></pre>
                                                        </div>
                                                    </div>
                                                    <h2>Copyright and Disclaimer</h2>
                                                    <p>See <a href="https://github.com/spryker/spryker-documentation" target="_blank">Disclaimer</a>.</p>
                                                    <p>&#160;</p>
                                                    <p style="font-weight: bold;">See also:</p>
                                                    <ul>
                                                        <li value="1"><a href="computop-api-details.htm">Learn about Computop API</a>
                                                        </li>
                                                        <li value="2"><a href="computop-oms-details.htm">Get acquainted with Computop OMS functioning
            
</a>
                                                        </li>
                                                        <li value="3"><a href="computop-credit-card.htm">Configure Credit Card payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="4"><a href="computop-direct-debit.htm">Configure Direct Debit payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="5"><a href="computop-easy-credit.htm">Configure Easy Credit payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="6"><a href="computop-ideal.htm">Configure iDeal payment method for Computop
</a>
                                                        </li>
                                                        <li value="7"><a href="computop-paydirekt.htm">Configure Paydirekt payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="8"><a href="computop-paynow.htm">Configure PayNow payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="9"><a href="computop-paypal.htm">Configure PayPal payment method for Computop
            
</a>
                                                        </li>
                                                        <li value="10"><a href="computop-sofort.htm">Configure Sofort payment method for Computop
</a>
                                                        </li>
                                                        <li value="11"><a href="computop-crif.htm">Computop CRIF</a><![CDATA[           
            ]]></li>
                                                        <li value="12"><a href="https://www.computop.com/us/startseitenartikel/spryker-applications/" target="_blank">Computop announces plugin for international payment methods in Spryker applications</a>
                                                        </li>
                                                        <li value="13"><a href="https://www.computop.com/uk/press/press-release/news/computop-announces-plugin-for-international-payment-methods-in-spryker-applications/" target="_blank">Computop Press Release</a>
                                                        </li>
                                                    </ul>
                                                    <p>&#160;</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div><a class="scroll-top js-scroll-top" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill="#FFF" fill-rule="nonzero" d="M11.82 5.22a.54.54 0 0 1 0 .806.636.636 0 0 1-.852 0L6.607 1.937v13.49a.587.587 0 0 1-.602.573c-.336 0-.611-.258-.611-.573V1.937L1.04 6.026a.647.647 0 0 1-.86 0 .54.54 0 0 1 0-.807L5.573.163a.636.636 0 0 1 .852 0L11.82 5.22z" /></svg></a>
                                <script>/* <![CDATA[ */
			function createGithubUrl() {
			var GITHUB_CONTENT_PATH = '/blob/master/public';
			var link = document.querySelector('.js-widget-github-link');
			var href =
			link.getAttribute('href')
			+ GITHUB_CONTENT_PATH
			+ window.location.pathname;
			link.setAttribute('href', href);
			}
			createGithubUrl();
		/* ]]> */</script>
                                <script>/* <![CDATA[ */
			requirejs.config({
				appDir: '',
				paths: {
					'clipboard': ['https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min']
					
				}
			});
			require(['clipboard'], function(Clipboard) {
				console.log(Clipboard);
				window.Clipboard = Clipboard;
			});
		/* ]]> */</script>
                                <script src="../../../resources/scripts/perfect-scrollbar.js">
                                </script>
                                <script src="../../../resources/scripts/imagemapster.js">
                                </script>
                                <script src="../../../resources/scripts/script.js">
                                </script>
                                <script src="../../../resources/scripts/prism.js">
                                </script>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>
