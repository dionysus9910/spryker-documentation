<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="">
    <head>
    </head>
    <body>
        <h1>Checkout Workflow Integration Guide</h1>
        <p>For example let's create alternative checkout workflow which would only save order in database without any additional checks or calculations.</p>
        <p>To define an alternative checkout workflow, add a constant to <var>\Pyz\Shared\Checkout\CheckoutConstants</var>:</p><pre xml:space="preserve"><code class="language-PHP">
				const KEY_WORKFLOW_ALTERNATIVE_CHECKOUT = 'alternative-checkout';
		</code></pre>
        <p>Modify <var>getCheckoutWorkflows()</var> method in <var>\Pyz\Zed\Checkout\CheckoutDependencyProvider</var> to define plugins for new workflow:</p><pre xml:space="preserve"><code class="language-PHP line-numbers">
				protected function getCheckoutWorkflows(Container $container)
				{
				return [
				CheckoutConstants::KEY_WORKFLOW_MULTISTEP_CHECKOUT =&gt; (new CheckoutWorkflowPluginContainer(
				$this-&gt;getCheckoutPreConditions($container),
				$this-&gt;getCheckoutOrderSavers($container),
				$this-&gt;getCheckoutPostHooks($container),
				$this-&gt;getCheckoutPreSaveHooks($container)
				)),
				CheckoutConstants::KEY_WORKFLOW_ALTERNATIVE_CHECKOUT =&gt; (new CheckoutWorkflowPluginContainer(
				[],
				[
				new SalesOrderSaverPlugin(),
				],
				[],
				[]
				)),
				];
				}
		</code></pre>
        <p>After this, pass workflow id as a second parameter in <var>placeOrder()</var> call of <var>CheckoutFacade</var></p><pre xml:space="preserve"><code class="language-PHP">
				$this-&gt;getCheckoutFacade()-&gt;placeOrder($quoteTransfer, CheckoutConstants::KEY_WORKFLOW_ALTERNATIVE_CHECKOUT);
		</code></pre>
    </body>
</html>