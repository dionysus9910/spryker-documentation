<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2B,ReleaseVersions.2018-10">
    <head><title>Products Lists Feature Integration | Spryker</title>
        <link href="../../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="The Product Lists Feature allows defining access to particular items. The guide will walk you through the process of integrating this feature into your project. " />
    </head>
    <body>
        <h1>Product Lists Feature Integration <img src="../../Resources/Images/shoptype/B2B_Shop.png" /></h1>
        <MadCap:menuProxy data-mc-skin="/Project/Skins/SideMenuNotFixed.flskn" mc-linked-toc="$topicHeadings" style="mc-context-sensitive: True;mc-include-parent: True;mc-include-siblings: True;mc-include-children: True;" />
        <h2>Install Feature Core</h2>
        <h3>Prerequisites</h3>
        <p>
			To start feature integration, overview and install the necessary features:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Name</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Version</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Product</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Category Management</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h3>1) Install the Required Modules Using Composer</h3>
        <p>
			Run the following command(s) to install the required modules:
		</p><pre><code class="language-PHP line-numbers">composer require spryker/customer-catalog:"^1.0.0" spryker-feature/product-lists:"^2018.11.0" --update-with-dependencies</code></pre>
        <div class="tip">
			Make sure that the following modules were installed:
				<div class="table-wrap"><table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Module</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Expected Directory</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">CustomerCatalog</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/customer-catalog</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductList</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>vendor/spryker/product-list</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListDataImport</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/product-list-data-import</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductListGui</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>vendor/spryker/product-list-gui</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListGuiExtension</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/product-list-gui-extension</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductListSearch</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>vendor/spryker/product-list-search</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListStorage</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/product-list-storage</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">ProductStorageExtension</td><td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>vendor/spryker/product-storage-extension</var></td></tr></tbody></table></div></div>
        <h3>2) Set up Database Schema and Transfer Objects</h3>
        <p>
			Adjust the schema definition so that entity changes trigger events.
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Affected entity</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Triggered events</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">spy_product_list</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Entity.spy_product_list.create
							<br />Entity.spy_product_list.update
						<br />Entity.spy_product_list.delete</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">spy_product_list_product_concrete</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Entity.spy_product_list_product_concrete.create
							<br />Entity.spy_product_list_product_concrete.update
						<br />Entity.spy_product_list_product_concrete.delete</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">spy_product_list_category</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">Entity.spy_product_list_category.create
							<br />Entity.spy_product_list_category.update
						<br />Entity.spy_product_list_category.delete</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/ProductList/Persistence/Propel/Schema/spy_product_list.schema.xml</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?xml version="1.0"?&gt;
	&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				name="zed"
				xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd"
				namespace="Orm\Zed\ProductList\Persistence"
				package="src.Orm.Zed.ProductList.Persistence"&gt;
			&lt;table name="spy_product_list" identifierQuoting="true"&gt;
				&lt;behavior name="event"&gt;
					&lt;parameter name="spy_product_list_all" column="*"/&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
			&lt;table name="spy_product_list_product_concrete" isCrossRef="true"&gt;
				&lt;behavior name="event"&gt;
					&lt;parameter name="spy_product_list_product_concrete_all" column="*"/&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
			&lt;table name="spy_product_list_category" isCrossRef="true"&gt;
				&lt;behavior name="event"&gt;
					&lt;parameter name="spy_product_list_category_all" column="*"/&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
	&lt;/database&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Set up synchronization queue pools so that non-multistore entities (not store specific entities) can be synchronized among stores:
</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>/Pyz/Zed/ProductListStorage/Persistence/Propel/Schema/spy_product_list_storage.schema.xml</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?xml version="1.0"?&gt;
	&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				name="zed"
				xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd"
				namespace="Orm\Zed\ProductListStorage\Persistence"
				package="src.Orm.Zed.ProductListStorage.Persistence"&gt;
			&lt;table name="spy_product_abstract_product_list_storage"&gt;
				&lt;behavior name="synchronization"&gt;
						&lt;parameter name="queue_pool" value="synchronizationPool"/&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
			&lt;table name="spy_product_concrete_product_list_storage"&gt;
				&lt;behavior name="synchronization"&gt;
						&lt;parameter name="queue_pool" value="synchronizationPool"/&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
	&lt;/database&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following commands to apply database changes and generate entity and transfer changes:
		</p><pre><code class="language-PHP line-numbers">
	console transfer:generate
	console propel:install
	console transfer:generate</code></pre>
        <div class="tip">Make sure that the following changes have been applied by checking your database.
			<div class="table-wrap"><table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Database Entity</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Event</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">spy_product_list</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">spy_product_list_product_concrete</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">spy_product_list_category</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">spy_product_abstract_product_list_storage</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">spy_product_concrete_product_list_storage</td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">created</td></tr></tbody></table></div></div>
        <div class="tip">Make sure that propel entities were generated successfully by checking their existence. Also, change the generated entity classes to extend from Spryker core classes.
			<div class="table-wrap"><table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Class path</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Extends</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductList.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductList</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListQuery.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductListQuery</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListProductConcrete.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductListProductConcrete</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListProductConcreteQuery.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductListProductConcreteQuery</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListCategory.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductListCategory</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListCategoryQuery.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductList\Persistence\Propel\AbstractSpyProductListCategoryQuery</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductAbstractProductListStorage</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductListStorage\Persistence\Propel\AbstractSpyProductAbstractProductListStorage</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductAbstractProductListStorageQuery</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductListStorage\Persistence\Propel\AbstractSpyProductAbstractProductListStorageQuery</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductConcreteProductListStorage</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductListStorage\Persistence\Propel\AbstractSpyProductConcreteProductListStorage</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductConcreteProductListStorageQuery</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Spryker\Zed\ProductListStorage\Persistence\Propel\AbstractSpyProductConcreteProductListStorageQuery</var></td></tr></tbody></table></div></div>
        <div class="tip">Make sure that the changes were implemented successfully. For this purpose, trigger the following methods and make sure that the above events have been triggered:
			<div class="table-wrap"><table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Path</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Method name</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductList.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>prepareSaveEventName()</var><br /><var>addSaveEventToMemory()</var><br /><var>addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListProductConcrete.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>prepareSaveEventName()</var><br /><var>addSaveEventToMemory()</var><br /><var>addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductList/Persistence/Base/SpyProductListCategory.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>prepareSaveEventName()</var><br /><var>addSaveEventToMemory()</var><br /><var>addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductAbstractProductListStorage.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>sendToQueue()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>src/Orm/Zed/ProductListStorage/Persistence/Base/SpyProductConcreteProductListStorage.php</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>sendToQueue()</var></td></tr></tbody></table></div></div>
        <h3>3) Add Translations</h3>
        <p>
			Append glossary according to your language configuration:
</p>
        <p>&#160;</p><var>src/data/import/glossary.csv</var><pre><code class="language-PHP line-numbers">
	product-cart.info.restricted-product.removed,"Unavailable item %sku% was removed from your shopping cart.",en_US
	product-cart.info.restricted-product.removed,"Der nicht verfügbare Artikel% sku% wurde aus Ihrem Einkaufswagen entfernt.",de_DE</code></pre>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP line-numbers">
	console data:import glossary</code></pre>
        <p class="tip">
			Make sure that the configured data are added to the spy_glossary table  in the database.
		</p>
        <h3>4) Configure export to Redis and Elasticsearch</h3>
        <h4>Setup event listeners</h4>
        <p>
			With this step you will be able to publish tables on change (create, edit, delete) to the <var>spy_product_abstract_product_list_storage</var>, <var>spy_product_concrete_product_list_storage</var> and synchronize the data to Storage and Search.
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListStorageEventSubscriber</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Registers listeners that are responsible for publishing product list information to storage when a related entity changes.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductListStorage\Communication\Plugin\Event\Subscriber</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">ProductListSearchEventSubscriber</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Registers listeners that are responsible for publishing product list information to search when a related entity changes.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Spryker\Zed\ProductListSearch\Communication\Plugin\Event\Subscriber
						</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/Event/EventDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
  
	namespace Pyz\Zed\Event;
  
	use Spryker\Zed\Event\EventDependencyProvider as SprykerEventDependencyProvider;
	use Spryker\Zed\ProductListSearch\Communication\Plugin\Event\Subscriber\ProductListSearchEventSubscriber;
	use Spryker\Zed\ProductListStorage\Communication\Plugin\Event\Subscriber\ProductListStorageEventSubscriber;
  
	class EventDependencyProvider extends SprykerEventDependencyProvider
	{
		public function getEventSubscriberCollection()
		{
			$eventSubscriberCollection = parent::getEventSubscriberCollection();
			$eventSubscriberCollection-&gt;add(new ProductListStorageEventSubscriber());
			$eventSubscriberCollection-&gt;add(new ProductListSearchEventSubscriber());
  
			return $eventSubscriberCollection;
		}
	}
</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="tip">Make sure when a product list is created, updated or deleted, they are exported (or removed) to Redis and Elasticsearch accordingly.
			<div class="table-wrap"><table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Storage type</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Target entity</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Example expected data identifier</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Example expected data fragment</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Redis</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Product Abstract Product List</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">kv:product_abstract_product_lists:1</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><pre><code class="language-PHP line-numbers">
										{
										"id_product_abstract": 1,
										"id_whitelists": [1,2],
										"id_blacklists": [3]
										}
									</code></pre></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Redis</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Product Concrete Product List</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">kv:product_concrete_product_list:1</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><pre><code class="language-PHP line-numbers">
										{
										"id_product_concrete": 1,
										"id_whitelists": [1,2],
										"id_blacklists": [3]
										}
									</code></pre></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Elasticsearch</td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Product Abstract</td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">product_abstract:de:en_us:1</td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><pre><code class="language-PHP line-numbers">
										{
										"product-lists": {
										"whitelists": [1,2],
										"blacklists": [3]
										}
										}
									</code></pre></td></tr></tbody></table></div></div>
        <h4>Prepare search data for export</h4>
        <p>
			With this step we are extending Elasticsearch documents with product list data. Add the following plugins to your project:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListDataLoaderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Loads product list data as payload for the publishing process.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch\DataLoader</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductListDataLoadExpanderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expands product page data with all its product lists for publishing based on the previously collected product information.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Product list data should be available in the product payload.
						<br />Suggestion: <br />use ProductListDataLoaderPlugin (see above).</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch\DataExpander</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListMapExpanderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Maps product list data to Elasticsearch document structure.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Product list data should be available.
						<br />Suggestion: <br />use ProductListDataLoadExpanderPlugin (see above).</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductAbstractProductListSynchronizationDataPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Can be executed to synchronize all product_abstract_product_list entries from database to Redis.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductListStorage\Communication\Plugin\Synchronization</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductConcreteProductListSynchronizationDataPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Can be executed to synchronize all product_concrete_product_list entries from database to Redis.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductListStorage\Communication\Plugin\Synchronization</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/ProductPageSearch/ProductPageSearchDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\ProductPageSearch;
 
	use Spryker\Shared\ProductListSearch\ProductListSearchConfig;
	use Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch\DataExpander\ProductListDataLoadExpanderPlugin;
	use Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch\DataLoader\ProductListDataLoaderPlugin;
	use Spryker\Zed\ProductListSearch\Communication\Plugin\ProductPageSearch\ProductListMapExpanderPlugin;
	use Spryker\Zed\ProductPageSearch\ProductPageSearchDependencyProvider as SprykerProductPageSearchDependencyProvider;
 
	class ProductPageSearchDependencyProvider extends SprykerProductPageSearchDependencyProvider
	{
		public const PLUGIN_PRODUCT_LABEL_DATA = 'PLUGIN_PRODUCT_LABEL_DATA';
 
		/**
		* @return \Spryker\Zed\ProductPageSearch\Dependency\Plugin\ProductPageDataExpanderInterface[]
		*/
		protected function getDataExpanderPlugins()
		{
			return [
				ProductListSearchConfig::PLUGIN_PRODUCT_LIST_DATA =&gt; new ProductListDataLoadExpanderPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Zed\ProductPageSearch\Dependency\Plugin\ProductPageMapExpanderInterface[]
		*/
		protected function getMapExpanderPlugins()
		{
			return [
				new ProductListMapExpanderPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Zed\ProductPageSearchExtension\Dependency\Plugin\ProductPageDataLoaderPluginInterface[]
		*/
		protected function getDataLoaderPlugins()
		{
			return [
				new ProductListDataLoaderPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/Synchronization/SynchronizationDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\Synchronization;
 
	use Spryker\Zed\ProductListStorage\Communication\Plugin\Synchronization\ProductAbstractProductListSynchronizationDataPlugin;
	use Spryker\Zed\ProductListStorage\Communication\Plugin\Synchronization\ProductConcreteProductListSynchronizationDataPlugin;
	use Spryker\Zed\Synchronization\SynchronizationDependencyProvider as SprykerSynchronizationDependencyProvider;
 
	class SynchronizationDependencyProvider extends SprykerSynchronizationDependencyProvider
	{
		/**
		* @return \Spryker\Zed\SynchronizationExtension\Dependency\Plugin\SynchronizationDataPluginInterface[]
		*/
		protected function getSynchronizationDataPlugins(): array
		{
			return [
				new ProductAbstractProductListSynchronizationDataPlugin(),
				new ProductConcreteProductListSynchronizationDataPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h4>Prepare the search queries</h4>
        <p>
			Once the product list data is exported to Elasticsearch, make sure to extend your search queries to filter out restricted products by adding the following query expander plugin to your search queries where necessary.
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <col class="TableStyle-PatternedRows2-Column-Regular" />
                <col class="TableStyle-PatternedRows2-Column-Regular" />
                <col style="width: 162px;" class="TableStyle-PatternedRows2-Column-Regular" />
                <col class="TableStyle-PatternedRows2-Column-Regular" />
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductListQueryExpanderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                            <ul>
                                <li>Expands an Elasticsearch query with blacklist and whitelist filters based on the customer session.</li>
                                <li>The result of the query will contain only products that were on the given whitelists, but not on the given blacklists.</li>
                            </ul>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                            <ul>
                                <li>The Customer session must contain product list information.</li>
                                <li>Suggestion: See "Merchant Product Lists" integration guide, for example, implementation.</li>
                            </ul>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Client\CustomerCatalog\Plugin\Search</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p class="info">
			The order of the query expander plugins matters for the search result. Make sure that your query expanders are in the appropriate order. I.e. the FacetQueryExpanderPlugin needs to follow all other plugins that filter down the result, otherwise, it can't generate the proper query fragment for itself.
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Client/Catalog/CatalogDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Client\Catalog;
 
	use Spryker\Client\Catalog\CatalogDependencyProvider as SprykerCatalogDependencyProvider;
	use Spryker\Client\CustomerCatalog\Plugin\Search\ProductListQueryExpanderPlugin;
	use Spryker\Client\Search\Plugin\Elasticsearch\QueryExpander\FacetQueryExpanderPlugin;
 
	class CatalogDependencyProvider extends SprykerCatalogDependencyProvider
	{
		/**
		* @return \Spryker\Client\Search\Dependency\Plugin\QueryExpanderPluginInterface[]
		*/
		protected function createCatalogSearchQueryExpanderPlugins()
		{
			return [
				//...
				new ProductListQueryExpanderPlugin(),
				//...
			];
		}
 
		/**
		* @return \Spryker\Client\Search\Dependency\Plugin\QueryExpanderPluginInterface[]
		*/
		protected function createSuggestionQueryExpanderPlugins()
		{
			return [
				//...
				new ProductListQueryExpanderPlugin(),
				//...
			];
		}
	}
			</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p class="info">
			Make sure that you haven't missed the expansion of any product search queries in your project where you need to consider product lists.
		</p>
        <p class="tip">
			Once you are done with this step, you should only be able to see those products in your search results, which are on the product lists of your customer's session.
		</p>
        <h3>5) Import Data</h3>
        <h4>Import product lists</h4>
        <p>
			Prepare your data according to your requirements using our demo data:
</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>vendor/spryker/product-list-data-import/data/import/product_list.csv</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	"product_list_key","name","type"
	"pl-001","All computers","whitelist"
	"pl-002","No ASUS","blacklist"
	"pl-003","All tablets","blacklist"
	"pl-004","Cameras, Wearables &amp; Phones","whitelist"
	"pl-005","Camcorders over 400€","blacklist"
	"pl-006","All cameras","whitelist"
	"pl-007","Tablets with enough storage","whitelist"
	"pl-008","No Smartwatches","blacklist"
			</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">product_list_key</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string (unique)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">pl-001</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Unique identifier used to identify a product list.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">name</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">All computers</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Custom product list name used to provide a readable title or sentence of what the list contains. Used only for internal representation.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">type</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">string ("blacklist"/"whitelist")</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">whitelist</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">Defines whether the list is a blacklist or a whitelist.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductListDataImportPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Imports basic product list data into the database.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductListDataImport\Communication\Plugin</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\DataImport;
 
	use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
	use Spryker\Zed\ProductListDataImport\Communication\Plugin\ProductListDataImportPlugin;
 
	class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
	{
		/**
		* @return array
		*/
		protected function getDataImporterPlugins(): array
		{
			return [
				//...
				new ProductListDataImportPlugin(),
			];
		}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP line-numbers">
	console data:import product-list</code></pre>
        <p class="tip">
			Make sure that in the database the configured data are added to the spy_product_list table.
		</p>
        <h4>Import product list category assignments</h4>
        <p>
			Prepare your data according to your requirements using our demo data:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>vendor/spryker/product-list-data-import/data/import/product_list_to_category.csv</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	product_list_key,category_key
	pl-001,computer
	pl-003,tablets
	pl-004,cameras-and-camcorder
	pl-004,smart-wearables
	pl-004,smartphones
	pl-008,smartwatches</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">product_list_key</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">pl-001</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">An existing product list identifier for the assignment.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">category_key	</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">computer</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">An existing category identifier to be assigned to the product list.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductListCategoryDataImportPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Imports category assignments for product lists.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Product list data and category data must exist before this installer plugin runs.</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductListDataImport\Communication\Plugin</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\DataImport;
 
	use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
	use Spryker\Zed\ProductListDataImport\Communication\Plugin\ProductListCategoryDataImportPlugin;
 
	class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
	{
		/**
		* @return array
		*/
		protected function getDataImporterPlugins(): array
		{
			return [
				//...
				new ProductListCategoryDataImportPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP line-numbers">
	console data:import product-list-category</code></pre>
        <p class="tip">
			Make sure that the configured data are added to the spy_product_list_category table in the database.
		</p>
        <h4>Import product list concrete product assignments</h4>
        <p>
			Prepare your data according to your requirements using our demo data:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>vendor/spryker/product-list-data-import/data/import/product_list_to_concrete_product.csv</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	product_list_key,concrete_sku
	pl-002,166_30230575
	pl-002,166_29565389
	pl-002,165_29879507
	pl-002,165_29879528
	pl-002,099_27207215
	pl-002,114_29911081
	pl-002,114_30580483
	pl-002,139_24699831
	pl-002,140_22766487
	pl-002,141_29380410
	pl-002,142_30943081
	pl-002,143_31035196
	pl-002,144_29804740
	pl-002,144_30312874
	pl-002,144_29804741
	pl-002,157_29525342
	pl-002,158_29885222
	pl-002,159_29885260
	pl-002,159_29885269
	pl-002,160_29533301
	pl-002,161_29533300
	pl-002,162_29533299
	pl-002,163_29728850
	pl-002,164_29565390
	pl-002,165_29879507
	pl-002,165_29879528
	pl-002,166_30230575
	pl-002,166_29565389
	pl-002,215_123
	pl-002,215_124
	pl-005,204_29851280
	pl-005,187_26306352
	pl-005,188_26306353
	pl-005,194_25904145
	pl-005,195_25904159
	pl-007,161_29533300
	pl-007,177_24867659
	pl-007,177_25913296</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">product_list_key</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">pl-002</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">An existing product list identifier for the assignment.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">concrete_sku</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">166_30230575</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">An existing concrete product SKU to assign to the product list.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductListProductConcreteDataImportPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Imports concrete product assignments for product lists.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Product list data and concrete product data must exist before this importer plugin runs.</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>vendor/spryker/product-list-data-import/src/Spryker/Zed/ProductListDataImport/Communication/Plugin/ProductListProductConcreteDataImportPlugin.php</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\DataImport;
 
	use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
	use Spryker\Zed\ProductListDataImport\Communication\Plugin\ProductListCategoryDataImportPlugin;
 
	class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
	{
		/**
		* @return array
		*/
		protected function getDataImporterPlugins(): array
		{
			return [
				//...
				new ProductListProductConcreteDataImportPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP">console data:import product-list-product-concrete</code></pre>
        <p class="tip">
			Make sure that the configured data are added to the spy_product_list_product_concrete table in the database .
		</p>
        <h3>6) Set up behaviour</h3>
        <h4>Reading from product storage</h4>
        <p>
			Add the following plugins to your project:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductAbstractRestrictionPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Rresponsible for determining if an abstract product is restricted for the current customer or not.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">ProductConcreteRestrictionPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Responsible for determining if a concrete product is restricted for the current customer or not.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">ProductViewVariantRestrictionPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Responsible for filtering out product variants of a product view object.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">The product view object should contain all available variant information.
							<br />Suggestion: 
							<br />use ProductViewVariantExpanderPlugin before, to collect variant data.</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Client/ProductStorage/ProductStorageDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
				
	namespace Pyz\Client\ProductStorage;
 
	use Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension\ProductAbstractRestrictionPlugin;
	use Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension\ProductConcreteRestrictionPlugin;
	use Spryker\Client\ProductListStorage\Plugin\ProductStorageExtension\ProductViewVariantRestrictionPlugin;
	use Spryker\Client\ProductStorage\ProductStorageDependencyProvider as SprykerProductStorageDependencyProvider;
 
	class ProductStorageDependencyProvider extends SprykerProductStorageDependencyProvider
	{
		/**
		* @return \Spryker\Client\ProductStorage\Dependency\Plugin\ProductViewExpanderPluginInterface[]
		*/
		protected function getProductViewExpanderPlugins()
		{
			return [
				new ProductViewVariantRestrictionPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Client\ProductStorageExtension\Dependency\Plugin\ProductAbstractRestrictionPluginInterface[]
		*/
		protected function getProductAbstractRestrictionPlugins(): array
		{
			return [
				new ProductAbstractRestrictionPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Client\ProductStorageExtension\Dependency\Plugin\ProductConcreteRestrictionPluginInterface[]
		*/
		protected function getProductConcreteRestrictionPlugins(): array
		{
			return [
				new ProductConcreteRestrictionPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p class="tip">
			Make sure that features which use Redis to read product data (i.e. Product Details Page, Product relations, etc.) don't show it when a product is restricted for the customer.
		</p>
        <h4>Product restrictions in the cart</h4>
        <p>
			Add the following plugins to handle product restrictions for cart items:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">ProductListRestrictedItemsPreCheckPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Checks all cart items and adds violations to the cart precheck response when they are restricted for the current customer.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductList\Communication\Plugin\CartExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">RemoveRestrictedItemsPreReloadPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Checks and removes restricted cart items from the quote and adds a message for each removed item.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Spryker\Zed\ProductList\Communication\Plugin\CartExtension</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var>src/Pyz/Zed/Cart/CartDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\Cart;

	use Spryker\Zed\Cart\CartDependencyProvider as SprykerCartDependencyProvider;
	use Spryker\Zed\Kernel\Container;
	use Spryker\Zed\ProductList\Communication\Plugin\CartExtension\ProductListRestrictedItemsPreCheckPlugin;
	use Spryker\Zed\ProductList\Communication\Plugin\CartExtension\RemoveRestrictedItemsPreReloadPlugin;
 
	class CartDependencyProvider extends SprykerCartDependencyProvider
	{
		/**
		* @param \Spryker\Zed\Kernel\Container $container
		*
		* @return \Spryker\Zed\CartExtension\Dependency\Plugin\CartPreCheckPluginInterface[]
		*/
		protected function getCartPreCheckPlugins(Container $container)
		{
			return [
				new ProductListRestrictedItemsPreCheckPlugin(),
			];
		}
 
		/**
		* @param \Spryker\Zed\Kernel\Container $container
		*
		* @return \Spryker\Zed\CartExtension\Dependency\Plugin\PreReloadItemsPluginInterface[]
		*/
		protected function getPreReloadPlugins(Container $container)
		{
			return [
				new RemoveRestrictedItemsPreReloadPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p class="tip">
			Make sure that no restricted products can be added to a cart and if they were already in a cart, they get properly removed once a product became restricted for the customer.
		</p>
        <p class="info">
			After completing the integration of this feature, you need to further extend it to provide one or many owner types for product lists to be able to assign them. A product list can only be fully functional when a user who browses the catalog gets product lists assigned and this can be done by providing owners for product lists.<br />Check out our Merchant Relationship Product Restrictions integration guide that adds this functionality for merchant relationships: <a href="https://spryker.atlassian.net/wiki/spaces/DOCS/pages/543851102/Merchant+Product+Restrictions+Feature+Integration+-+ongoing" target="_blank">Merchant Product Restrictions <MadCap:annotation MadCap:createDate="2018-12-26T14:42:46.7808683+02:00" MadCap:creator="Yuliia Boiko" MadCap:initials="YU" MadCap:comment="add link" MadCap:editor="Yuliia Boiko" MadCap:editDate="2018-12-26T14:42:48.8614598+02:00">Feature</MadCap:annotation> Integration</a>.
		</p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <p><a href="https://documentation.spryker.com/capabilities/product_management/product-restrictions.htm">Product Restrictions</a>
        </p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p><i>Last review date: Dec. 06th, 2018</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Tamás Nyulas, Yuliia Boiko</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>