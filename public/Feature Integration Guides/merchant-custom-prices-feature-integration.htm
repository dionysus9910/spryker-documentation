<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2B,ReleaseVersions.2018-10">
    <head><title>Merchant Custom Prices Feature Integration | Spryker</title>
        <link href="../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="The Merchant Custom Price Feature allows setting specific prices for merchants. The guide describes the process of integrating the feature into your project." />
    </head>
    <body>
        <h1>Merchant Custom Prices Feature Integration</h1>
        <MadCap:menuProxy data-mc-skin="/Project/Skins/SideMenuNotFixed.flskn" mc-linked-toc="$topicHeadings" style="mc-context-sensitive: True;mc-include-parent: True;mc-include-siblings: True;mc-include-children: True;" />
        <h2>Install Feature Core</h2>
        <h3>Prerequisites</h3>
        <p>
			To start feature integration, overview and install the necessary features:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Name</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Version</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Spryker Core</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Merchant</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Merchant Contracts</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Prices</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Product</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">2018.11.0</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h3>1) Install the required modules using Composer</h3>
        <p>
			Run the following command to install the required modules:
		</p><pre><code class="language-PHP line-numbers">
	composer require spryker-feature/merchant-custom-prices:"^2018.11.0" spryker/price-product-merchant-relationship-gui:"^1.0.0" --update-with-dependencies
			</code></pre>
        <div class="tip">
			Make sure that the following modules have been installed:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Module</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Expected directory</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>PriceProductMerchantRelationship</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/price-product-merchant-relationship</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>PriceProductMerchantRelationshipDataImport</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>vendor/spryker/price-product-merchant-relationship-data-import</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>PriceProductMerchantRelationshipGui</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/price-product-merchant-relationship-gui</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows"><var>PriceProductMerchantRelationshipStorage</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>vendor/spryker/price-product-merchant-relationship-storage</var></td></tr></tbody></table></div></div>
        <h3>2) Set up database schema</h3>
        <p>
			Adjust the schema definition so that entity changes can trigger events:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Affected entity</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Triggered events</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">spy_price_product_merchant_relationship</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">Entity.spy_price_product_merchant_relationship.create
						<br />Entity.spy_price_product_merchant_relationship.update
						<br />Entity.spy_price_product_merchant_relationship.delete</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p><var>src/Pyz/Zed/PriceProductMerchantRelationship/Persistence/Propel/Schema/spy_price_product_merchant_relationship.schema.xml</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?xml version="1.0"?&gt;
	&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				name="zed"
				xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd"
				namespace="Orm\Zed\PriceProductMerchantRelationship\Persistence"
				package="src.Orm.Zed.PriceProductMerchantRelationship.Persistence"&gt;
 
		&lt;table name="spy_price_product_merchant_relationship"&gt;
			&lt;behavior name="event"&gt;
				&lt;parameter name="spy_price_product_merchant_relationship_all" column="*"/&gt;
			&lt;/behavior&gt;
		&lt;/table&gt;
 
	&lt;/database&gt;
			</code></pre>
        <p>
			Run the following commands:
		</p><pre><code class="language-PHP line-numbers">
	console transfer:generate
	console propel:install
	console transfer:generate
			</code></pre>
        <div class="tip">
			Make sure that the following changes in transfer objects have been applied:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Transfer</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Event</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Path</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">PriceProductMerchantRelationshipStorageTransfer</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/PriceProductMerchantRelationshipStorageTransfer.php</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">PriceProductDimensionTransfer.idMerchantRelationship</td><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">property</td><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">added</td><td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/PriceProductDimensionTransfer.php</var></td></tr></tbody></table></div></div>
        <div class="tip">
			Make sure that the following changes have been applied by checking your database.
			<table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Transfer</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Event</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">spy_price_product_merchant_relationship</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">spy_price_product_concrete_merchant_relationship_storage</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">spy_price_product_abstract_merchant_relationship_storage</td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">created</td></tr></tbody></table></div>
        <div class="tip">
			Make sure that the changes were implemented successfully. For this purpose, trigger the following methods and check that the above events have been triggered as well:
			<table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Class path</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Method name</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>src/Orm/Zed/PriceProductMerchantRelationship/Persistence/Base/SpyPriceProductMerchantRelationship.php</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">prepareSaveEventName()<br />addSaveEventToMemory()<br />addDeleteEventToMemory()</td></tr></tbody></table></div>
        <h3>3) Configure export to Redis</h3>
        <p>
			With this step you will be able to publish prices on change (create, edit, delete) to spy_price_product_abstract_merchant_relationship_storage, spy_price_product_concrete_merchant_relationship_storage and synchronize the data to Storage.
		</p>
        <h4>Setup Event Listeners</h4>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">PriceProductMerchantRelationshipStorageEventSubscriber</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Registers listeners that are responsible to publish merchant prices to storage when a related entity changes.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductListStorage\Communication\Plugin\Event\Subscriber</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p><var>src/Pyz/Zed/Event/EventDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
   
	namespace Pyz\Zed\Event;
   
	use Spryker\Zed\Event\EventDependencyProvider as SprykerEventDependencyProvider;
	use Spryker\Zed\PriceProductMerchantRelationshipStorage\Communication\Plugin\Event\Subscriber\PriceProductMerchantRelationshipStorageEventSubscriber;
   
	class EventDependencyProvider extends SprykerEventDependencyProvider
	{
		public function getEventSubscriberCollection()
		{
			$eventSubscriberCollection = parent::getEventSubscriberCollection();
			$eventSubscriberCollection-&gt;add(new PriceProductMerchantRelationshipStorageEventSubscriber());
   
			return $eventSubscriberCollection;
		}
	}
			</code></pre>
        <div class="tip">
			Make sure when prices are exported, created, updated, or deleted manually in Zed UI, they are exported (or removed) to Redis accordingly.
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Storage type</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Target entity</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Example expected data identifier</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Example expected data fragment</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Redis</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Product Abstract Price</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">kv:price_product_concrete_merchant_relationship:de:1:1</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><pre><code class="language-PHP line-numbers">
	{
		"prices": {
			"2": {
				"EUR": {
					"priceData": null,
					"GROSS_MODE": {
						"DEFAULT": 9922
					},
					"NET_MODE": {
						"DEFAULT": 8922
					}
				},
				"CHF": {
					"priceData": null,
					"GROSS_MODE": {
						"DEFAULT": 11422
					},
					"NET_MODE": {
						"DEFAULT": 10322
					}
				}
			}
		}
	}
									</code></pre></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Redis</td><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Product Concrete Price</td><td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">kv:price_product_abstract_merchant_relationship:de:1:1</td><td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><pre><code class="language-PHP line-numbers">
	{
		"prices": {
			"2": {
				"EUR": {
					"priceData": null,
					"GROSS_MODE": {
						"DEFAULT": 12322
					},
					"NET_MODE": {
						"DEFAULT": 11222
					}
				},
				"CHF": {
					"priceData": null,
					"GROSS_MODE": {
						"DEFAULT": 10122
					},
					"NET_MODE": {
						"DEFAULT": 12522
					}
				}
			}
		}
	}
									</code></pre></td></tr></tbody></table></div></div>
        <h4>Add synchronization plugins</h4>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">PriceProductAbstractMerchantRelationSynchronizationDataPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Can be executed to synchronize all price_product_abstract_merchant_relationship entries from the database to Redis.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\PriceProductMerchantRelationshipStorage\Communication\Plugin\Synchronization</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">PriceProductConcreteMerchantRelationSynchronizationDataPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Can be executed to synchronize all price_product_concrete_merchant_relationship entries from the database to Redis.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Spryker\Zed\PriceProductMerchantRelationshipStorage\Communication\Plugin\Synchronization</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p><var>src/Pyz/Zed/Synchronization/SynchronizationDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\Synchronization;
 
	use Spryker\Zed\PriceProductMerchantRelationshipStorage\Communication\Plugin\Synchronization\PriceProductAbstractMerchantRelationSynchronizationDataPlugin;
	use Spryker\Zed\PriceProductMerchantRelationshipStorage\Communication\Plugin\Synchronization\PriceProductConcreteMerchantRelationSynchronizationDataPlugin;
	use Spryker\Zed\Synchronization\SynchronizationDependencyProvider as SprykerSynchronizationDependencyProvider;
 
	class SynchronizationDependencyProvider extends SprykerSynchronizationDependencyProvider
	{
		/**
		* @return \Spryker\Zed\SynchronizationExtension\Dependency\Plugin\SynchronizationDataPluginInterface[]
		*/
		protected function getSynchronizationDataPlugins(): array
		{
			return [
				new PriceProductAbstractMerchantRelationSynchronizationDataPlugin(),
				new PriceProductConcreteMerchantRelationSynchronizationDataPlugin(),
			];
		}
	}
			</code></pre>
        <p class="tip">
			Verify if <var>"console sync:data --help"</var> has price_product_abstract_merchant_relationship and price_product_concrete_merchant_relationship as an available resource in the list.
		</p>
        <h3>4) Import data</h3>
        <h4>Import price product merchant relationships</h4>
        <p>
			Prepare your prices data according to your requirements using our demo data:
		</p>
        <p><var>vendor/spryker/price-product-merchant-relationship-data-import/data/import/price_product_merchant_relationship.csv</var>
        </p><pre><code class="language-PHP line-numbers">merchant_relation_key,abstract_sku,concrete_sku,price_type,store,currency,price_net,price_gross
	mr-002,205,,DEFAULT,DE,EUR,9022,10022
	mr-002,205,,DEFAULT,DE,CHF,11022,12522
	mr-002,001,,DEFAULT,DE,EUR,8922,9922
	mr-002,001,,DEFAULT,DE,CHF,10322,11422
	mr-002,,001_25904006,DEFAULT,DE,EUR,11222,12322
	mr-002,,001_25904006,DEFAULT,DE,CHF,12522,10122
	mr-002,051,,DEFAULT,DE,EUR,11022,12322
	mr-002,,051_29567823,DEFAULT,DE,EUR,10822,12022
	mr-002,,051_30107816,DEFAULT,DE,EUR,11222,12222
	mr-002,051,,DEFAULT,DE,CHF,12022,14022
	mr-002,,051_29567823,DEFAULT,DE,CHF,12422,13822
	mr-002,,051_30107816,DEFAULT,DE,CHF,12522,10322
	mr-003,205,,DEFAULT,DE,EUR,9033,10033
	mr-003,205,,DEFAULT,DE,CHF,11533,13033
	mr-003,001,,DEFAULT,DE,EUR,8933,9933
	mr-003,001,,DEFAULT,DE,CHF,10333,11433
	mr-003,,001_25904006,DEFAULT,DE,EUR,11233,12333
	mr-003,,001_25904006,DEFAULT,DE,CHF,12533,10133
	mr-003,051,,DEFAULT,DE,EUR,11033,12333
	mr-003,,051_29567823,DEFAULT,DE,EUR,10833,12033
	mr-003,,051_30107816,DEFAULT,DE,EUR,11233,12233
	mr-003,051,,DEFAULT,DE,CHF,12033,14033
	mr-003,,051_29567823,DEFAULT,DE,CHF,12433,13833
	mr-003,,051_30107816,DEFAULT,DE,CHF,12533,10333
			</code></pre>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">merchant_relation_key</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mr-001</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Unique identifier used to identify a merchant contract.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">abstract_sku</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory<br />						(optional if concrete_sku provided)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string<br />(unique)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">051</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">An existing abstract product SKU to assign to the product list.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">concrete_sku</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory<br />(optional if abstract_sku provided)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string<br />(unique)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">051_29567823	</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">An existing concrete product SKU to assign to the product list.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">price_type</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">DEFAULT</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Name of the price type. By default it's 'DEFAULT', but could be project specific (strike, sale, ...).</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">store</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">DE</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Store name.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">currency</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">EUR</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Currency ISO code.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">price_net</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">number</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">100</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Net price in cents.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">price_gross</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">number</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">120</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows">Gross price in cents.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <p><var>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
  
	namespace Pyz\Zed\DataImport;
  
	use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
	use Spryker\Zed\PriceProductMerchantRelationshipDataImport\Communication\Plugin\PriceProductMerchantRelationshipDataImportPlugin;
  
	class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
	{
		/**
		* @return array
		*/
		protected function getDataImporterPlugins(): array
		{
			return [
				//...
				new PriceProductMerchantRelationshipDataImportPlugin(),
			];
		}
	}
			</code></pre>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP line-numbers">
	console data:import product-price-merchant-relationship
			</code></pre>
        <p class="tip">
			Make sure that in the database the configured data is added to the spy_price_product_merchant_relationship table.
		</p>
        <h3>5) Set up Behavior</h3>
        <h4>Set up merchant relationship related price handling</h4>
        <p>
			Enable the following behaviors by registering the plugins:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">MerchantRelationshipPriceQueryCriteriaPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Extends PriceProduct  select prices SQL query for selecting prices from merchant relationship dimension if they are requested in PriceProductCriteriaTransfer→priceDimension or 
							<br />PriceProductFilterTransfer→priceDimension equals PriceProductMerchantRelationshipConfig::PRICE_DIMENSION_MERCHANT_RELATIONSHIP or PriceProductFilterTransfer→priceDimension→idMerchantRelationship is provided.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">MerchantRelationshipPriceDimensionAbstractWriterPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Enables saving product abstract prices to the spy_price_product_merchant_relationship table.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects PriceProductTransfer.priceDemnsion.idMerchantRelationshop, otherwise skips element.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">MerchantRelationshipPriceDimensionConcreteWriterPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Enables saving product concrete prices to the spy_price_product_merchant_relationship table.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects PriceProductTransfer.priceDemnsion.idMerchantRelationshop, otherwise skips element.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">MerchantRelationshipPriceProductDimensionExpanderStrategyPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Sets PriceProductTransfer.PriceDimension.idMerchantRelationship and PriceProductTransfer.PriceDimension.name.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">none</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">MerchantRelationshipPriceProductFilterPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Selects min prices from the MR prices available for the current customer (company business can be assigned for multiple MRs)</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">none</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Service\PriceProductMerchantRelationship\Plugin\PriceProductExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">PriceProductMerchantRelationshipStorageDimensionPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Adds MR prices to the list of available prices for the current customer when they are read from Redis.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">none</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Client\PriceProductMerchantRelationshipStorage\Plugin\PriceProductStorageExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">MerchantRelationshipProductAbstractFormExpanderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Adds select control to PIM (abstract products) where an admin can choose Merchant Relationship on the Prices tab to manage prices for a concrete Merchant Relationship.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">none</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\PriceProductMerchantRelationshipGui\Communication\Plugin\ProductManagement</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">MerchantRelationshipProductConcreteFormExpanderPlugin</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">Adds select control to PIM (product variants) where an admin can choose Merchant Relationship on the Prices tab to manage prices for a concrete Merchant Relationship.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows">none</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Spryker\Zed\PriceProductMerchantRelationshipGui\Communication\Plugin\ProductManagement</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p><var>src/Pyz/Zed/ProductManagement/ProductManagementDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
   
	namespace Pyz\Zed\ProductManagement;
 
	use Spryker\Zed\PriceProductMerchantRelationshipGui\Communication\Plugin\ProductManagement\MerchantRelationshipProductAbstractFormExpanderPlugin;
	use Spryker\Zed\PriceProductMerchantRelationshipGui\Communication\Plugin\ProductManagement\MerchantRelationshipProductConcreteFormExpanderPlugin;
	use Spryker\Zed\ProductManagement\ProductManagementDependencyProvider as SprykerProductManagementDependencyProvider;
 
	class ProductManagementDependencyProvider extends SprykerProductManagementDependencyProvider
	{
		/**
		* @return \Spryker\Zed\ProductManagementExtension\Dependency\Plugin\ProductAbstractFormExpanderPluginInterface[]
		*/
		protected function getProductAbstractFormExpanderPlugins(): array
		{
			return [
				new MerchantRelationshipProductAbstractFormExpanderPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Zed\ProductManagementExtension\Dependency\Plugin\ProductConcreteFormExpanderPluginInterface[]
		*/
		protected function getProductConcreteFormExpanderPlugins(): array
		{
			return [
				new MerchantRelationshipProductConcreteFormExpanderPlugin(),
			];
		}
	}
			</code></pre>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><var style="font-weight: normal;">src/Pyz/Zed/PriceProduct/PriceProductDependencyProvider.php</var>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
   
	namespace Pyz\Zed\PriceProduct;
 
	use Spryker\Zed\PriceProduct\PriceProductDependencyProvider as SprykerPriceProductDependencyProvider;
	use Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct\MerchantRelationshipPriceDimensionAbstractWriterPlugin;
	use Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct\MerchantRelationshipPriceDimensionConcreteWriterPlugin;
	use Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct\MerchantRelationshipPriceProductDimensionExpanderStrategyPlugin;
	use Spryker\Zed\PriceProductMerchantRelationship\Communication\Plugin\PriceProduct\MerchantRelationshipPriceQueryCriteriaPlugin;
 
	class PriceProductDependencyProvider extends SprykerPriceProductDependencyProvider
	{
		/**
		* @return \Spryker\Zed\PriceProductExtension\Dependency\Plugin\PriceDimensionQueryCriteriaPluginInterface[]
		*/
		protected function getPriceDimensionQueryCriteriaPlugins(): array
		{
			return array_merge(parent::getPriceDimensionQueryCriteriaPlugins(), [
				new MerchantRelationshipPriceQueryCriteriaPlugin(),
			]);
		}
 
		/**
		* @return \Spryker\Zed\PriceProductExtension\Dependency\Plugin\PriceDimensionAbstractSaverPluginInterface[]
		*/
		protected function getPriceDimensionAbstractSaverPlugins(): array
		{
			return [
				new MerchantRelationshipPriceDimensionAbstractWriterPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Zed\PriceProductExtension\Dependency\Plugin\PriceDimensionConcreteSaverPluginInterface[]
		*/
		protected function getPriceDimensionConcreteSaverPlugins(): array
		{
			return [
				new MerchantRelationshipPriceDimensionConcreteWriterPlugin(),
			];
		}
 
		/**
		* @return \Spryker\Service\PriceProductExtension\Dependency\Plugin\PriceProductDimensionExpanderStrategyPluginInterface[]
		*/
		protected function getPriceProductDimensionExpanderStrategyPlugins(): array
		{
			return [
				new MerchantRelationshipPriceProductDimensionExpanderStrategyPlugin(),
			];
		}
	}
			</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p><var>src/Pyz/Service/PriceProduct/PriceProductDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
   
	namespace Pyz\Service\PriceProduct;
 
	use Spryker\Service\PriceProduct\PriceProductDependencyProvider as SprykerPriceProductDependencyProvider;
	use Spryker\Service\PriceProductMerchantRelationship\Plugin\PriceProductExtension\MerchantRelationshipPriceProductFilterPlugin;
 
	class PriceProductDependencyProvider extends SprykerPriceProductDependencyProvider
	{
		/**
		* @return \Spryker\Service\PriceProductExtension\Dependency\Plugin\PriceProductFilterPluginInterface[]
		*/
		protected function getPriceProductDecisionPlugins(): array
		{
			return [
				new MerchantRelationshipPriceProductFilterPlugin(),
			];
		}
	}
			</code></pre>
        <p><var>src/Pyz/Client/PriceProductStorage/PriceProductStorageDependencyProvider.php</var>
        </p><pre><code class="language-PHP line-numbers">
	&lt;?php
   
	namespace Pyz\Client\PriceProductStorage;
 
	use Spryker\Client\PriceProductMerchantRelationshipStorage\Plugin\PriceProductStorageExtension\PriceProductMerchantRelationshipStorageDimensionPlugin;
	use Spryker\Client\PriceProductStorage\PriceProductStorageDependencyProvider as SprykerPriceProductStorageDependencyProvider;
 
	class PriceProductStorageDependencyProvider extends SprykerPriceProductStorageDependencyProvider
	{
		/**
		* @return \Spryker\Client\PriceProductStorageExtension\Dependency\Plugin\PriceProductStoragePriceDimensionPluginInterface[]
		*/
		public function getPriceDimensionStorageReaderPlugins(): array
		{
			return [
				new PriceProductMerchantRelationshipStorageDimensionPlugin(),
			];
		}
	}
			</code></pre>
        <p class="tip">
			Make sure that there is the "Merchant Price Dimension" dropdown in Zed UI on the Product Abstract and Concrete (variants) edit page (on the Price &amp; Tax tab). When you select some MR, the current page should be reloaded and prices table should display prices from the selected MR if they exist or an empty table is they do not exist.<br />Make sure that when you added/changed prices for some MR, they appear after sending the submit form and reloading the page.<br />Make sure that Redis keys are updated/created for this product and business units are assigned to the selected MR.
		</p>
        <p class="tip">
			Make sure that a logged in user, who belongs to a company business unit and that business unit is assigned to some MR with specified prices, sees MR prices on the Catalog and on Product page.<br />Make sure that this user sees MIN price if his/her business unit is assigned to multiple MRs with different prices for the same product.
		</p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <p><a href="https://documentation.spryker.com/capabilities/price/customer-specific-prices.htm">Custom Specific Prices</a>
        </p>
        <p><a href="https://documentation.spryker.com/capabilities/price/prices_per_merchant_relations/price-per-merchant-relation.htm">Prices per Merchant Relation</a>
        </p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p><i>Last review date: Dec. 06th, 2018</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Stanislav Matveyev, Yuliia Boiko</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>