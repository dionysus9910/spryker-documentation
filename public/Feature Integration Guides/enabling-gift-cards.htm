<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.DemoShop">
    <head><title>Enabling Gift Cards</title>
    </head>
    <body>
        <h1>Enabling Gift Cards <img src="../../../Spryker Capabilities/Content/Resources/Images/shoptype/Demoshop.png" /></h1>
        <p style="font-weight: normal;">The Gift Cards feature is shipped with the following modules:</p>
        <ul>
            <li><b>GiftCard</b>: implements basic functionality of the Gift Cards feature as  well as the <a href="../../../Spryker Capabilities/Content/Capabilities/Gift Cards/gift-cards-purchase-redeeming.htm">Replacement value-checking strategy</a>.</li>
            <li><b>GiftCardBalance</b>: implements gift card <a href="../../../Spryker Capabilities/Content/Capabilities/Gift Cards/gift-cards-purchase-redeeming.htm">Balance value-checking strategy</a>.</li>
            <li><b>GiftCardMailConnector</b>: responsible for sending emails on gift cards usage (balance change) as well as gift cards codes delivery.</li>
            <li><b>Nopayment</b>: implements payment methods if price to pay is fully covered by a gift card.</li>
        </ul>
        <p>To enable the gift cards in your project, do the following:
				</p>
        <ol>
            <li>Make sure you have the correct versions of the required modules. To automatically update to the latest non-BC breaking versions, run<pre><code class="language-PHP line-numbers">composer update "spryker/*"</code></pre></li>
            <li>Require the modules in your composer.json by running:<pre><code class="language-PHP line-numbers">composer require spryker/gift-card:"^1.0.0" spryker/gift-card-balance:"^1.0.0"
spryker/gift-card-mail-connector:"^1.0.0" spryker/nopayment:"^4.0.0" 
spryker/product-management:"^0.12.0"</code></pre></li>
            <li>Enable necessary plugins. See the table below for information on available plugins, where to install them and value checking strategies they are used for.</li>
            <div class="table-wrap">
                <table style="width: 100%;">
                    <tbody>
                        <tr>
                            <td><b>Plugin</b>
                            </td>
                            <td style="min-width: 300px"><b>Description</b>
                            </td>
                            <td><b>Where to install</b>
                            </td>
                            <td><b>Strategy</b>
                            </td>
                        </tr>
                        <tr>
                            <td><var>GiftCardCalculatorPlugin</var>
                            </td>
                            <td>Splits applicable and non-applicable Gift Cards. Creates payment methods for applicable Gift Cards.</td>
                            <td><var>CalculationDependencyProvider::getQuoteCalculatorPluginStack</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardCurrencyMatchDecisionRulePlugin</var>
                            </td>
                            <td>Doesn’t allow to use a Gift Card with a different currency rather than the one the customer has used while performing the payment.</td>
                            <td><var>GiftCardDependencyProvider::getDecisionRulePlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardIsActiveDecisionRulePlugin</var>
                            </td>
                            <td>Doesn’t allow to use inactive Gift Cards.</td>
                            <td><var>GiftCardDependencyProvider::getDecisionRulePlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardDiscountableItemFilterPlugin</var>
                            </td>
                            <td>Restricts using a Gift Card for another Gift Cards in a cart. The plugin filters out Gift Cards from discountable items.</td>
                            <td><var>DiscountDependencyProvider::getDiscountableItemFilterPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardIsUsedDecisionRulePlugin</var>
                            </td>
                            <td>As a part of the replacement strategy, this plugin does not allow to use a Gift Card twice.</td>
                            <td><var>GiftCardDependencyProvider::getDecisionRulePlugins</var>
                            </td>
                            <td>Replacement</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardMetadataExpanderPlugin</var>
                            </td>
                            <td>Populates Gift Card information when it is in the cart.</td>
                            <td><var>CartDependencyProvider::getExpanderPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardOrderItemSaverPlugin</var>
                            </td>
                            <td>Saves a Gift Card with populated data when an order is placed.</td>
                            <td><var>CheckoutDependencyProvider::getCheckoutOrderSavers</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardOrderSaverPlugin</var>
                            </td>
                            <td>Keeps Gift Card as an order payment method.</td>
                            <td><var>PaymentDependencyProvider::extendPaymentPlugin</var> with a key <var>PaymentDependencyProvider::CHECKOUT_ORDER_SAVER_PLUGINS</var></td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardPaymentMethodFilterPlugin</var>
                            </td>
                            <td>Now every payment method is compatible with a Gift Card in the cart. The plugin filters out all incompatible payment methods from available ones during checkout payment methods step.</td>
                            <td><var>PaymentDependencyProvider::getPaymentMethodFilterPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardPreCheckPlugin</var>
                            </td>
                            <td>Confirms that a Gift Card is not used at the moment and that payment method amount assigned to the Gift Card is no more than the Gift Card amount itself.</td>
                            <td><var>PaymentDependencyProvider::extendPaymentPlugin</var> with a key <var>PaymentDependencyProvider::CHECKOUT_PRE_CHECK_PLUGINS</var></td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardRecreateValueProviderPlugin</var>
                            </td>
                            <td>For replacement: defines a Gift Card leftover. It’s simply a Gift Card amount for this strategy.</td>
                            <td><var>GiftCardDependencyProvider::getValueProviderPlugin</var>
                            </td>
                            <td>Replacement</td>
                        </tr>
                        <tr>
                            <td><var>CreateGiftCardCommandPlugin</var>
                            </td>
                            <td> It is an order management system command to create a Gift Card based on a paid order item (a Gift Card item).</td>
                            <td><var>OmsDependencyProvider::extendCommandPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>ReplaceGiftCardsCommandPlugin</var>
                            </td>
                            <td>For placement strategy: creates a new Gift Card based on leftover from the previous one.</td>
                            <td><var>OmsDependencyProvider::extendCommandPlugins</var>
                            </td>
                            <td>Replacement</td>
                        </tr>
                        <tr>
                            <td><var>IsGiftCardConditionPlugin</var>
                            </td>
                            <td>This plugin is used to define an order management system state machine process routing.</td>
                            <td><var>OmsDependencyProvider::extendConditionPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>OnlyGiftCardShipmentMethodFilterPlugin</var>
                            </td>
                            <td>Filters out shipment methods that are incompatible with Gift Cards.</td>
                            <td><var>ShipmentDependencyProvider::getMethodFilterPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>BalanceCheckerApplicabilityPlugin</var>
                            </td>
                            <td>For balance strategy: checks positive balance on a Gift Card.</td>
                            <td><var>GiftCardDependencyProvider::getDecisionRulePlugins</var>
                            </td>
                            <td>Balance</td>
                        </tr>
                        <tr>
                            <td><var>BalanceTransactionLogPaymentSaverPlugin</var>
                            </td>
                            <td>For balance strategy: persists a Gift Card during a payment processing.</td>
                            <td><var>GiftCardDependencyProvider::getPaymentSaverPlugins</var>
                            </td>
                            <td>Balance</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardBalanceValueProviderPlugin</var>
                            </td>
                            <td>For balance strategy: provides available Gift Card amount. Gift Card amount equals to logged transactions.</td>
                            <td><var>GiftCardDependencyProvider::getValueProviderPlugin</var>
                            </td>
                            <td>Balance</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardDeliveryMailTypePlugin</var>
                            </td>
                            <td>Sends an email about a successfully issued Gift Card to a buyer.</td>
                            <td><var>MailDependencyProvider::MAIL_TYPE_COLLECTION</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>GiftCardUsageMailTypePlugin</var>
                            </td>
                            <td>Sends an email on Gift Card usage to its user.</td>
                            <td><var>MailDependencyProvider::MAIL_TYPE_COLLECTION</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>ShipGiftCardByEmailCommandPlugin</var>
                            </td>
                            <td>An order management system command which triggers Gift Card electronic shipment.</td>
                            <td><var>OmsDependencyProvider::extendCommandPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>NopaymentHandlerPlugin</var>
                            </td>
                            <td>A payment method placeholder that is used when an order is paid by only a Gift Card without a real payment method.</td>
                            <td><var>CheckoutDependencyProvider::extendPaymentMethodHandler</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>NopaymentPreCheckPlugin</var>
                            </td>
                            <td>Doesn’t allow placing an order with a price to pay more than 0 with a NoPayment payment method.</td>
                            <td><var>PaymentDependencyProvider::extendPaymentPlugins</var> with a key <var>PaymentDependencyProvider::CHECKOUT_ORDER_SAVER_PLUGINS</var></td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>PriceToPayPaymentMethodFilterPlugin</var>
                            </td>
                            <td>Filters payment methods based on cart totals.</td>
                            <td><var>PaymentDependencyProvider::getPaymentMethodFilterPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>PaymentFormFilterPlugin</var>
                            </td>
                            <td>Each payment method provides its own subform. The plugin filters them out based on an available payment method list.</td>
                            <td><var>CheckoutDependencyProvider::getPaymentFormFilterPlugins</var>
                            </td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td><var>PaymentCalculatorPlugin</var>
                            </td>
                            <td>Distributes total prices to payment methods. Calculates price to pay to quote totals.</td>
                            <td><var>CalculationDependencyProvider::getQuoteCalculatorPluginStack</var>
                            </td>
                            <td>-</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </ol>
        <p>&#160;</p>
        <p><![CDATA[
		
		]]><b>See also:</b></p>
        <ul>
            <li>Get a general idea of what the gift cards are and why you need them</li>
            <li><a href="../../../Spryker Capabilities/Content/Capabilities/Gift Cards/gift-cards-purchase-redeeming.htm">Learn about the Gift Cards Purchase and Redeeming Process and value checking strategies</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last
review date: March 27th, 2018 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Denis Turkov</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>