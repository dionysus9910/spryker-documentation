<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2B,ReleaseVersions.2018-10">
    <head><title>Product Packaging Unit Feature Integration | Spryker</title>
        <link href="../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="The Product Packaging Unit Feature allows defining packaging units per abstract product. This guide describes how to integrate the feature into your project." />
    </head>
    <body>
        <h1>Product Packaging Unit Feature Integration <img src="../Resources/Images/shoptype/B2B_Shop.png" /></h1>
        <MadCap:menuProxy data-mc-skin="/Project/Skins/SideMenuNotFixed.flskn" mc-linked-toc="$topicHeadings" style="mc-context-sensitive: True;mc-include-parent: True;mc-include-siblings: True;mc-include-children: True;" />
        <h2>Install Feature Core</h2>
        <h3>Prerequisites</h3>
        <p>
			To start feature integration, overview and install the necessary features:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Name</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Version</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Inventory Management</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Spryker Core</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Order Management</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Product</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Measurement Units</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">2018.11.0</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h3>1) Install the Required Modules Using Composer</h3>
        <p>
			Run the following command(s) to install the required modules:
		</p>
        <div class="tip">
			Make sure that the following modules have been installed:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Module</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Expected directory</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnit</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>vendor/spryker/product-packaging-unit</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitDataImport</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>vendor/spryker/product-packaging-unit-data-import</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitStorage</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>vendor/spryker/product-packaging-unit-storage</var></td></tr></tbody></table></div></div>
        <h3>2) Set up configuration</h3>
        <p>
			Adjust synchronization queue pools in configuration:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/ProductPackagingUnitStorage/ProductPackagingUnitStorageConfig.php
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\ProductPackagingUnitStorage;
 
use Pyz\Zed\Synchronization\SynchronizationConfig;
use Spryker\Zed\ProductPackagingUnitStorage\ProductPackagingUnitStorageConfig as SprykerProductPackagingUnitStorageConfig;
 
class ProductPackagingUnitStorageConfig extends SprykerProductPackagingUnitStorageConfig
{
	/**
	 * @return string|null
	 */
	public function getProductPackagingUnitSynchronizationPoolName(): ?string
	{
		return SynchronizationConfig::DEFAULT_SYNCHRONIZATION_POOL_NAME; // "synchronizationPool"
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h3>3) Set up Database Schema and Transfer objects</h3>
        <p>
			Adjust the schema definition so that entity changes can trigger events.
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Affected entity</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Triggered events</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>spy_product_packaging_unit</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Entity.spy_product_packaging_unit.create</var>
                            <br /><var>Entity.spy_product_packaging_unit.update</var>
                            <br /><var>Entity.spy_product_packaging_unit.delete</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>spy_product_packaging_unit_type</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Entity.spy_product_packaging_unit_type.create</var>
                            <br /><var>Entity.spy_product_packaging_unit_type.update</var>
                            <br /><var>Entity.spy_product_packaging_unit_type.delete</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>spy_product_packaging_unit_amount</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Entity.spy_product_packaging_unit_amount.create</var>
                            <br /><var>Entity.spy_product_packaging_unit_amount.update</var>
                            <br /><var>Entity.spy_product_packaging_unit_amount.delete</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-DarkerRows"><var>spy_product_packaging_lead_product</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-DarkerRows"><var>Entity.spy_product_packaging_lead_product.create</var>
                            <br /><var>Entity.spy_product_packaging_lead_product.update</var>
                            <br /><var>Entity.spy_product_packaging_lead_product.delete</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/ProductPackagingUnit/Persistence/Propel/Schema/spy_product_packaging_unit.schema.xml
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-xml line-numbers">&lt;?xml version="1.0"?&gt;
	&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="zed" xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd" namespace="Orm\Zed\ProductPackagingUnit\Persistence" package="src.Orm.Zed.ProductPackagingUnit.Persistence"&gt;
 
		&lt;table name="spy_product_packaging_unit" phpName="SpyProductPackagingUnit"&gt;
			&lt;behavior name="event"&gt;
				&lt;parameter name="spy_product_packaging_unit_all" column="*"/&gt;
			&lt;/behavior&gt;
		&lt;/table&gt;
 
		&lt;table name="spy_product_packaging_unit_type" phpName="SpyProductPackagingUnitType"&gt;
			&lt;behavior name="event"&gt;
				&lt;parameter name="spy_product_packaging_unit_type_all" column="*"/&gt;
			&lt;/behavior&gt;
		&lt;/table&gt;
 
		&lt;table name="spy_product_packaging_unit_amount" phpName="SpyProductPackagingUnitAmount"&gt;
			&lt;behavior name="event"&gt;
				&lt;parameter name="spy_product_packaging_unit_amount_all" column="*"/&gt;
			&lt;/behavior&gt;
		&lt;/table&gt;
 
		&lt;table name="spy_product_packaging_lead_product" phpName="SpyProductPackagingLeadProduct"&gt;
			&lt;behavior name="event"&gt;
				&lt;parameter name="spy_product_packaging_lead_product_all" column="*"/&gt;
			&lt;/behavior&gt;
			&lt;/table&gt;
	&lt;/database&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Set up synchronization queue pools so that non-multistore entities (not store specific entities) can be synchronized among stores:</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/ProductPackagingUnitStorage/Persistence/Propel/Schema/spy_product_abstract_packaging_storage.schema.xml
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-xml line-numbers">&lt;?xml version="1.0"?&gt;
	&lt;database xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					name="zed"
					xsi:noNamespaceSchemaLocation="http://static.spryker.com/schema-01.xsd"
					namespace="Orm\Zed\ProductPackagingUnitStorage\Persistence"
					package="src.Orm.Zed.ProductPackagingUnitStorage.Persistence"&gt;
 
			&lt;table name="spy_product_abstract_packaging_storage"&gt;
				&lt;behavior name="synchronization"&gt;
					&lt;parameter name="queue_pool" value="synchronizationPool" /&gt;
				&lt;/behavior&gt;
			&lt;/table&gt;
 
	&lt;/database&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following commands to apply database changes and generate entity and transfer changes:
		</p><pre><code class="language-PHP line-numbers">console transfer:generate
console propel:install
console transfer:generate</code></pre>
        <div class="tip">
			Make sure that the following changes have been applied by checking your database:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Database entity</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Event</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>spy_product_packaging_unit</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>spy_product_packaging_unit_type</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>spy_product_packaging_unit_amount</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>spy_product_packaging_lead_product</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>spy_product_abstract_packaging_storage</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">table</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>spy_sales_order_item.amount</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">column</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">created</td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>spy_sales_order_item.amount_sku</var></td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">column</td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">created</td></tr></tbody></table></div></div>
        <div class="tip">
			Make sure that the following changes in transfer objects have been applied:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Transfer</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Type</th><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Event</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Path</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnitType</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/ProductPackagingUnitTypeTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitTypeTranslation</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/ProductPackagingUnitTypeTranslationTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnit</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/ProductPackagingUnitTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitAmount</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/ProductPackagingUnitAmountTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingLeadProduct</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/ProductPackagingLeadProductTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>Item</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/ItemTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductConcretePackagingStorage</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/ProductConcretePackagingStorageTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductAbstractPackagingStorage</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/ProductAbstractPackagingStorageTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>SpyProductPackagingLeadProductEntity</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/SpyProductPackagingLeadProductEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>SpyProductPackagingUnitAmountEntity</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/SpyProductPackagingUnitAmountEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>SpyProductPackagingUnitEntity</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/SpyProductPackagingUnitEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>SpyProductPackagingUnitTypeEntity</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/SpyProductPackagingUnitTypeEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>SpyProductAbstractPackagingStorageEntity</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">class</td><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>src/Generated/Shared/Transfer/SpyProductAbstractPackagingStorageEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>SpySalesOrderItemEntityTransfer.amount</var></td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">property</td><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">created</td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>src/Generated/Shared/Transfer/SpySalesOrderItemEntityTransfer</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>SpySalesOrderItemEntityTransfer.amountSku</var></td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">property</td><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">created</td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>src/Generated/Shared/Transfer/SpySalesOrderItemEntityTransfer</var></td></tr></tbody></table></div></div>
        <div class="tip">
			Make sure that the changes have been implemented successfully. For this purpose, trigger the following methods and make sure that the above events have been triggered:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Path</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Method name</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductPackagingUnit/Persistence/Base/SpyProductPackagingLeadProduct.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>prepareSaveEventName()
								<br />addSaveEventToMemory()
								<br />addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductPackagingUnit/Persistence/Base/SpyProductPackagingUnit.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>prepareSaveEventName()
								<br />addSaveEventToMemory()
								<br />addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>src/Orm/Zed/ProductPackagingUnit/Persistence/Base/SpyProductPackagingUnitAmount.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>prepareSaveEventName()
								<br />addSaveEventToMemory()
								<br />addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-DarkerRows"><td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>src/Orm/Zed/ProductPackagingUnit/Persistence/Base/SpyProductPackagingUnitType.php</var></td><td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>prepareSaveEventName()
								<br />addSaveEventToMemory()
								<br />addDeleteEventToMemory()</var></td></tr><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>src/Orm/Zed/ProductPackagingUnitStorage/Persistence/Base/SpyProductAbstractPackagingStorage.php</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>sendToQueue()</var></td></tr></tbody></table></div></div>
        <h3>4) Add Translations</h3>
        <p>
			Append glossary according to your language configuration:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/data/import/glossary.csv
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">cart.pre.check.availability.failed.lead.product,Products inside the item 'sku' are not available at the moment.,en_US
cart.pre.check.availability.failed.lead.product,Produkte im Artikel 'sku' sind momentan nicht verfügbar.,de_DE
product.unavailable,Product '%sku%' is not available at the moment,en_US
product.unavailable,Das Produkt '%sku%' ist momentan nicht verfügbar,de_DE
cart.pre.check.amount.min.failed,Die minimale Mengenanforderung für Produkt SKU '%sku%' ist nicht erreicht.,de_DE
cart.pre.check.amount.min.failed,Minimum amount requirements for product SKU '%sku%' are not fulfilled.,en_US
cart.pre.check.amount.max.failed,Die maximale Mengenanforderung für Produkt SKU '%sku%' ist überschritten.,de_DE
cart.pre.check.amount.max.failed,Maximum amount for product SKU '%sku%' is exceeded.,en_US
cart.pre.check.amount.interval.failed,Die Anzahl für Produkt SKU '%sku%' liegt nicht innerhalb des vorgegebenen Intervals.,de_DE
cart.pre.check.amount.interval.failed,Amount interval requirements for product SKU '%sku%' are not fulfilled.,en_US
cart.pre.check.amount.is_not_variable.failed,Standardbetrag für Produkt SKU '%sku%' ist überschritten.,de_DE
cart.pre.check.amount.is_not_variable.failed,Default amount requirements for product SKU '%sku%' are not fulfilled.,en_US</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p class="info">
			All packaging unit type needs to have glossary entities for the configured locales
		</p>
        <p>
			Infrastructural record's glossary keys:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/data/import/glossary.csv
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP">packaging_unit_type.item.name,Item,en_US
packaging_unit_type.item.name,Stück,de_DE</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Demo data glossary keys:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/data/import/glossary.csv
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">packaging_unit_type.ring_500.name,"Ring (500m)",en_US
packaging_unit_type.ring_500.name,"Ring (500m)",de_DE
packaging_unit_type.box.name,Box,en_US
packaging_unit_type.box.name,Box,de_DE
packaging_unit_type.palette.name,Palette,en_US
packaging_unit_type.palette.name,Palette,de_DE
packaging_unit_type.giftbox.name,Giftbox,en_US
packaging_unit_type.giftbox.name,Geschenkbox,de_DE
packaging_unit_type.valentines_special.name,"Valentine's special",en_US
packaging_unit_type.valentines_special.name,Valentinstag Geschenkbox,de_DE
packaging_unit_type.pack_20.name,Pack 20,en_US
packaging_unit_type.pack_20.name,Pack 20,de_DE
packaging_unit_type.pack_500.name,Pack 500,en_US
packaging_unit_type.pack_500.name,Pack 500,de_DE
packaging_unit_type.pack_100.name,Pack 100,en_US
packaging_unit_type.pack_100.name,Pack 100,de_DE
packaging_unit_type.pack_mixed.name,Mixed Screws boxes,en_US
packaging_unit_type.pack_mixed.name,Gemischte Schraubenkästen,de_D</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP">console data:import glossary</code></pre>
        <p class="tip">
			Make sure that  the configured data in the database has been added to the spy_glossary table.
		</p>
        <h3>5) Configure Export to Redis</h3>
        <p>
			This step will publish tables on change (create, edit, delete) to spy_product_abstract_packaging_storage and synchronise the data to Storage.
		</p>
        <h4>Setup Event Listeners</h4>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitStorageEventSubscriber</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Registers listeners that are responsible for publishing product abstract packaging unit storage entity changes when a related entity change event occurs.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnitStorage\Communication\Plugin\Event\Subscriber</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Event/EventDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Event;
 
use Spryker\Zed\Event\EventDependencyProvider as SprykerEventDependencyProvider;
use Spryker\Zed\ProductPackagingUnitStorage\Communication\Plugin\Event\Subscriber\ProductPackagingUnitStorageEventSubscriber;
 
class EventDependencyProvider extends SprykerEventDependencyProvider
{
	public function getEventSubscriberCollection()
	{
		$eventSubscriberCollection = parent::getEventSubscriberCollection();
		$eventSubscriberCollection-&gt;add(new ProductPackagingUnitStorageEventSubscriber());
	
		return $eventSubscriberCollection;
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h4>Setup Re-Generate and Re-Sync Features</h4>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitSynchronizationDataPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Allows synchronizing the whole storage table content into Storage.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnitStorage\Communication\Plugin\Synchronization</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Synchronization/SynchronizationDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Synchronization;
 
use Spryker\Zed\ProductPackagingUnitStorage\Communication\Plugin\Synchronization\ProductPackagingUnitSynchronizationDataPlugin;
use Spryker\Zed\Synchronization\SynchronizationDependencyProvider as SprykerSynchronizationDependencyProvider;
 
class SynchronizationDependencyProvider extends SprykerSynchronizationDependencyProvider
{
	/**
	 * @return \Spryker\Zed\SynchronizationExtension\Dependency\Plugin\SynchronizationDataPluginInterface[]
	 */
	protected function getSynchronizationDataPlugins(): array
	{
		return [
			new ProductPackagingUnitSynchronizationDataPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h3>6)  Import Data</h3>
        <h4>Add Infrastructural Data</h4>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitTypeInstallerPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Installs the configured infrastructural packaging unit types.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Installer</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Installer/InstallerDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">
	&lt;?php
 
	namespace Pyz\Zed\Installer;
 
	use Spryker\Zed\Installer\InstallerDependencyProvider as SprykerInstallerDependencyProvider;
	use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Installer\ProductPackagingUnitTypeInstallerPlugin;
 
	class InstallerDependencyProvider extends SprykerInstallerDependencyProvider
	{
		/**
		* @return \Spryker\Zed\Installer\Dependency\Plugin\InstallerPluginInterface[]
		*/
		public function getInstallerPlugins()
		{
			return [
				new ProductPackagingUnitTypeInstallerPlugin(),
			];
		}
	}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to execute registered installer plugins and install infrastructural data:
		</p><pre><code class="language-PHP">console setup:init-db</code></pre>
        <p class="tip">
			Make sure that  the configured infrastructural packaging unit types of the database are added to the <var>spy_product_packaging_unit_type</var> table.
		</p>
        <h4>Import Product Packaging Unit Types</h4>
        <p>
			Prepare your data according to your requirements using our demo data:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>vendor/spryker/spryker/Bundles/ProductPackagingUnitDataImport/data/import/product_packaging_unit_type.csv
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-xml line-numbers">name
packaging_unit_type.ring_500.name
packaging_unit_type.box.name
packaging_unit_type.palette.name
packaging_unit_type.giftbox.name
packaging_unit_type.valentines_special.name
packaging_unit_type.pack_mixed.name
packaging_unit_type.pack_20.name
packaging_unit_type.pack_100.name
packaging_unit_type.pack_500.name</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">name</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>packaging_unit_type.ring_500.name</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">Glossary key that will be used for display. Each name needs a glossary key definition for all configured locales.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitTypeDataImportPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Imports packaging unit type data into the database.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnitDataImport\Communication\Plugin\DataImport</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\DataImport;
 
use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
use Spryker\Zed\ProductPackagingUnitDataImport\Communication\Plugin\DataImport\ProductPackagingUnitTypeDataImportPlugin;
 
class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
{
	protected function getDataImporterPlugins(): array
	{
		return [
			new ProductPackagingUnitTypeDataImportPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP">console data:import product-packaging-unit-type</code></pre>
        <p>
			Make sure that in the database the configured data has been added to the <var>spy_product_packaging_unit_type</var> table.
		</p>
        <h4>Import Product Packaging Units</h4>
        <p>
			Prepare your data according to your requirements using our demo data:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>vendor/spryker/spryker/Bundles/ProductPackagingUnitDataImport/data/import/product_packaging_unit.csv
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-xml line-numbers">concrete_sku,is_lead_product,has_lead_product,packaging_unit_type_name,default_amount,is_variable,amount_min,amount_max,amount_interval
218_123,1,,packaging_unit_type.item.name,,,,,
217_123,1,,packaging_unit_type.item.name,,,,,
218_1233,0,0,packaging_unit_type.pack_mixed.name,5,1,3,5,2
218_1234,0,1,packaging_unit_type.box.name,100,1,100,1000,10
218_1230,0,1,packaging_unit_type.pack_20.name,20,0,0,0,0
218_1231,0,1,packaging_unit_type.pack_100.name,100,0,0,0,0
218_1232,0,1,packaging_unit_type.pack_500.name,500,0,0,0,0
217_1231,0,0,packaging_unit_type.ring_500.name,1,0,,,
215_123,1,,packaging_unit_type.item.name,,,,,
215_124,0,0,packaging_unit_type.ring_500.name,1,0,,,
216_123,1,,packaging_unit_type.item.name,,,,,</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Column</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Is obligatory?</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data type</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Data example</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Data explanation</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>concrete_sku</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">218_123</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">Glossary key that will be used for display. Each name needs glossary key definition for all configured locales.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>is_lead_product</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">bool integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">1</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">
                            <ul>
                                <li>Decides if the current <var>concrete_sku</var> is the lead concrete product of the product abstract.</li>
                                <li>Important: Exactly 1 concrete product has to be a lead product in a packaging unit-based product abstract.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>has_lead_product</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">bool integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">0</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">
                            <ul>
                                <li>Relevant for non-lead product concretes only.</li>
                                <li>Decides if the current product concrete has "amount" options. (The amount represents the lead product.)</li>
                                <li>Default value is 0 when not provided.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>packaging_unit_type_name</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">mandatory</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">string</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>packaging_unit_type.ring_500.name</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">Type name of the current concrete product.</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>default_amount</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">positive integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">5</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">
                            <ul>
                                <li>Defines how many lead products should be sold together with each quantity of the current product concrete.</li>
                                <li>Effective only if the current concrete product <var>has_lead_product = 1</var>.</li>
                                <li>Default value is 1 when not provided.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>is_variable</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">bool integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">1</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">
                            <ul>
                                <li>Allows customers to override the <var>default_amount</var> and decide how many lead products will be ordered for each quantity of this product concrete.</li>
                                <li>Effective only if current product concrete <var>has_lead_product = 1</var>.</li>
                                <li>Default value is 0 when not provided.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>amount_min</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">positive integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">3</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">
                            <ul>
                                <li>Restricts a customer to buy at least this amount of lead products.</li>
                                <li>Effective only if <var>is_variable = 1</var>.</li>
                                <li>Default value is 1 when not provided.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>amount_max</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">positive integer</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">5</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">
                            <ul>
                                <li>Restricts a customer not to not buy more than this value.</li>
                                <li>Effective only if <var>is_variable = 1</var>.</li>
                                <li>Default value remains empty (unlimited) when not provided.</li>
                            </ul>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>amount_interval</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">optional</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">positive integer</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">2</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">
                            <ul>
                                <li>Restricts customers to buy an amount that fits into the interval beginning with <var>amount_min</var>.</li>
                                <li>Effective only if <var>is_variable = 1</var>.</li>
                                <li>Default value is <var>amount_min</var> when not provided.</li>
                            </ul>
                            <p class="info">Min = 3; Max = 10; Interval = 2
									<br />Choosable: 3, 5, 7, 9
								</p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
			Register the following plugin to enable data import:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitDataImportPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Imports packaging unit type data into the database.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                            <ul>
                                <li>Requires related product concretes and product abstract to be present in the database already.</li>
                                <li>Requires related packaging unit types to be present in the database already.</li>
                            </ul>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnitDataImport\Communication\Plugin\DataImport</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>src/Pyz/Zed/DataImport/DataImportDependencyProvider.php
        </p><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\DataImport;
 
use Spryker\Zed\DataImport\DataImportDependencyProvider as SprykerDataImportDependencyProvider;
use Spryker\Zed\ProductPackagingUnitDataImport\Communication\Plugin\DataImport\ProductPackagingUnitDataImportPlugin;
 
class DataImportDependencyProvider extends SprykerDataImportDependencyProvider
{
	protected function getDataImporterPlugins(): array
	{
		return [
			new ProductPackagingUnitDataImportPlugin(),
		];
	}
}</code></pre>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-PHP line-numbers">console data:import product-packaging-unit</code></pre>
        <p class="tip">
			Make sure that the configured data in the database has been added to the <var>spy_product_packaging_unit</var>, <var>spy_product_packaging_unit_amount</var>, and <var>spy_product_packaging_lead_product</var> tables.
		</p>
        <h3>7) Set up behavior</h3>
        <h4>Setup Checkout Workflow</h4>
        <p>
			Enable the following behaviors by registering the plugins:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Plugin</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Specification</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Prerequisites</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>AmountAvailabilityCartPreCheckPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Validates if the given amount is available according to stock configuration during the cart change.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount field to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>AmountGroupKeyItemExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expands a group key with the amount and its sales unit to granulate the item grouping in the cart for packaging unit items.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the amount and <var>amountSalesUnit</var> fields to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>AmountRestrictionCartPreCheckPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Validates the amount restrictions when Item has restrictions.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount and <var>amountSalesUnit</var> fields to be set in <var>ItemTransfer</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>AmountSalesUnitItemExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Sets the amountSalesUnit field for <var>ItemTransfers</var> with packaging units. </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the amount and <var>amountSalesUnit.IdProductMeasurementSalesUnit</var> to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>AmountSalesUnitValuePostSavePlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Sets normalized amount sales unit value field.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount and <var>amountSalesUnit</var> fields to be set in <var>ItemTransfer</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>CustomAmountPriceItemExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Updates unit prices for variable amounted packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the amount and <var>productPackagingUnit</var> fields to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnitCartAddItemStrategyPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Merges quantity and amount field changes into the cart for <var>ItemTransfers</var> with packaging units on the cart add action.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount field to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitCartRemoveItemStrategyPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Merges the quantity and amount field changes into the cart for <var>ItemTransfers</var> with packaging units on the cart removal action.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the amount field to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnitItemExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Sets the amountLeadProduct and productPackagingUnit fields in <var>ItemTransfer</var>.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount field to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>AmountAvailabilityCheckoutPreConditionPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Validates if the given amount is available according to stock configuration during checkout.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the amount and <var>amountLeadProduct</var> fields to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Checkout</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>ProductPackagingUnitCartAddItemStrategyPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Merges the quantity and amount field changes into the cart for ItemTransfers with packaging units on the persistent cart add action.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the amount field to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\PersistentCart</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>LeadProductReservationHandlerPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Updates availability and reservation of lead product for a given product packaging unit for reservation handler.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Reservation</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>AmountLeadProductHydrateOrderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Hydrates the leadProduct field for Order read.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the items, amount and <var>amountSku</var> fields to be set in Order.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Sales</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>AmountSalesUnitHydrateOrderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Hydrates the amountSalesUnit field for Order read.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects the items field to be set in Order.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Sales</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>AmountSalesUnitOrderItemExpanderPreSavePlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Sets the amount measurement related fields in the Order item for saving.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Expects the <var>amountSalesUnit</var> field to be set in ItemTransfers with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\SalesExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitOrderItemExpanderPreSavePlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Sets the amount and <var>amountSku</var> fields in the Order item for saving.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects <var>amountLeadProduct</var> to be set in <var>ItemTransfers</var> with packaging units.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\SalesExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>LeadProductStockUpdateHandlerPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Updates availability and reservation of lead product for a given product packaging unit for stock update handler.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">None</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows"><var>Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Stock</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>ProductPackagingUnitAmountCartChangeRequestExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Sets the amount and <var>amountSalesUnit.IdProductMeasurementSalesUnit</var> fields in ItemTransfers with packaging units for cart change.</td>
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Expects a request to contain the to-be-used information.</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows"><var>Spryker\Client\ProductPackagingUnit\Plugin\CartExtension</var>
                        </td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitAmountPersistentCartChangeExpanderPlugin</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Sets the amount and <var>amountSalesUnit.IdProductMeasurementSalesUnit</var> fields in ItemTransfers with packaging units for persistent cart change.</td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Expects a request to contain the to-be-used information.</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>Spryker\Client\ProductPackagingUnit\Plugin\PersistentCartExtension</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Client/Cart/CartDependencyProvider.php
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Cart;
 
use Spryker\Zed\Cart\CartDependencyProvider as SprykerCartDependencyProvider;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\AmountAvailabilityCartPreCheckPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\AmountGroupKeyItemExpanderPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\AmountRestrictionCartPreCheckPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\AmountSalesUnitItemExpanderPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\AmountSalesUnitValuePostSavePlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\CustomAmountPriceItemExpanderPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\ProductPackagingUnitCartAddItemStrategyPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\ProductPackagingUnitCartRemoveItemStrategyPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Cart\ProductPackagingUnitItemExpanderPlugin;
use Spryker\Zed\Kernel\Container;
 
class CartDependencyProvider extends SprykerCartDependencyProvider
{
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Cart\Dependency\ItemExpanderPluginInterface[]
	 */
	protected function getExpanderPlugins(Container $container)
	{
		return [
			new AmountGroupKeyItemExpanderPlugin(),
			new AmountSalesUnitItemExpanderPlugin(),
			new ProductPackagingUnitItemExpanderPlugin(),
			new CustomAmountPriceItemExpanderPlugin(),
		];
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\CartExtension\Dependency\Plugin\CartOperationStrategyPluginInterface[]
	 */
	protected function getCartRemoveItemStrategyPlugins(Container $container): array
	{
		return [
			new ProductPackagingUnitCartRemoveItemStrategyPlugin(),
		];
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\CartExtension\Dependency\Plugin\CartPreCheckPluginInterface[]
	 */
	protected function getCartPreCheckPlugins(Container $container)
	{
		return [
			new AmountAvailabilityCartPreCheckPlugin(),
			new AmountRestrictionCartPreCheckPlugin(),
		];
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Cart\Dependency\PostSavePluginInterface[]
	 */
	 protected function getPostSavePlugins(Container $container)
	 {
		return [
			new AmountSalesUnitValuePostSavePlugin(),
		];
	}
 
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\CartExtension\Dependency\Plugin\CartOperationStrategyPluginInterface[]
	 */
	protected function getCartAddItemStrategyPlugins(Container $container): array
	{
		return [
			new ProductPackagingUnitCartAddItemStrategyPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Checkout/CheckoutDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Checkout;
 
use Spryker\Zed\Checkout\CheckoutDependencyProvider as SprykerCheckoutDependencyProvider;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Checkout\AmountAvailabilityCheckoutPreConditionPlugin;
use Spryker\Zed\Kernel\Container;
 
class CheckoutDependencyProvider extends SprykerCheckoutDependencyProvider
{
	/**
	 * @param \Spryker\Zed\Kernel\Container $container ’
	 *
	 * @return \Spryker\Zed\Checkout\Dependency\Plugin\CheckoutPreConditionInterface[]
	 */
	protected function getCheckoutPreConditions(Container $container)
	{
		return [
			new AmountAvailabilityCheckoutPreConditionPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/PersistentCart/PersistentCartDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\PersistentCart;
 
use Spryker\Zed\Kernel\Container;
use Spryker\Zed\PersistentCart\PersistentCartDependencyProvider as SprykerPersistentCartDependencyProvider;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\PersistentCart\ProductPackagingUnitCartAddItemStrategyPlugin;
 
class PersistentCartDependencyProvider extends SprykerPersistentCartDependencyProvider
{
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\CartExtension\Dependency\Plugin\CartOperationStrategyPluginInterface[]
	 */
	protected function getCartAddItemStrategyPlugins(Container $container): array
	{
		return [
			new ProductPackagingUnitCartAddItemStrategyPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Oms/OmsDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Oms;
 
use Spryker\Zed\Kernel\Container;
use Spryker\Zed\Oms\OmsDependencyProvider as SprykerOmsDependencyProvider;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Reservation\LeadProductReservationHandlerPlugin;
 
class OmsDependencyProvider extends SprykerOmsDependencyProvider
{
	/**
	 * @param \Spryker\Zed\Kernel\Container $container
	 *
	 * @return \Spryker\Zed\Oms\Dependency\Plugin\ReservationHandlerPluginInterface[]
	 */
	 protected function getReservationHandlerPlugins(Container $container)
	{
		return [
			new LeadProductReservationHandlerPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Sales/SalesDependencyProvider.php
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Sales;
 
use Spryker\Zed\Sales\SalesDependencyProvider as SprykerSalesDependencyProvider;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Sales\AmountLeadProductHydrateOrderPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Sales\AmountSalesUnitHydrateOrderPlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\SalesExtension\AmountSalesUnitOrderItemExpanderPreSavePlugin;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\SalesExtension\ProductPackagingUnitOrderItemExpanderPreSavePlugin;
 
class SalesDependencyProvider extends SprykerSalesDependencyProvider
{
	/**
	* @return \Spryker\Zed\Sales\Dependency\Plugin\HydrateOrderPluginInterface[]
	*/
	protected function getOrderHydrationPlugins()
	{
		return [
			new AmountLeadProductHydrateOrderPlugin(),
			new AmountSalesUnitHydrateOrderPlugin(),
		];
	}
 
	/**
	 * @return \Spryker\Zed\SalesExtension\Dependency\Plugin\OrderItemExpanderPreSavePluginInterface[]
	 */
	protected function getOrderItemExpanderPreSavePlugins()
	{
		return [
			new ProductPackagingUnitOrderItemExpanderPreSavePlugin(),
			new AmountSalesUnitOrderItemExpanderPreSavePlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Zed/Stock/StockDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Zed\Stock;
 
use Spryker\Zed\Kernel\Container;
use Spryker\Zed\ProductPackagingUnit\Communication\Plugin\Stock\LeadProductStockUpdateHandlerPlugin;
use Spryker\Zed\Stock\StockDependencyProvider as SprykerStockDependencyProvider;
 
class StockDependencyProvider extends SprykerStockDependencyProvider
{
	/**
	* @param \Spryker\Zed\Kernel\Container $container
	*
	* @return \Spryker\Zed\Stock\Dependency\Plugin\StockUpdateHandlerPluginInterface[]
	*/
	protected function getStockUpdateHandlerPlugins(Container $container)
	{
		return [
			new LeadProductStockUpdateHandlerPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Client/Cart/CartDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Client\Cart;
 
use Spryker\Client\Cart\CartDependencyProvider as SprykerCartDependencyProvider;
use Spryker\Client\ProductPackagingUnit\Plugin\CartExtension\ProductPackagingUnitAmountCartChangeRequestExpanderPlugin;
 
class CartDependencyProvider extends SprykerCartDependencyProvider
{
	/**
	* @return \Spryker\Client\CartExtension\Dependency\Plugin\CartChangeRequestExpanderPluginInterface[]
	*/
	protected function getAddItemsRequestExpanderPlugins()
	{
		return [
			new ProductPackagingUnitAmountCartChangeRequestExpanderPlugin(),
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Client/PersistentCart/PersistentCartDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Client\PersistentCart;
 
use Spryker\Client\PersistentCart\PersistentCartDependencyProvider as SprykerPersistentCartDependencyProvider;
use Spryker\Client\ProductPackagingUnit\Plugin\PersistentCartExtension\ProductPackagingUnitAmountPersistentCartChangeExpanderPlugin;
 
class PersistentCartDependencyProvider extends SprykerPersistentCartDependencyProvider
{
	/**
	* @return \Spryker\Client\PersistentCartExtension\Dependency\Plugin\PersistentCartChangeExpanderPluginInterface[]
	*/
	protected function getChangeRequestExtendPlugins(): array
	{
		return [
			new ProductPackagingUnitAmountPersistentCartChangeExpanderPlugin(), #ProductPackagingUnit
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="tip">
			Add an item with packaging units to the cart.
			<ul><li>Check if the amount, <var>amountSalesUnit</var>, <var>amountLeadProduct</var> and <var>productPackagingUnit</var> fields in <var>ItemTransfer</var> get fully populated.</li><li>Check if amount restriction works as expected.</li><li>Check if availability is validated respectfully according to your lead product's and packaging unit's configuration.</li><li>Check if item grouping in the cart works as expected.</li><li>Check if variable amount changes affect unit prices in <var>ItemTransfer</var>.</li><li>Check if quantity and amount are merged correctly when a group key matches.</li></ul></div>
        <div class="tip">
			Go through the checkout workflow and make an order.
			<ul><li>Check if the stock is modified respectfully according to your lead product's and packaging unit's configuration.</li><li>Check if the following fields in the <var>spy_sales_order_item</var> table are saved:</li><ul><li><var>amount</var></li><li><var>amount_sku</var></li><li><var>amount_measurement_unit_name</var></li><li><var>amount_measurement_unit_code</var></li><li><var>amount_measurement_unit_precision</var></li><li><var>amount_measurement_unit_conversion</var></li><li><var>amount_base_measurement_unit_name</var></li></ul></ul></div>
        <div class="tip">
			Go to the Zed UI Sales overview and check the order.
			<ul><li>Verify if the correct sales unit is displayed.</li><li>Verify if the correct amount is displayed per sales order item.</li></ul></div>
        <h2>Install Feature Frontend</h2>
        <h3>Prerequisites</h3>
        <p>
			To start feature integration, overview and install the necessary features:
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Name</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Version</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Spryker Core E-commerce</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                        <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Measurement Units</td>
                        <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">2018.11.0</td>
                    </tr>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Non-splittable Products</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">2018.11.0</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h3>1) Install the Required Modules Using Composer</h3>
        <p>
			Run the following command(s) to install the required modules:
		</p><pre><code class="language-PHP">composer require spryker-feature/packaging-units: "^2018.11.0" --update-with-dependencies</code></pre>
        <div class="tip">
			Make sure that the following modules have been installed:
			<div class="table-wrap"><table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0"><thead><tr class="TableStyle-PatternedRows2-Head-Header1"><th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Module</th><th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Expected directory</th></tr></thead><tbody><tr class="TableStyle-PatternedRows2-Body-LightRows"><td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitWidget</var></td><td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>vendor/spryker-shop/product-packaging-unit-widget</var></td></tr></tbody></table></div></div>
        <h3>2) Add Translations</h3>
        <p>
			Append glossary according to your configuration:
		</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/data/import/glossary.csv
            </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-xml line-numbers">packaging-units.recommendation.amount-min-violation,Minimum amount requirements for product are not fulfilled,en_US
packaging-units.recommendation.amount-min-violation,Mindestmengenanforderungen für das Produkt sind nicht erfüllt,de_DE
packaging-units.recommendation.amount-max-violation,Maximum amount requirements for product are not fulfilled,en_US
packaging-units.recommendation.amount-max-violation,Maximale Mengenanforderungen für das Produkt sind nicht erfüllt,de_DE
packaging-units.recommendation.amount-interval-violation,Amount interval requirements for product are not fulfilled,en_US
packaging-units.recommendation.amount-interval-violation,Mengenintervallanforderungen für das Produkt sind nicht erfüllt,de_DE
packaging_units.recommendation.suggestion,Would you like to add:,en_US
packaging_units.recommendation.suggestion,Möchten Sie hinzufügen:,de_DE
packaging_units.recommendation.between-units-info,The amount you have chosen is in between 2 base units,en_US
packaging_units.recommendation.between-units-info,Ihre gewählte Anzahl liegt zwischen 2 basis Einheiten,de_DE
packaging_units.cart.quantity,Quantity,en_US
packaging_units.cart.quantity,Anzahl,de_DE
packaging_units.cart.amount,Amount,en_US
packaging_units.cart.amount,Betrag,de_DE
packaging_units.cart.item,Items,en_US
packaging_units.cart.item,Artikel,de_DE
page.detail.add-to-cart,In den Warenkorb,de_DE
page.detail.add-to-cart,Add to Cart,en_US
product.measurement.sales_unit,Sales Unit,en_US
product.measurement.sales_unit,Maßeinheit,de_DE
cart.item_quantity,Anzahl,de_DE
cart.item_quantity,Quantity,en_US
measurement_units.new-price,New price,en_US
measurement_units.new-price,Neuer Preis,de_DE
measurement_units.recommendation.between-units-info,The quantity you have chosen is in between 2 base units,en_US
measurement_units.recommendation.between-units-info,Ihre gewählte Anzahl liegt zwischen 2 basis Einheiten,de_DE
measurement_units.recommendation.min-violation,Minimum quantity requirements for product are not fulfilled,en_US
measurement_units.recommendation.min-violation,Minimale Mengenanforderungen für das Produkt sind nicht erfüllt,de_DE
measurement_units.recommendation.max-violation,Maximum quantity requirements for product are not fulfilled,en_US
measurement_units.recommendation.max-violation,Maximale Mengenanforderungen für das Produkt sind nicht erfüllt,de_DE
measurement_units.recommendation.suggestion,Would you like to add,en_US
measurement_units.recommendation.suggestion,Was würden Sie gerne hinzufügen? ,de_DE</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>
			Run the following console command to import data:
		</p><pre><code class="language-bash">console data:import glossary</code></pre>
        <p>
			Make sure that the configured data in the database has been added to the <var>spy_glossary</var> table.
		</p>
        <h3>3) Set up Widgets</h3>
        <p>
			Enable the following global widget(s):
		</p>
        <div class="table-wrap">
            <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                <thead>
                    <tr class="TableStyle-PatternedRows2-Head-Header1">
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Widget</th>
                        <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Description</th>
                        <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Namespace</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-PatternedRows2-Body-LightRows">
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>ProductPackagingUnitWidget</var>
                        </td>
                        <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">Displays product packaging options for quantity and amount.</td>
                        <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>SprykerShop\Yves\ProductPackagingUnitWidget\Widget</var>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Yves/ShopApplication/ShopApplicationDependencyProvider.php
        </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-PHP line-numbers">&lt;?php
 
namespace Pyz\Yves\ShopApplication;
 
use SprykerShop\Yves\ProductPackagingUnitWidget\Widget\ProductPackagingUnitWidget;
use SprykerShop\Yves\ShopApplication\ShopApplicationDependencyProvider as SprykerShopApplicationDependencyProvider;
 
class ShopApplicationDependencyProvider extends SprykerShopApplicationDependencyProvider
{
	/**
	* @return string[]
	*/
	protected function getGlobalWidgets(): array
	{
		return [
			ProductPackagingUnitWidget::class,
		];
	}
}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <div class="info">
            <p class="info"><var>ProductPackagingUnitWidget</var> uses Javascript for some functionality:</p>
            <div class="table-wrap">
                <table style="mc-table-style: url('../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                    <thead>
                        <tr class="TableStyle-PatternedRows2-Head-Header1">
                            <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Functionality</th>
                            <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Path</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-PatternedRows2-Body-LightRows">
                            <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">
                                <ul>
                                    <li>Controls base unit =&gt; sales unit calculations</li>
                                    <li>Applies product quantity and amount restrictions on sales unit level</li>
                                    <li>Offers recommendation when invalid quantity or amount is selected</li>
                                    <li>Maintains stock-based quantity, amount and sales unit information for posting</li>
                                </ul>
                            </td>
                            <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows"><var>vendor/spryker-shop/product-packaging-unit-widget/src/SprykerShop/Yves/ProductPackagingUnitWidget/Theme/default/components/molecules/packaging-unit-quantity-selector/packaging-unit-quantity-selector.ts</var>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <p>
			Run the following command to enable Javascript and CSS changes:
		</p><pre><code class="language-bash">console frontend:yves:build</code></pre>
        <div class="tip">
            <ul>
                <li>Check if the amount field appears on the Product Detail page for items with packaging units.</li>
                <li>Check if the amount field appears correctly with measurement unit information on the Cart page.</li>
                <li>Check if the amount field appears correctly with measurement unit information on the Checkout Summary page.</li>
                <li>Check if the amount field appears correctly with measurement unit information on the previous Orders page.</li>
            </ul>
        </div>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <p><a href="https://documentation.spryker.com/capabilities/packaging___measurement_units/packaging_units/packaging-units-overview.htm">Packaging Units Feature Overview</a>
        </p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p><i>Last
review date: Feb. 21st, 2019</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i>by Karoly Gerner, Oksana Karasyovaj </i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>