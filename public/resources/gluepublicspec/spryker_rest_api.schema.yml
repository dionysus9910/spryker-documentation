openapi: 3.0.0
info:
    version: 1.0.0
    title: 'Spryker API'
    license:
        name: MIT
servers:
    -
        url: 'http://glue.de.suite.local'
paths:
    /access-tokens:
        post:
            summary: 'Creates access token for user.'
            tags:
                - access-tokens
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestAccessTokensRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestTokenResponseResponse'
                401:
                    description: 'Failed to authenticate user.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /refresh-tokens:
        post:
            summary: 'Refreshes customer''s auth token.'
            tags:
                - refresh-tokens
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestRefreshTokensRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestTokenResponseResponse'
                401:
                    description: 'Failed to authenticate user.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /catalog-search:
        get:
            summary: 'Catalog search.'
            tags:
                - catalog-search
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
                -
                    name: q
                    in: query
                    required: true
                    description: 'Search query string.'
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCatalogSearchCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/stores/{storeId}':
        get:
            summary: 'Retrieves current store data.'
            tags:
                - stores
            parameters:
                -
                    name: storeId
                    in: path
                    required: true
                    description: 'Id of store.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoresRestResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /stores:
        get:
            summary: 'Retrieves current store data.'
            tags:
                - stores
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoresRestCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /catalog-search-suggestions:
        get:
            summary: 'Catalog search suggestions.'
            tags:
                - catalog-search-suggestions
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
                -
                    name: q
                    in: query
                    required: true
                    description: 'Search query string.'
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCatalogSearchSuggestionsCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}/concrete-product-availabilities':
        get:
            summary: 'Retrieves concrete product availabilities.'
            tags:
                - concrete-product-availabilities
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestConcreteProductAvailabilityCollectionResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product availability not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}/abstract-product-availabilities':
        get:
            summary: 'Retrieves abstract product availabilities.'
            tags:
                - abstract-product-availabilities
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestAbstractProductAvailabilityCollectionResponse'
                400:
                    description: 'Abstract product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product availability not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /category-trees:
        get:
            summary: 'Retrieves category tree for specified locale.'
            tags:
                - category-trees
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCategoryTreesCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/category-nodes/{categoryNodeId}':
        get:
            summary: 'Retrieves a category node by id.'
            tags:
                - category-nodes
            parameters:
                -
                    name: categoryNodeId
                    in: path
                    required: true
                    description: 'Id of category node.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCategoryNodesResponse'
                400:
                    description: 'Category node id has not been specified or invalid.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Category node not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/customers/{customerId}':
        get:
            summary: 'Retrieves customer data.'
            tags:
                - customers
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCustomersResponse'
                400:
                    description: 'Customer id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        patch:
            summary: 'Updates customer data.'
            tags:
                - customers
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCustomersRequest'
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCustomersResponse'
                400:
                    description: 'Failed to save customer.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Anonymizes customers.'
            tags:
                - customers
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Customer id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /customers:
        post:
            summary: 'Creates customer.'
            tags:
                - customers
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCustomersRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCustomersResponse'
                400:
                    description: 'Terms and Conditions was not accepted.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Customer with this email already exists.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /customer-forgotten-password:
        post:
            summary: 'Create customer forgotten password.'
            tags:
                - customer-forgotten-password
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCustomerForgottenPasswordRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCustomerForgottenPasswordResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/customer-restore-password/{customerRestorePasswordId}':
        patch:
            summary: 'Update customer restore password.'
            tags:
                - customer-restore-password
            parameters:
                -
                    name: customerRestorePasswordId
                    in: path
                    required: true
                    description: 'Id of customer restore password.'
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCustomerRestorePasswordRequest'
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCustomerRestorePasswordResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}':
        get:
            summary: 'Retrieves product abstract by id.'
            tags:
                - abstract-products
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbstractProductsRestResponse'
                400:
                    description: 'Abstract product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}':
        get:
            summary: 'Retrieves product concrete by id.'
            tags:
                - concrete-products
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConcreteProductsRestResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}/abstract-product-prices':
        get:
            summary: 'Retrieves abstract product prices.'
            tags:
                - abstract-product-prices
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductPricesCollectionResponse'
                400:
                    description: 'Abstract product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product prices not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}/concrete-product-prices':
        get:
            summary: 'Retrieves concrete product prices.'
            tags:
                - concrete-product-prices
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductPricesCollectionResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product prices not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/carts/{cartId}':
        get:
            summary: 'Retrieves a cart by id.'
            tags:
                - carts
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                404:
                    description: 'Cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        patch:
            summary: 'Updates a cart.'
            tags:
                - carts
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart with given uuid not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Deletes cart by id.'
            tags:
                - carts
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Cart could not be deleted.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /carts:
        get:
            summary: 'Retrieves list of all customer''s carts.'
            tags:
                - carts
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        post:
            summary: 'Creates a cart.'
            tags:
                - carts
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Customer already has a cart.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/carts/{cartId}/items':
        post:
            summary: 'Adds an item to the cart.'
            tags:
                - items
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartItemsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartItemsResponse'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Errors appeared during item creation.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/carts/{cartId}/items/{itemId}':
        patch:
            summary: 'Updates cart item quantity.'
            tags:
                - items
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: itemId
                    in: path
                    required: true
                    description: 'Id of item.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartItemsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartItemsResponse'
                400:
                    description: 'Cart id or item id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart or item not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Errors appeared during item update.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Removes item from the cart.'
            tags:
                - items
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: itemId
                    in: path
                    required: true
                    description: 'Id of item.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Cart id or item id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized cart action.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart or cart item not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Cart item could not be deleted.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}/abstract-product-image-sets':
        get:
            summary: 'Retrieves abstract product image sets.'
            tags:
                - abstract-product-image-sets
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductImageSetsCollectionResponse'
                400:
                    description: 'Abstract product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product image sets not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}/concrete-product-image-sets':
        get:
            summary: 'Retrieves concrete product image sets.'
            tags:
                - concrete-product-image-sets
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductImageSetsCollectionResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product image sets not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/orders/{orderId}':
        get:
            summary: 'Retrieves order by id.'
            tags:
                - orders
            parameters:
                -
                    name: orderId
                    in: path
                    required: true
                    description: 'Id of order.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestOrderDetailsResponse'
                404:
                    description: 'Order not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /orders:
        get:
            summary: 'Retrieves list of orders.'
            tags:
                - orders
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestOrdersCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/wishlists/{wishlistId}':
        get:
            summary: 'Retrieves wishlist data by id.'
            tags:
                - wishlists
            parameters:
                -
                    name: wishlistId
                    in: path
                    required: true
                    description: 'Id of wishlist.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestWishlistsResponse'
                404:
                    description: 'Wishlist not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        patch:
            summary: 'Deletes customer wishlist.'
            tags:
                - wishlists
            parameters:
                -
                    name: wishlistId
                    in: path
                    required: true
                    description: 'Id of wishlist.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestWishlistsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestWishlistsResponse'
                400:
                    description: 'A wishlist with the same name already exists.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Wishlist not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Removes customer wishlist.'
            tags:
                - wishlists
            parameters:
                -
                    name: wishlistId
                    in: path
                    required: true
                    description: 'Id of wishlist.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                404:
                    description: 'Wishlist not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /wishlists:
        get:
            summary: 'Retrieves all customer wishlists.'
            tags:
                - wishlists
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestWishlistsCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        post:
            summary: 'Creates wishlist.'
            tags:
                - wishlists
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestWishlistsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestWishlistsResponse'
                400:
                    description: 'Wishlist with the same name already exists.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/wishlists/{wishlistId}/wishlist-items':
        post:
            summary: 'Adds an item to the wishlist.'
            tags:
                - wishlist-items
            parameters:
                -
                    name: wishlistId
                    in: path
                    required: true
                    description: 'Id of wishlist.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestWishlistItemsRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestWishlistItemsResponse'
                400:
                    description: 'Can''t add an item.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Wishlist not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/wishlists/{wishlistId}/wishlist-items/{wishlistItemId}':
        delete:
            summary: 'Removes item from the wishlist.'
            tags:
                - wishlist-items
            parameters:
                -
                    name: wishlistId
                    in: path
                    required: true
                    description: 'Id of wishlist.'
                    schema:
                        type: string
                -
                    name: wishlistItemId
                    in: path
                    required: true
                    description: 'Id of wishlist item.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                404:
                    description: 'Wishlist not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Wishlist item not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}/product-tax-sets':
        get:
            summary: 'Retrieves abstract product tax sets.'
            tags:
                - product-tax-sets
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductTaxSetsCollectionResponse'
                400:
                    description: 'Abstract product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product tax sets not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/customer-password/{customerPasswordId}':
        patch:
            summary: 'Updates customer password.'
            tags:
                - customer-password
            parameters:
                -
                    name: customerPasswordId
                    in: path
                    required: true
                    description: 'Id of customer password.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCustomerPasswordRequest'
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Passwords don''t match.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                406:
                    description: 'Invalid password.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/customers/{customerId}/addresses/{addressId}':
        get:
            summary: 'Retrieves customer address by id.'
            tags:
                - addresses
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: addressId
                    in: path
                    required: true
                    description: 'Id of address.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestAddressResponse'
                404:
                    description: 'Address not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        patch:
            summary: 'Updates customer address.'
            tags:
                - addresses
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: addressId
                    in: path
                    required: true
                    description: 'Id of address.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestAddressRequest'
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestAddressResponse'
                400:
                    description: 'Address id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Deletes customer address.'
            tags:
                - addresses
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: addressId
                    in: path
                    required: true
                    description: 'Id of address.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Address id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Address not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/customers/{customerId}/addresses':
        get:
            summary: 'Retrieves list of all customer addresses.'
            tags:
                - addresses
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestAddressCollectionResponse'
                400:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Address not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        post:
            summary: 'Creates customer address.'
            tags:
                - addresses
            parameters:
                -
                    name: customerId
                    in: path
                    required: true
                    description: 'Id of customer.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestAddressRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestAddressResponse'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Customer not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/guest-carts/{guestCartId}':
        get:
            summary: 'Retrieves a guest cart by id.'
            tags:
                - guest-carts
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                404:
                    description: 'Cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        patch:
            summary: 'Updates a guest cart.'
            tags:
                - guest-carts
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartsRequest'
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart with given uuid not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /guest-carts:
        get:
            summary: 'Retrieves list of customer''s guest carts.'
            tags:
                - guest-carts
            parameters:
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/guest-carts/{guestCartId}/guest-cart-items':
        post:
            summary: 'Adds an item to the guest cart.'
            tags:
                - guest-cart-items
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartItemsRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                404:
                    description: 'Cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/guest-carts/{guestCartId}/guest-cart-items/{guestCartItemId}':
        patch:
            summary: 'Updates guest cart item quantity.'
            tags:
                - guest-cart-items
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: guestCartItemId
                    in: path
                    required: true
                    description: 'Id of guest cart item.'
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCartItemsRequest'
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartsResponse'
                400:
                    description: 'Cart id or item id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Item with the given id not found in the cart.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Removes item from guest cart.'
            tags:
                - guest-cart-items
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: guestCartItemId
                    in: path
                    required: true
                    description: 'Id of guest cart item.'
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Cart id or item id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Item with the given id not found in the cart.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Cart item could not be deleted.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/product-labels/{productLabelId}':
        get:
            summary: 'Retrieves abstract product labels by id.'
            tags:
                - product-labels
            parameters:
                -
                    name: productLabelId
                    in: path
                    required: true
                    description: 'Id of product label.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestProductLabelsResponse'
                400:
                    description: 'Product label id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Product label not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /checkout-data:
        post:
            summary: |
                Provides checkout data
                 - available addresses
                 - shipment methods
                 - payment methods
            tags:
                - checkout-data
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: false
                    description: 'Guest customer unique ID'
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCheckoutRequestRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCheckoutDataResponseResponse'
                400:
                    description: 'Bad Response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Unprocessable entity.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /checkout:
        post:
            summary: 'Places order.'
            tags:
                - checkout
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: false
                    description: 'Guest customer unique ID'
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCheckoutRequestRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCheckoutResponseResponse'
                400:
                    description: 'Bad Response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Unprocessable entity.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/company-users/{companyUserId}':
        get:
            summary: 'Retrieves a company user by id.'
            tags:
                - company-users
            parameters:
                -
                    name: companyUserId
                    in: path
                    required: true
                    description: 'Id of company user.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyUserResponse'
                404:
                    description: 'Company user not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /company-users:
        get:
            summary: 'Retrieves list of company users.'
            tags:
                - company-users
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyUserCollectionResponse'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}/concrete-alternative-products':
        get:
            summary: 'Retrieves concrete alternative products of concrete product.'
            tags:
                - concrete-alternative-products
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConcreteProductsRestCollectionResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/concrete-products/{concreteProductId}/abstract-alternative-products':
        get:
            summary: 'Retrieves abstract alternative products of concrete product.'
            tags:
                - abstract-alternative-products
            parameters:
                -
                    name: concreteProductId
                    in: path
                    required: true
                    description: 'Id of concrete product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbstractProductsRestCollectionResponse'
                400:
                    description: 'Concrete product id is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Concrete product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /company-user-access-tokens:
        post:
            summary: 'Creates access token for company user.'
            tags:
                - company-user-access-tokens
            parameters:
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestCompanyUserAccessTokensRequest'
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyUserAccessTokenResponseResponse'
                401:
                    description: 'Failed to authenticate user.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/navigations/{navigationId}':
        get:
            summary: 'Retrieves a navigation by id.'
            tags:
                - navigations
            parameters:
                -
                    name: navigationId
                    in: path
                    required: true
                    description: 'Id of navigation.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestNavigationResponse'
                400:
                    description: 'Navigation id not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Navigation not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/abstract-products/{abstractProductId}/related-products':
        get:
            summary: 'Retrieves list of all related products of abstract product.'
            tags:
                - related-products
            parameters:
                -
                    name: abstractProductId
                    in: path
                    required: true
                    description: 'Id of abstract product.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbstractProductsRestCollectionResponse'
                400:
                    description: 'Abstract product sku is not specified.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Abstract product not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/carts/{cartId}/up-selling-products':
        get:
            summary: 'Retrieves list of all up-selling products for the cart.'
            tags:
                - up-selling-products
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbstractProductsRestCollectionResponse'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart with given id not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/guest-carts/{guestCartId}/up-selling-products':
        get:
            summary: 'Retrieves list of all up-selling products for the guest cart.'
            tags:
                - up-selling-products
            parameters:
                -
                    name: guestCartId
                    in: path
                    required: true
                    description: 'Id of guest cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
                -
                    name: X-Anonymous-Customer-Unique-Id
                    in: header
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbstractProductsRestCollectionResponse'
                400:
                    description: 'Cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart with given id not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/cart-permission-groups/{cartPermissionGroupId}':
        get:
            summary: 'Retrieves cart permission group by id.'
            tags:
                - cart-permission-groups
            parameters:
                -
                    name: cartPermissionGroupId
                    in: path
                    required: true
                    description: 'Id of cart permission group.'
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartPermissionGroupsResponse'
                404:
                    description: 'Cart permission group not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /cart-permission-groups:
        get:
            summary: 'Retrieves collection of cart permission groups.'
            tags:
                - cart-permission-groups
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCartPermissionGroupsCollectionResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /order-payments:
        post:
            summary: 'Updates order payment.'
            tags:
                - order-payments
            requestBody:
                description: 'Expected request body.'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestOrderPaymentsRequest'
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestOrderPaymentsResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/company-business-unit-addresses/{companyBusinessUnitAddressId}':
        get:
            summary: 'Retrieves a company business unit address by id.'
            tags:
                - company-business-unit-addresses
            parameters:
                -
                    name: companyBusinessUnitAddressId
                    in: path
                    required: true
                    description: 'Id of company business unit address.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesResponse'
                400:
                    description: 'Company business unit address id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Company business unit address not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /company-business-unit-addresses:
        get:
            summary: 'Retrieves company business unit addresses collection.'
            tags:
                - company-business-unit-addresses
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesCollectionResponse'
                501:
                    description: 'Not implemented.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/company-roles/{companyRoleId}':
        get:
            summary: 'Retrieves a company role by id.'
            tags:
                - company-roles
            parameters:
                -
                    name: companyRoleId
                    in: path
                    required: true
                    description: 'Id of company role.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyRoleResponse'
                400:
                    description: 'Company role id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Company role not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /company-roles:
        get:
            summary: 'Retrieves company role collection.'
            tags:
                - company-roles
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyRoleCollectionResponse'
                501:
                    description: 'Not implemented.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/companies/{companyId}':
        get:
            summary: 'Retrieves a company by id.'
            tags:
                - companies
            parameters:
                -
                    name: companyId
                    in: path
                    required: true
                    description: 'Id of company.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyResponse'
                400:
                    description: 'Company id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Company not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /companies:
        get:
            summary: 'Retrieves company collection.'
            tags:
                - companies
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyCollectionResponse'
                501:
                    description: 'Not implemented.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/company-business-units/{companyBusinessUnitId}':
        get:
            summary: 'Retrieves a company business unit by id.'
            tags:
                - company-business-units
            parameters:
                -
                    name: companyBusinessUnitId
                    in: path
                    required: true
                    description: 'Id of company business unit.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyBusinessUnitResponse'
                400:
                    description: 'Company business unit id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Company business unit not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    /company-business-units:
        get:
            summary: 'Retrieves company business units collection.'
            tags:
                - company-business-units
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestCompanyBusinessUnitCollectionResponse'
                501:
                    description: 'Not implemented.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/carts/{cartId}/shared-carts':
        post:
            summary: 'Shares a cart.'
            tags:
                - shared-carts
            parameters:
                -
                    name: cartId
                    in: path
                    required: true
                    description: 'Id of cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                201:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestSharedCartsResponse'
                400:
                    description: 'Cart id is missing'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Cart or company user not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                422:
                    description: 'Failed to share a cart.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
    '/shared-carts/{sharedCartId}':
        patch:
            summary: 'Updates permission group for shared cart.'
            tags:
                - shared-carts
            parameters:
                -
                    name: sharedCartId
                    in: path
                    required: true
                    description: 'Id of shared cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestSharedCartsResponse'
                400:
                    description: 'Shared cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Shared cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
        delete:
            summary: 'Deletes cart sharing.'
            tags:
                - shared-carts
            parameters:
                -
                    name: sharedCartId
                    in: path
                    required: true
                    description: 'Id of shared cart.'
                    schema:
                        type: string
                -
                    name: Accept-Language
                    in: header
                    required: false
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            responses:
                204:
                    description: 'Expected response to a valid request.'
                400:
                    description: 'Shared cart id is missing.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                404:
                    description: 'Shared cart not found.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestErrorMessage'
components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
    schemas:
        AbstractProductsRestAttributes:
            properties:
                sku:
                    type: string
                name:
                    type: string
                description:
                    type: string
                attributes:
                    type: array
                    items: {  }
                superAttributesDefinition:
                    type: array
                    items: {  }
                superAttributes:
                    type: array
                    items: {  }
                attributeMap:
                    type: array
                    items: {  }
                metaTitle:
                    type: string
                metaKeywords:
                    type: string
                metaDescription:
                    type: string
                attributeNames:
                    type: array
                    items: {  }
        AbstractProductsRestCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/AbstractProductsRestCollectionResponseData'
        AbstractProductsRestCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/AbstractProductsRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        AbstractProductsRestRelationships:
            properties:
                abstract-product-image-sets:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                abstract-product-availabilities:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                abstract-product-prices:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                category-nodes:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                product-tax-sets:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                product-labels:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        AbstractProductsRestResponse:
            properties:
                data:
                    $ref: '#/components/schemas/AbstractProductsRestResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        AbstractProductsRestResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/AbstractProductsRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/AbstractProductsRestRelationships'
        Address:
            properties:
                idCustomerAddress:
                    type: integer
                uuid:
                    type: string
                isDefaultBilling:
                    type: boolean
                isDefaultShipping:
                    type: boolean
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                company:
                    type: string
                city:
                    type: string
                zipCode:
                    type: string
                state:
                    type: string
                iso2Code:
                    type: string
                customerId:
                    type: string
                fkCustomer:
                    type: integer
                email:
                    type: string
                salutation:
                    type: string
                phone:
                    type: string
                comment:
                    type: string
                isDeleted:
                    type: boolean
                fkCountry:
                    type: integer
                fkRegion:
                    type: integer
                anonymizedAt:
                    type: string
                country:
                    $ref: '#/components/schemas/Country'
                idSalesOrderAddress:
                    type: integer
                region:
                    type: string
                fkMiscCountry:
                    type: integer
                middleName:
                    type: string
                poBox:
                    type: string
                cellPhone:
                    type: string
                description:
                    type: string
                key:
                    type: string
        Addresses:
            properties:
                addresses:
                    items:
                        $ref: '#/components/schemas/Address'
        Company:
            properties:
                idCompany:
                    type: integer
                name:
                    type: string
                uuid:
                    type: string
                key:
                    type: string
                isActive:
                    type: boolean
                status:
                    type: string
                storeRelation:
                    $ref: '#/components/schemas/StoreRelation'
                fkCompanyType:
                    type: integer
                initialUserTransfer:
                    $ref: '#/components/schemas/CompanyUser'
        CompanyBusinessUnit:
            properties:
                idCompanyBusinessUnit:
                    type: integer
                name:
                    type: string
                company:
                    $ref: '#/components/schemas/Company'
                addressCollection:
                    $ref: '#/components/schemas/CompanyUnitAddressCollection'
                key:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                externalUrl:
                    type: string
                iban:
                    type: string
                bic:
                    type: string
                fkCompany:
                    type: integer
                fkParentCompanyBusinessUnit:
                    type: integer
                parentCompanyBusinessUnit:
                    $ref: '#/components/schemas/CompanyBusinessUnit'
                uuid:
                    type: string
                defaultBillingAddress:
                    type: integer
                merchantRelationships:
                    items:
                        $ref: '#/components/schemas/MerchantRelationship'
        CompanyBusinessUnitCollection:
            properties:
                companyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/CompanyBusinessUnit'
                pagination:
                    $ref: '#/components/schemas/Pagination'
        CompanyRole:
            properties:
                company:
                    $ref: '#/components/schemas/Company'
                key:
                    type: string
                idCompanyRole:
                    type: integer
                fkCompany:
                    type: integer
                name:
                    type: string
                isDefault:
                    type: boolean
                permissionCollection:
                    $ref: '#/components/schemas/PermissionCollection'
                companyUserCollection:
                    $ref: '#/components/schemas/CompanyUserCollection'
                uuid:
                    type: string
        CompanyRoleCollection:
            properties:
                roles:
                    items:
                        $ref: '#/components/schemas/CompanyRole'
                pagination:
                    $ref: '#/components/schemas/Pagination'
        CompanyUnitAddress:
            properties:
                uuid:
                    type: string
                fkCompany:
                    type: integer
                key:
                    type: string
                labelCollection:
                    $ref: '#/components/schemas/CompanyUnitAddressLabelCollection'
                idCompanyUnitAddress:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkCountry:
                    type: integer
                fkRegion:
                    type: integer
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                city:
                    type: string
                zipCode:
                    type: string
                phone:
                    type: string
                comment:
                    type: string
                iso2Code:
                    type: string
                isDefaultBilling:
                    type: boolean
                companyBusinessUnits:
                    $ref: '#/components/schemas/CompanyBusinessUnitCollection'
        CompanyUnitAddressCollection:
            properties:
                companyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/CompanyUnitAddress'
                pagination:
                    $ref: '#/components/schemas/Pagination'
        CompanyUnitAddressLabelCollection:
            properties:
                labels:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressLabelEntity'
        CompanyUser:
            properties:
                idCompanyUser:
                    type: integer
                fkCompany:
                    type: integer
                company:
                    $ref: '#/components/schemas/Company'
                fkCustomer:
                    type: integer
                customer:
                    $ref: '#/components/schemas/Customer'
                companyBusinessUnit:
                    $ref: '#/components/schemas/CompanyBusinessUnit'
                isDefault:
                    type: boolean
                fkCompanyBusinessUnit:
                    type: integer
                companyRoleCollection:
                    $ref: '#/components/schemas/CompanyRoleCollection'
                key:
                    type: string
                isActive:
                    type: boolean
                uuid:
                    type: string
        CompanyUserCollection:
            properties:
                companyUsers:
                    items:
                        $ref: '#/components/schemas/CompanyUser'
                pagination:
                    $ref: '#/components/schemas/Pagination'
                filter:
                    $ref: '#/components/schemas/Filter'
                total:
                    type: integer
        ConcreteProductsRestAttributes:
            properties:
                sku:
                    type: string
                isDiscontinued:
                    type: boolean
                discontinuedNote:
                    type: string
                name:
                    type: string
                description:
                    type: string
                attributes:
                    type: array
                    items: {  }
                superAttributesDefinition:
                    type: array
                    items: {  }
                metaTitle:
                    type: string
                metaKeywords:
                    type: string
                metaDescription:
                    type: string
                attributeNames:
                    type: array
                    items: {  }
        ConcreteProductsRestCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/ConcreteProductsRestCollectionResponseData'
        ConcreteProductsRestCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/ConcreteProductsRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        ConcreteProductsRestRelationships:
            properties:
                concrete-product-image-sets:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                concrete-product-availabilities:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                concrete-product-prices:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        ConcreteProductsRestResponse:
            properties:
                data:
                    $ref: '#/components/schemas/ConcreteProductsRestResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        ConcreteProductsRestResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/ConcreteProductsRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/ConcreteProductsRestRelationships'
        Country:
            properties:
                idCountry:
                    type: integer
                iso2Code:
                    type: string
                iso3Code:
                    type: string
                name:
                    type: string
                postalCodeMandatory:
                    type: boolean
                postalCodeRegex:
                    type: string
                regions:
                    items:
                        $ref: '#/components/schemas/Region'
        Customer:
            properties:
                availabilityNotificationSubscriptionSkus:
                    type: array
                    items:
                        type: string
                idCustomer:
                    type: integer
                firstName:
                    type: string
                lastName:
                    type: string
                isOnBehalf:
                    type: boolean
                companyUserTransfer:
                    $ref: '#/components/schemas/CompanyUser'
                customerReference:
                    type: string
                isGuest:
                    type: boolean
                defaultBillingAddress:
                    type: string
                defaultShippingAddress:
                    type: string
                addresses:
                    $ref: '#/components/schemas/Addresses'
                permissions:
                    $ref: '#/components/schemas/PermissionCollection'
                companyUserInvitationHash:
                    type: string
                email:
                    type: string
                company:
                    type: string
                gender:
                    type: string
                dateOfBirth:
                    type: string
                salutation:
                    type: string
                password:
                    type: string
                newPassword:
                    type: string
                billingAddress:
                    items:
                        $ref: '#/components/schemas/Address'
                shippingAddress:
                    items:
                        $ref: '#/components/schemas/Address'
                createdAt:
                    type: string
                updatedAt:
                    type: string
                restorePasswordKey:
                    type: string
                restorePasswordLink:
                    type: string
                restorePasswordDate:
                    type: string
                registrationKey:
                    type: string
                confirmationLink:
                    type: string
                registered:
                    type: string
                message:
                    type: string
                sendPasswordToken:
                    type: boolean
                locale:
                    $ref: '#/components/schemas/Locale'
                anonymizedAt:
                    type: string
                fkUser:
                    type: integer
                username:
                    type: string
                phone:
                    type: string
                isDirty:
                    type: boolean
                customerProductListCollection:
                    $ref: '#/components/schemas/CustomerProductListCollection'
        CustomerProductListCollection:
            properties:
                blacklistIds:
                    type: array
                    items:
                        type: integer
                whitelistIds:
                    type: array
                    items:
                        type: integer
        Filter:
            properties:
                limit:
                    type: integer
                offset:
                    type: integer
                orderBy:
                    type: string
                orderDirection:
                    type: string
        Locale:
            properties:
                idLocale:
                    type: integer
                localeName:
                    type: string
                isActive:
                    type: boolean
        Merchant:
            properties:
                idMerchant:
                    type: integer
                merchantKey:
                    type: string
                name:
                    type: string
        MerchantRelationship:
            properties:
                idMerchantRelationship:
                    type: integer
                merchantRelationshipKey:
                    type: string
                name:
                    type: string
                fkMerchant:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                merchant:
                    $ref: '#/components/schemas/Merchant'
                ownerCompanyBusinessUnit:
                    $ref: '#/components/schemas/CompanyBusinessUnit'
                assigneeCompanyBusinessUnits:
                    $ref: '#/components/schemas/CompanyBusinessUnitCollection'
        Pagination:
            properties:
                page:
                    type: integer
                lastPage:
                    type: integer
                maxPerPage:
                    type: integer
                nbResults:
                    type: integer
                previousPage:
                    type: integer
                nextPage:
                    type: integer
                firstIndex:
                    type: integer
                lastIndex:
                    type: integer
                firstPage:
                    type: integer
        Permission:
            properties:
                idPermission:
                    type: integer
                key:
                    type: string
                configuration:
                    type: array
                    items: {  }
                configurationSignature:
                    type: array
                    items: {  }
                idCompanyRole:
                    type: integer
                isInfrastructural:
                    type: boolean
        PermissionCollection:
            properties:
                permissions:
                    items:
                        $ref: '#/components/schemas/Permission'
        Region:
            properties:
                idRegion:
                    type: integer
                fkCountry:
                    type: integer
                name:
                    type: string
                iso2Code:
                    type: string
        RestAbstractProductAvailabilityAttributes:
            properties:
                availability:
                    type: boolean
                quantity:
                    type: integer
        RestAbstractProductAvailabilityCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData'
        RestAbstractProductAvailabilityCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestAbstractProductAvailabilityAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestAccessTokensRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestAccessTokensRequestData'
        RestAccessTokensRequestAttributes:
            properties:
                username:
                    type: string
                password:
                    type: string
            required:
                - username
                - password
        RestAccessTokensRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestAccessTokensRequestAttributes'
        RestAddress:
            properties:
                id:
                    type: string
                salutation:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                zipCode:
                    type: string
                city:
                    type: string
                country:
                    type: string
                iso2Code:
                    type: string
                company:
                    type: string
                phone:
                    type: string
                isDefaultBilling:
                    type: boolean
                isDefaultShipping:
                    type: boolean
        RestAddressAttributes:
            properties:
                salutation:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                zipCode:
                    type: string
                city:
                    type: string
                country:
                    type: string
                iso2Code:
                    type: string
                company:
                    type: string
                phone:
                    type: string
                isDefaultShipping:
                    type: boolean
                isDefaultBilling:
                    type: boolean
        RestAddressCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestAddressCollectionResponseData'
        RestAddressCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestAddressAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestAddressRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestAddressRequestData'
        RestAddressRequestAttributes:
            properties:
                salutation:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                zipCode:
                    type: string
                city:
                    type: string
                iso2Code:
                    type: string
            required:
                - salutation
                - firstName
                - lastName
                - address1
                - address2
                - zipCode
                - city
                - iso2Code
        RestAddressRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestAddressRequestAttributes'
        RestAddressResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestAddressResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestAddressResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestAddressAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestAddressTransfer:
            properties:
                salutation:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                zipCode:
                    type: string
                city:
                    type: string
                iso2Code:
                    type: string
                company:
                    type: string
                phone:
                    type: string
                isDefaultBilling:
                    type: boolean
                isDefaultShipping:
                    type: boolean
            required:
                - salutation
                - firstName
                - lastName
                - address1
                - address2
                - address3
                - zipCode
                - city
                - iso2Code
                - company
                - phone
        RestCalculatedDiscount:
            properties:
                unitAmount:
                    type: integer
                sumAmount:
                    type: integer
                displayName:
                    type: string
                description:
                    type: string
                voucherCode:
                    type: string
                quantity:
                    type: integer
        RestCartItemCalculations:
            properties:
                unitPrice:
                    type: integer
                sumPrice:
                    type: integer
                taxRate:
                    type: integer
                unitNetPrice:
                    type: integer
                sumNetPrice:
                    type: integer
                unitGrossPrice:
                    type: integer
                sumGrossPrice:
                    type: integer
                unitTaxAmountFullAggregation:
                    type: integer
                sumTaxAmountFullAggregation:
                    type: integer
                sumSubtotalAggregation:
                    type: integer
                unitSubtotalAggregation:
                    type: integer
                unitProductOptionPriceAggregation:
                    type: integer
                sumProductOptionPriceAggregation:
                    type: integer
                unitDiscountAmountAggregation:
                    type: integer
                sumDiscountAmountAggregation:
                    type: integer
                unitDiscountAmountFullAggregation:
                    type: integer
                sumDiscountAmountFullAggregation:
                    type: integer
                unitPriceToPayAggregation:
                    type: integer
                sumPriceToPayAggregation:
                    type: integer
        RestCartItemsAttributes:
            properties:
                sku:
                    type: string
                quantity:
                    type: integer
                groupKey:
                    type: string
                abstractSku:
                    type: string
                amount:
                    type: integer
                calculations:
                    $ref: '#/components/schemas/RestCartItemCalculations'
                quoteUuid:
                    type: string
                customerReference:
                    type: string
                customer:
                    $ref: '#/components/schemas/Customer'
        RestCartItemsRelationships:
            properties:
                concrete-products:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCartItemsRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCartItemsRequestData'
        RestCartItemsRequestAttributes:
            properties:
                sku:
                    type: string
                quantity:
                    type: integer
            required:
                - sku
                - quantity
        RestCartItemsRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartItemsRequestAttributes'
        RestCartItemsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCartItemsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCartItemsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartItemsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCartItemsRelationships'
        RestCartPermissionGroupsAttributes:
            properties:
                name:
                    type: string
                isDefault:
                    type: boolean
        RestCartPermissionGroupsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCartPermissionGroupsCollectionResponseData'
        RestCartPermissionGroupsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartPermissionGroupsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCartPermissionGroupsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCartPermissionGroupsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCartPermissionGroupsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartPermissionGroupsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCartsAttributes:
            properties:
                priceMode:
                    type: string
                currency:
                    type: string
                store:
                    type: string
                discounts:
                    items:
                        $ref: '#/components/schemas/RestCartsDiscounts'
                totals:
                    $ref: '#/components/schemas/RestCartsTotals'
                name:
                    type: string
                isDefault:
                    type: boolean
        RestCartsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCartsCollectionResponseData'
        RestCartsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCartsRelationships'
        RestCartsDiscounts:
            properties:
                displayName:
                    type: string
                amount:
                    type: integer
                code:
                    type: string
        RestCartsRelationships:
            properties:
                cart-permission-groups:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                shared-carts:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                concrete-products:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCartsRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCartsRequestData'
        RestCartsRequestAttributes:
            properties:
                priceMode:
                    type: string
                currency:
                    type: string
                store:
                    type: string
                name:
                    type: string
            required:
                - priceMode
                - currency
                - store
                - name
        RestCartsRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartsRequestAttributes'
        RestCartsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCartsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCartsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCartsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCartsRelationships'
        RestCartsTotals:
            properties:
                expenseTotal:
                    type: integer
                discountTotal:
                    type: integer
                taxTotal:
                    type: integer
                subtotal:
                    type: integer
                grandTotal:
                    type: integer
        RestCatalogSearchAbstractProducts:
            properties:
                images:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchProductImage'
                price:
                    type: integer
                abstractName:
                    type: string
                prices:
                    type: array
                    items: {  }
                abstractSku:
                    type: string
        RestCatalogSearchAttributes:
            properties:
                sort:
                    $ref: '#/components/schemas/RestCatalogSearchSort'
                pagination:
                    $ref: '#/components/schemas/RestCatalogSearchPagination'
                abstractProducts:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchAbstractProducts'
                valueFacets:
                    items:
                        $ref: '#/components/schemas/RestFacetSearchResult'
                rangeFacets:
                    items:
                        $ref: '#/components/schemas/RestRangeSearchResult'
                spellingSuggestion:
                    type: string
        RestCatalogSearchCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchCollectionResponseData'
        RestCatalogSearchCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestCatalogSearchAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCatalogSearchRelationships'
        RestCatalogSearchPagination:
            properties:
                numFound:
                    type: integer
                currentPage:
                    type: integer
                maxPage:
                    type: integer
                currentItemsPerPage:
                    type: integer
        RestCatalogSearchProductImage:
            properties:
                externalUrlSmall:
                    type: string
                externalUrlLarge:
                    type: string
        RestCatalogSearchRelationships:
            properties:
                abstract-products:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCatalogSearchSort:
            properties:
                sortParamNames:
                    type: array
                    items: {  }
                sortParamLocalizedNames:
                    type: array
                    items: {  }
                currentSortParam:
                    type: string
                currentSortOrder:
                    type: string
        RestCatalogSearchSuggestionAbstractProducts:
            properties:
                images:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchSuggestionProductImage'
                price:
                    type: integer
                abstractName:
                    type: string
                abstractSku:
                    type: string
        RestCatalogSearchSuggestionProductImage:
            properties:
                externalUrlSmall:
                    type: string
                externalUrlLarge:
                    type: string
        RestCatalogSearchSuggestionsAttributes:
            properties:
                completion:
                    type: array
                    items:
                        type: string
                abstractProducts:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchSuggestionAbstractProducts'
                categories:
                    type: array
                    items: {  }
                cmsPages:
                    type: array
                    items: {  }
        RestCatalogSearchSuggestionsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCatalogSearchSuggestionsCollectionResponseData'
        RestCatalogSearchSuggestionsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestCatalogSearchSuggestionsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCatalogSearchSuggestionsRelationships'
        RestCatalogSearchSuggestionsRelationships:
            properties:
                abstract-products:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCategoryNodesAttributes:
            properties:
                nodeId:
                    type: integer
                name:
                    type: string
                metaTitle:
                    type: string
                metaKeywords:
                    type: string
                metaDescription:
                    type: string
                isActive:
                    type: boolean
                children:
                    items:
                        $ref: '#/components/schemas/RestCategoryNodesAttributes'
                parents:
                    items:
                        $ref: '#/components/schemas/RestCategoryNodesAttributes'
                order:
                    type: integer
        RestCategoryNodesResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCategoryNodesResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCategoryNodesResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCategoryNodesAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCategoryTreesAttributes:
            properties:
                nodeId:
                    type: integer
                order:
                    type: integer
                name:
                    type: string
                children:
                    items:
                        $ref: '#/components/schemas/RestCategoryTreesAttributes'
        RestCategoryTreesCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCategoryTreesCollectionResponseData'
        RestCategoryTreesCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestCategoryTreesAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCheckoutDataResponseAttributes:
            properties:
                addresses:
                    items:
                        $ref: '#/components/schemas/RestAddress'
                paymentProviders:
                    items:
                        $ref: '#/components/schemas/RestPaymentProvider'
                shipmentMethods:
                    items:
                        $ref: '#/components/schemas/RestShipmentMethod'
        RestCheckoutDataResponseResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCheckoutDataResponseResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCheckoutDataResponseResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestCheckoutDataResponseAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCheckoutRequestRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCheckoutRequestRequestData'
        RestCheckoutRequestRequestAttributes:
            properties:
                customer:
                    $ref: '#/components/schemas/RestCustomerTransfer'
                idCart:
                    type: string
                billingAddress:
                    $ref: '#/components/schemas/RestAddressTransfer'
                shippingAddress:
                    $ref: '#/components/schemas/RestAddressTransfer'
                payments:
                    items:
                        $ref: '#/components/schemas/RestPaymentTransfer'
                shipment:
                    $ref: '#/components/schemas/RestShipmentTransfer'
            required:
                - idCart
        RestCheckoutRequestRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCheckoutRequestRequestAttributes'
        RestCheckoutResponseAttributes:
            properties:
                orderReference:
                    type: string
                redirectUrl:
                    type: string
                isExternalRedirect:
                    type: boolean
        RestCheckoutResponseRelationships:
            properties:
                orders:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCheckoutResponseResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCheckoutResponseResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCheckoutResponseResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestCheckoutResponseAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCheckoutResponseRelationships'
        RestCompanyAttributes:
            properties:
                isActive:
                    type: boolean
                name:
                    type: string
                status:
                    type: string
        RestCompanyBusinessUnitAddressesAttributes:
            properties:
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                zipCode:
                    type: string
                city:
                    type: string
                phone:
                    type: string
                iso2Code:
                    type: string
                comment:
                    type: string
        RestCompanyBusinessUnitAddressesCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesCollectionResponseData'
        RestCompanyBusinessUnitAddressesCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyBusinessUnitAddressesResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyBusinessUnitAddressesResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitAddressesAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyBusinessUnitAttributes:
            properties:
                name:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                externalUrl:
                    type: string
                bic:
                    type: string
                iban:
                    type: string
                defaultBillingAddress:
                    type: string
        RestCompanyBusinessUnitCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCompanyBusinessUnitCollectionResponseData'
        RestCompanyBusinessUnitCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitRelationships'
        RestCompanyBusinessUnitRelationships:
            properties:
                companies:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                company-business-unit-addresses:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCompanyBusinessUnitResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyBusinessUnitResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyBusinessUnitRelationships'
        RestCompanyCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCompanyCollectionResponseData'
        RestCompanyCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyRoleAttributes:
            properties:
                name:
                    type: string
                isDefault:
                    type: boolean
        RestCompanyRoleCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCompanyRoleCollectionResponseData'
        RestCompanyRoleCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyRoleAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyRoleRelationships'
        RestCompanyRoleRelationships:
            properties:
                companies:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCompanyRoleResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyRoleResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyRoleResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyRoleAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyRoleRelationships'
        RestCompanyUserAccessTokenResponseAttributes:
            properties:
                tokenType:
                    type: string
                expiresIn:
                    type: string
                accessToken:
                    type: string
                refreshToken:
                    type: string
        RestCompanyUserAccessTokenResponseResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyUserAccessTokenResponseResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyUserAccessTokenResponseResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyUserAccessTokenResponseAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyUserAccessTokensRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyUserAccessTokensRequestData'
        RestCompanyUserAccessTokensRequestAttributes:
            properties:
                idCompanyUser:
                    type: string
            required:
                - idCompanyUser
        RestCompanyUserAccessTokensRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyUserAccessTokensRequestAttributes'
        RestCompanyUserAttributes:
            properties:
                isActive:
                    type: boolean
                isDefault:
                    type: boolean
        RestCompanyUserCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestCompanyUserCollectionResponseData'
        RestCompanyUserCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyUserAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyUserRelationships'
        RestCompanyUserRelationships:
            properties:
                companies:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                company-business-units:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                company-roles:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                customers:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCompanyUserResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCompanyUserResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCompanyUserResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCompanyUserAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCompanyUserRelationships'
        RestConcreteProductAvailabilityAttributes:
            properties:
                availability:
                    type: boolean
                quantity:
                    type: integer
                isNeverOutOfStock:
                    type: boolean
        RestConcreteProductAvailabilityCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData'
        RestConcreteProductAvailabilityCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestConcreteProductAvailabilityAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCurrency:
            properties:
                code:
                    type: string
                name:
                    type: string
                symbol:
                    type: string
        RestCustomerForgottenPasswordAttributes:
            properties:
                email:
                    type: string
        RestCustomerForgottenPasswordRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomerForgottenPasswordRequestData'
        RestCustomerForgottenPasswordRequestAttributes:
            properties:
                email:
                    type: string
            required:
                - email
        RestCustomerForgottenPasswordRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomerForgottenPasswordRequestAttributes'
        RestCustomerForgottenPasswordResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomerForgottenPasswordResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCustomerForgottenPasswordResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomerForgottenPasswordAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCustomerPasswordRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomerPasswordRequestData'
        RestCustomerPasswordRequestAttributes:
            properties:
                password:
                    type: string
                newPassword:
                    type: string
                confirmPassword:
                    type: string
            required:
                - password
                - newPassword
                - confirmPassword
        RestCustomerPasswordRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomerPasswordRequestAttributes'
        RestCustomerRestorePasswordAttributes:
            properties:
                restorePasswordKey:
                    type: string
                password:
                    type: string
                confirmPassword:
                    type: string
        RestCustomerRestorePasswordRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomerRestorePasswordRequestData'
        RestCustomerRestorePasswordRequestAttributes:
            properties:
                restorePasswordKey:
                    type: string
                password:
                    type: string
                confirmPassword:
                    type: string
            required:
                - restorePasswordKey
                - password
                - confirmPassword
        RestCustomerRestorePasswordRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomerRestorePasswordRequestAttributes'
        RestCustomerRestorePasswordResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomerRestorePasswordResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCustomerRestorePasswordResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomerRestorePasswordAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCustomerTransfer:
            properties:
                email:
                    type: string
                salutation:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
        RestCustomersAttributes:
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                gender:
                    type: string
                dateOfBirth:
                    type: string
                salutation:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                email:
                    type: string
                password:
                    type: string
                confirmPassword:
                    type: string
                acceptedTerms:
                    type: boolean
        RestCustomersRelationships:
            properties:
                addresses:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                wishlists:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestCustomersRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomersRequestData'
        RestCustomersRequestAttributes:
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                gender:
                    type: string
                salutation:
                    type: string
                email:
                    type: string
                password:
                    type: string
                confirmPassword:
                    type: string
                acceptedTerms:
                    type: boolean
            required:
                - firstName
                - lastName
                - gender
                - salutation
                - email
                - password
                - confirmPassword
                - acceptedTerms
        RestCustomersRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomersRequestAttributes'
        RestCustomersResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestCustomersResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestCustomersResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestCustomersAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestCustomersRelationships'
        RestErrorMessage:
            properties:
                status:
                    type: integer
                code:
                    type: string
                detail:
                    type: string
        RestFacetConfig:
            properties:
                parameterName:
                    type: string
                isMultiValued:
                    type: boolean
        RestFacetSearchResult:
            properties:
                name:
                    type: string
                localizedName:
                    type: string
                docCount:
                    type: integer
                values:
                    type: array
                    items: {  }
                activeValue:
                    type: string
                config:
                    $ref: '#/components/schemas/RestFacetConfig'
        RestImagesAttributes:
            properties:
                externalUrlLarge:
                    type: string
                externalUrlSmall:
                    type: string
        RestLinks:
            properties:
                self:
                    type: string
        RestNavigationAttributes:
            properties:
                nodes:
                    items:
                        $ref: '#/components/schemas/RestNavigationNode'
                name:
                    type: string
                isActive:
                    type: boolean
        RestNavigationNode:
            properties:
                resourceId:
                    type: integer
                nodeType:
                    type: string
                children:
                    items:
                        $ref: '#/components/schemas/RestNavigationNode'
                isActive:
                    type: boolean
                title:
                    type: string
                url:
                    type: string
                cssClass:
                    type: string
                validFrom:
                    type: string
                validTo:
                    type: string
        RestNavigationRelationships:
            properties:
                category-nodes:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestNavigationResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestNavigationResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestNavigationResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestNavigationAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestNavigationRelationships'
        RestOrderAddress:
            properties:
                salutation:
                    type: string
                firstName:
                    type: string
                middleName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                company:
                    type: string
                city:
                    type: string
                zipCode:
                    type: string
                poBox:
                    type: string
                phone:
                    type: string
                cellPhone:
                    type: string
                description:
                    type: string
                comment:
                    type: string
                email:
                    type: string
                country:
                    type: string
                iso2Code:
                    type: string
        RestOrderDetailsAttributes:
            properties:
                createdAt:
                    type: string
                totals:
                    $ref: '#/components/schemas/RestOrderTotalsAttributes'
                currencyIsoCode:
                    type: string
                items:
                    items:
                        $ref: '#/components/schemas/RestOrderItemsAttributes'
                expenses:
                    items:
                        $ref: '#/components/schemas/RestOrderExpensesAttributes'
                billingAddress:
                    $ref: '#/components/schemas/RestOrderAddress'
                shippingAddress:
                    $ref: '#/components/schemas/RestOrderAddress'
                priceMode:
                    type: string
                payments:
                    items:
                        $ref: '#/components/schemas/RestOrderPayment'
                calculatedDiscounts:
                    items:
                        $ref: '#/components/schemas/RestCalculatedDiscount'
        RestOrderDetailsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestOrderDetailsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestOrderDetailsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestOrderDetailsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestOrderExpensesAttributes:
            properties:
                type:
                    type: string
                name:
                    type: string
                sumPrice:
                    type: integer
                unitGrossPrice:
                    type: integer
                sumGrossPrice:
                    type: integer
                taxRate:
                    type: number
                unitNetPrice:
                    type: integer
                sumNetPrice:
                    type: integer
                canceledAmount:
                    type: integer
                unitDiscountAmountAggregation:
                    type: integer
                sumDiscountAmountAggregation:
                    type: integer
                unitTaxAmount:
                    type: integer
                sumTaxAmount:
                    type: integer
                unitPriceToPayAggregation:
                    type: integer
                sumPriceToPayAggregation:
                    type: integer
                taxAmountAfterCancellation:
                    type: integer
        RestOrderItemMetadata:
            properties:
                superAttributes:
                    type: array
                    items: {  }
                image:
                    type: string
        RestOrderItemsAttributes:
            properties:
                name:
                    type: string
                sku:
                    type: string
                sumPrice:
                    type: integer
                sumPriceToPayAggregation:
                    type: integer
                quantity:
                    type: integer
                metadata:
                    $ref: '#/components/schemas/RestOrderItemMetadata'
                calculatedDiscounts:
                    items:
                        $ref: '#/components/schemas/RestCalculatedDiscount'
                unitGrossPrice:
                    type: integer
                sumGrossPrice:
                    type: integer
                taxRate:
                    type: number
                unitNetPrice:
                    type: integer
                sumNetPrice:
                    type: integer
                unitPrice:
                    type: integer
                unitTaxAmountFullAggregation:
                    type: integer
                sumTaxAmountFullAggregation:
                    type: integer
                refundableAmount:
                    type: integer
                canceledAmount:
                    type: integer
                sumSubtotalAggregation:
                    type: integer
                unitSubtotalAggregation:
                    type: integer
                unitProductOptionPriceAggregation:
                    type: integer
                sumProductOptionPriceAggregation:
                    type: integer
                unitExpensePriceAggregation:
                    type: integer
                sumExpensePriceAggregation:
                    type: integer
                unitDiscountAmountAggregation:
                    type: integer
                sumDiscountAmountAggregation:
                    type: integer
                unitDiscountAmountFullAggregation:
                    type: integer
                sumDiscountAmountFullAggregation:
                    type: integer
                unitPriceToPayAggregation:
                    type: integer
                taxRateAverageAggregation:
                    type: number
                taxAmountAfterCancellation:
                    type: integer
        RestOrderPayment:
            properties:
                amount:
                    type: integer
                paymentProvider:
                    type: string
                paymentMethod:
                    type: string
        RestOrderPaymentsAttributes:
            properties:
                paymentIdentifier:
                    type: string
                dataPayload:
                    type: array
                    items: {  }
        RestOrderPaymentsRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestOrderPaymentsRequestData'
        RestOrderPaymentsRequestAttributes:
            properties:
                paymentIdentifier:
                    type: string
                dataPayload:
                    type: array
                    items: {  }
            required:
                - paymentIdentifier
                - dataPayload
        RestOrderPaymentsRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestOrderPaymentsRequestAttributes'
        RestOrderPaymentsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestOrderPaymentsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestOrderPaymentsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestOrderPaymentsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestOrderTotalsAttributes:
            properties:
                expenseTotal:
                    type: integer
                discountTotal:
                    type: integer
                taxTotal:
                    type: integer
                subtotal:
                    type: integer
                grandTotal:
                    type: integer
                canceledTotal:
                    type: integer
        RestOrdersAttributes:
            properties:
                createdAt:
                    type: string
                totals:
                    $ref: '#/components/schemas/RestOrderTotalsAttributes'
                currencyIsoCode:
                    type: string
                priceMode:
                    type: string
        RestOrdersCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestOrdersCollectionResponseData'
        RestOrdersCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestOrdersAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestPaymentMethod:
            properties:
                paymentMethodName:
                    type: string
                requiredRequestData:
                    type: array
                    items: {  }
        RestPaymentProvider:
            properties:
                paymentProviderName:
                    type: string
                paymentMethods:
                    items:
                        $ref: '#/components/schemas/RestPaymentMethod'
        RestPaymentTransfer:
            properties:
                paymentProviderName:
                    type: string
                paymentMethodName:
                    type: string
            required:
                - paymentProviderName
                - paymentMethodName
        RestProductImageSet:
            properties:
                name:
                    type: string
                images:
                    items:
                        $ref: '#/components/schemas/RestImagesAttributes'
        RestProductImageSetsAttributes:
            properties:
                imageSets:
                    items:
                        $ref: '#/components/schemas/RestProductImageSet'
        RestProductImageSetsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestProductImageSetsCollectionResponseData'
        RestProductImageSetsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestProductImageSetsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestProductLabelsAttributes:
            properties:
                name:
                    type: string
                isExclusive:
                    type: boolean
                position:
                    type: integer
                frontEndReference:
                    type: string
        RestProductLabelsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestProductLabelsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestProductLabelsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestProductLabelsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestProductPriceAttributes:
            properties:
                priceTypeName:
                    type: string
                netAmount:
                    type: integer
                grossAmount:
                    type: integer
                currency:
                    $ref: '#/components/schemas/RestCurrency'
        RestProductPricesAttributes:
            properties:
                price:
                    type: integer
                prices:
                    items:
                        $ref: '#/components/schemas/RestProductPriceAttributes'
        RestProductPricesCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestProductPricesCollectionResponseData'
        RestProductPricesCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestProductPricesAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestProductTaxRate:
            properties:
                name:
                    type: string
                rate:
                    type: string
                country:
                    type: string
        RestProductTaxSetsAttributes:
            properties:
                name:
                    type: string
                restTaxRates:
                    items:
                        $ref: '#/components/schemas/RestProductTaxRate'
        RestProductTaxSetsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestProductTaxSetsCollectionResponseData'
        RestProductTaxSetsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestProductTaxSetsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestRangeSearchResult:
            properties:
                name:
                    type: string
                localizedName:
                    type: string
                min:
                    type: number
                max:
                    type: number
                activeMin:
                    type: number
                activeMax:
                    type: number
                docCount:
                    type: integer
                config:
                    $ref: '#/components/schemas/RestFacetConfig'
        RestRefreshTokensRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestRefreshTokensRequestData'
        RestRefreshTokensRequestAttributes:
            properties:
                refreshToken:
                    type: string
            required:
                - refreshToken
        RestRefreshTokensRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestRefreshTokensRequestAttributes'
        RestRelationships:
            properties:
                id:
                    type: string
                type:
                    type: string
        RestSharedCartsAttributes:
            properties:
                idCompanyUser:
                    type: string
                idCartPermissionGroup:
                    type: integer
        RestSharedCartsRelationships:
            properties:
                cart-permission-groups:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
                company-users:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestSharedCartsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestSharedCartsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestSharedCartsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestSharedCartsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestSharedCartsRelationships'
        RestShipmentMethod:
            properties:
                carrierName:
                    type: string
                id:
                    type: integer
                name:
                    type: string
                price:
                    type: integer
                taxRate:
                    type: number
                deliveryTime:
                    type: integer
        RestShipmentTransfer:
            properties:
                idShipmentMethod:
                    type: integer
            required:
                - idShipmentMethod
        RestTokenResponseAttributes:
            properties:
                tokenType:
                    type: string
                expiresIn:
                    type: string
                accessToken:
                    type: string
                refreshToken:
                    type: string
                idCompanyUser:
                    type: string
        RestTokenResponseResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestTokenResponseResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestTokenResponseResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                    nullable: true
                attributes:
                    $ref: '#/components/schemas/RestTokenResponseAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestWishlistItemsAttributes:
            properties:
                sku:
                    type: string
        RestWishlistItemsRelationships:
            properties:
                concrete-products:
                    items:
                        $ref: '#/components/schemas/RestRelationships'
        RestWishlistItemsRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestWishlistItemsRequestData'
        RestWishlistItemsRequestAttributes:
            properties:
                sku:
                    type: string
            required:
                - sku
        RestWishlistItemsRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestWishlistItemsRequestAttributes'
        RestWishlistItemsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestWishlistItemsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestWishlistItemsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestWishlistItemsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
                relationships:
                    $ref: '#/components/schemas/RestWishlistItemsRelationships'
        RestWishlistsAttributes:
            properties:
                name:
                    type: string
                numberOfItems:
                    type: integer
                createdAt:
                    type: string
                updatedAt:
                    type: string
        RestWishlistsCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RestWishlistsCollectionResponseData'
        RestWishlistsCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestWishlistsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestWishlistsRequest:
            properties:
                data:
                    $ref: '#/components/schemas/RestWishlistsRequestData'
        RestWishlistsRequestAttributes:
            properties:
                name:
                    type: string
            required:
                - name
        RestWishlistsRequestData:
            properties:
                type:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestWishlistsRequestAttributes'
        RestWishlistsResponse:
            properties:
                data:
                    $ref: '#/components/schemas/RestWishlistsResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestWishlistsResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestWishlistsAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        SpyAclGroupEntity:
            properties:
                idAclGroup:
                    type: integer
                name:
                    type: string
                spyAclUserHasGroups:
                    items:
                        $ref: '#/components/schemas/SpyAclUserHasGroupEntity'
                spyAclGroupsHasRoless:
                    items:
                        $ref: '#/components/schemas/SpyAclGroupsHasRolesEntity'
        SpyAclGroupsHasRolesEntity:
            properties:
                fkAclRole:
                    type: integer
                fkAclGroup:
                    type: integer
                spyAclRole:
                    $ref: '#/components/schemas/SpyAclRoleEntity'
                spyAclGroup:
                    $ref: '#/components/schemas/SpyAclGroupEntity'
        SpyAclRoleEntity:
            properties:
                idAclRole:
                    type: integer
                name:
                    type: string
                spyAclRules:
                    items:
                        $ref: '#/components/schemas/SpyAclRuleEntity'
                spyAclGroupsHasRoless:
                    items:
                        $ref: '#/components/schemas/SpyAclGroupsHasRolesEntity'
        SpyAclRuleEntity:
            properties:
                idAclRule:
                    type: integer
                fkAclRole:
                    type: integer
                bundle:
                    type: string
                controller:
                    type: string
                action:
                    type: string
                type:
                    type: string
                aclRole:
                    $ref: '#/components/schemas/SpyAclRoleEntity'
        SpyAclUserHasGroupEntity:
            properties:
                fkUser:
                    type: integer
                fkAclGroup:
                    type: integer
                spyUser:
                    $ref: '#/components/schemas/SpyUserEntity'
                spyAclGroup:
                    $ref: '#/components/schemas/SpyAclGroupEntity'
        SpyAuthResetPasswordEntity:
            properties:
                idAuthResetPassword:
                    type: integer
                fkUser:
                    type: integer
                code:
                    type: string
                status:
                    type: string
                user:
                    $ref: '#/components/schemas/SpyUserEntity'
        SpyAvailabilityAbstractEntity:
            properties:
                idAvailabilityAbstract:
                    type: integer
                fkStore:
                    type: integer
                abstractSku:
                    type: string
                quantity:
                    type: integer
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                spyAvailabilities:
                    items:
                        $ref: '#/components/schemas/SpyAvailabilityEntity'
        SpyAvailabilityEntity:
            properties:
                idAvailability:
                    type: integer
                fkAvailabilityAbstract:
                    type: integer
                fkStore:
                    type: integer
                isNeverOutOfStock:
                    type: boolean
                quantity:
                    type: integer
                sku:
                    type: string
                spyAvailabilityAbstract:
                    $ref: '#/components/schemas/SpyAvailabilityAbstractEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyAvailabilityNotificationSubscriptionEntity:
            properties:
                idAvailabilityNotificationSubscription:
                    type: integer
                fkLocale:
                    type: integer
                fkStore:
                    type: integer
                customerReference:
                    type: string
                email:
                    type: string
                sku:
                    type: string
                subscriptionKey:
                    type: string
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyCategoryAttributeEntity:
            properties:
                idCategoryAttribute:
                    type: integer
                fkCategory:
                    type: integer
                fkLocale:
                    type: integer
                categoryImageName:
                    type: string
                metaDescription:
                    type: string
                metaKeywords:
                    type: string
                metaTitle:
                    type: string
                name:
                    type: string
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                category:
                    $ref: '#/components/schemas/SpyCategoryEntity'
        SpyCategoryClosureTableEntity:
            properties:
                idCategoryClosureTable:
                    type: integer
                fkCategoryNode:
                    type: integer
                fkCategoryNodeDescendant:
                    type: integer
                depth:
                    type: integer
                node:
                    $ref: '#/components/schemas/SpyCategoryNodeEntity'
                descendantNode:
                    $ref: '#/components/schemas/SpyCategoryNodeEntity'
        SpyCategoryEntity:
            properties:
                idCategory:
                    type: integer
                fkCategoryTemplate:
                    type: integer
                categoryKey:
                    type: string
                isActive:
                    type: boolean
                isClickable:
                    type: boolean
                isInMenu:
                    type: boolean
                isSearchable:
                    type: boolean
                categoryTemplate:
                    $ref: '#/components/schemas/SpyCategoryTemplateEntity'
                spyProductCategoryFilters:
                    items:
                        $ref: '#/components/schemas/SpyProductCategoryFilterEntity'
                spyCmsBlockCategoryConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockCategoryConnectorEntity'
                spyCategoryImageSets:
                    items:
                        $ref: '#/components/schemas/SpyCategoryImageSetEntity'
                spyProductCategories:
                    items:
                        $ref: '#/components/schemas/SpyProductCategoryEntity'
                spyCategoryAttributes:
                    items:
                        $ref: '#/components/schemas/SpyCategoryAttributeEntity'
                spyCategoryNodes:
                    items:
                        $ref: '#/components/schemas/SpyCategoryNodeEntity'
                spyProductListCategories:
                    items:
                        $ref: '#/components/schemas/SpyProductListCategoryEntity'
        SpyCategoryImageEntity:
            properties:
                idCategoryImage:
                    type: integer
                externalUrlLarge:
                    type: string
                externalUrlSmall:
                    type: string
                spyCategoryImageSetToCategoryImages:
                    items:
                        $ref: '#/components/schemas/SpyCategoryImageSetToCategoryImageEntity'
        SpyCategoryImageSetEntity:
            properties:
                idCategoryImageSet:
                    type: integer
                fkCategory:
                    type: integer
                fkLocale:
                    type: integer
                name:
                    type: string
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyCategory:
                    $ref: '#/components/schemas/SpyCategoryEntity'
                spyCategoryImageSetToCategoryImages:
                    items:
                        $ref: '#/components/schemas/SpyCategoryImageSetToCategoryImageEntity'
        SpyCategoryImageSetToCategoryImageEntity:
            properties:
                idCategoryImageSetToCategoryImage:
                    type: integer
                fkCategoryImage:
                    type: integer
                fkCategoryImageSet:
                    type: integer
                sortOrder:
                    type: integer
                spyCategoryImageSet:
                    $ref: '#/components/schemas/SpyCategoryImageSetEntity'
                spyCategoryImage:
                    $ref: '#/components/schemas/SpyCategoryImageEntity'
        SpyCategoryNodeEntity:
            properties:
                idCategoryNode:
                    type: integer
                fkCategory:
                    type: integer
                fkParentCategoryNode:
                    type: integer
                isMain:
                    type: boolean
                isRoot:
                    type: boolean
                nodeOrder:
                    type: integer
                parentCategoryNode:
                    $ref: '#/components/schemas/SpyCategoryNodeEntity'
                category:
                    $ref: '#/components/schemas/SpyCategoryEntity'
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
                spyCategoryNodes:
                    items:
                        $ref: '#/components/schemas/SpyCategoryNodeEntity'
                spyCategoryClosureTables:
                    items:
                        $ref: '#/components/schemas/SpyCategoryClosureTableEntity'
        SpyCategoryTemplateEntity:
            properties:
                idCategoryTemplate:
                    type: integer
                name:
                    type: string
                templatePath:
                    type: string
                spyCmsBlockCategoryConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockCategoryConnectorEntity'
                spyCategories:
                    items:
                        $ref: '#/components/schemas/SpyCategoryEntity'
        SpyCmsBlockCategoryConnectorEntity:
            properties:
                idCmsBlockCategoryConnector:
                    type: integer
                fkCategory:
                    type: integer
                fkCategoryTemplate:
                    type: integer
                fkCmsBlock:
                    type: integer
                fkCmsBlockCategoryPosition:
                    type: integer
                cmsBlock:
                    $ref: '#/components/schemas/SpyCmsBlockEntity'
                category:
                    $ref: '#/components/schemas/SpyCategoryEntity'
                categoryTemplate:
                    $ref: '#/components/schemas/SpyCategoryTemplateEntity'
                cmsBlockCategoryPosition:
                    $ref: '#/components/schemas/SpyCmsBlockCategoryPositionEntity'
        SpyCmsBlockCategoryPositionEntity:
            properties:
                idCmsBlockCategoryPosition:
                    type: integer
                name:
                    type: string
                spyCmsBlockCategoryConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockCategoryConnectorEntity'
        SpyCmsBlockEntity:
            properties:
                idCmsBlock:
                    type: integer
                fkPage:
                    type: integer
                fkTemplate:
                    type: integer
                isActive:
                    type: boolean
                name:
                    type: string
                type:
                    type: string
                validFrom:
                    type: string
                validTo:
                    type: string
                value:
                    type: integer
                cmsBlockTemplate:
                    $ref: '#/components/schemas/SpyCmsBlockTemplateEntity'
                spyCmsBlockCategoryConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockCategoryConnectorEntity'
                spyCmsBlockProductConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockProductConnectorEntity'
                spyCmsBlockGlossaryKeyMappings:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockGlossaryKeyMappingEntity'
                spyCmsBlockStores:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockStoreEntity'
        SpyCmsBlockGlossaryKeyMappingEntity:
            properties:
                idCmsBlockGlossaryKeyMapping:
                    type: integer
                fkCmsBlock:
                    type: integer
                fkGlossaryKey:
                    type: integer
                placeholder:
                    type: string
                cmsBlock:
                    $ref: '#/components/schemas/SpyCmsBlockEntity'
                glossaryKey:
                    $ref: '#/components/schemas/SpyGlossaryKeyEntity'
        SpyCmsBlockProductConnectorEntity:
            properties:
                idCmsBlockProductConnector:
                    type: integer
                fkCmsBlock:
                    type: integer
                fkProductAbstract:
                    type: integer
                cmsBlock:
                    $ref: '#/components/schemas/SpyCmsBlockEntity'
                productAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyCmsBlockStoreEntity:
            properties:
                idCmsBlockStore:
                    type: integer
                fkCmsBlock:
                    type: integer
                fkStore:
                    type: integer
                spyCmsBlock:
                    $ref: '#/components/schemas/SpyCmsBlockEntity'
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyCmsBlockTemplateEntity:
            properties:
                idCmsBlockTemplate:
                    type: integer
                templateName:
                    type: string
                templatePath:
                    type: string
                spyCmsBlocks:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockEntity'
        SpyCmsGlossaryKeyMappingEntity:
            properties:
                idCmsGlossaryKeyMapping:
                    type: integer
                fkGlossaryKey:
                    type: integer
                fkPage:
                    type: integer
                placeholder:
                    type: string
                cmsPage:
                    $ref: '#/components/schemas/SpyCmsPageEntity'
                glossaryKey:
                    $ref: '#/components/schemas/SpyGlossaryKeyEntity'
        SpyCmsPageEntity:
            properties:
                idCmsPage:
                    type: integer
                fkTemplate:
                    type: integer
                isActive:
                    type: boolean
                isSearchable:
                    type: boolean
                pageKey:
                    type: string
                validFrom:
                    type: string
                validTo:
                    type: string
                cmsTemplate:
                    $ref: '#/components/schemas/SpyCmsTemplateEntity'
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
                spyCmsPageLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyCmsPageLocalizedAttributesEntity'
                spyCmsGlossaryKeyMappings:
                    items:
                        $ref: '#/components/schemas/SpyCmsGlossaryKeyMappingEntity'
                spyCmsVersions:
                    items:
                        $ref: '#/components/schemas/SpyCmsVersionEntity'
                spyCmsPageStores:
                    items:
                        $ref: '#/components/schemas/SpyCmsPageStoreEntity'
        SpyCmsPageLocalizedAttributesEntity:
            properties:
                idCmsPageLocalizedAttributes:
                    type: integer
                fkCmsPage:
                    type: integer
                fkLocale:
                    type: integer
                metaDescription:
                    type: string
                metaKeywords:
                    type: string
                metaTitle:
                    type: string
                name:
                    type: string
                spyCmsPage:
                    $ref: '#/components/schemas/SpyCmsPageEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyCmsPageStoreEntity:
            properties:
                idCmsPageStore:
                    type: integer
                fkCmsPage:
                    type: integer
                fkStore:
                    type: integer
                spyCmsPage:
                    $ref: '#/components/schemas/SpyCmsPageEntity'
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyCmsTemplateEntity:
            properties:
                idCmsTemplate:
                    type: integer
                templateName:
                    type: string
                templatePath:
                    type: string
                spyCmsPages:
                    items:
                        $ref: '#/components/schemas/SpyCmsPageEntity'
        SpyCmsVersionEntity:
            properties:
                idCmsVersion:
                    type: integer
                fkCmsPage:
                    type: integer
                fkUser:
                    type: integer
                data:
                    type: string
                version:
                    type: integer
                versionName:
                    type: string
                spyCmsPage:
                    $ref: '#/components/schemas/SpyCmsPageEntity'
                spyUser:
                    $ref: '#/components/schemas/SpyUserEntity'
        SpyCommentEntity:
            properties:
                idComment:
                    type: integer
                fkCommentThread:
                    type: integer
                fkCustomer:
                    type: integer
                isDeleted:
                    type: boolean
                isUpdated:
                    type: boolean
                key:
                    type: string
                message:
                    type: string
                uuid:
                    type: string
                spyCustomer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                spyCommentThread:
                    $ref: '#/components/schemas/SpyCommentThreadEntity'
                spyCommentToCommentTags:
                    items:
                        $ref: '#/components/schemas/SpyCommentToCommentTagEntity'
        SpyCommentTagEntity:
            properties:
                idCommentTag:
                    type: integer
                name:
                    type: string
                uuid:
                    type: string
                spyCommentToCommentTags:
                    items:
                        $ref: '#/components/schemas/SpyCommentToCommentTagEntity'
        SpyCommentThreadEntity:
            properties:
                idCommentThread:
                    type: integer
                ownerId:
                    type: integer
                ownerType:
                    type: string
                uuid:
                    type: string
                spyComments:
                    items:
                        $ref: '#/components/schemas/SpyCommentEntity'
        SpyCommentToCommentTagEntity:
            properties:
                fkComment:
                    type: integer
                fkCommentTag:
                    type: integer
                spyComment:
                    $ref: '#/components/schemas/SpyCommentEntity'
                spyCommentTag:
                    $ref: '#/components/schemas/SpyCommentTagEntity'
        SpyCompanyBusinessUnitEntity:
            properties:
                idCompanyBusinessUnit:
                    type: integer
                fkCompany:
                    type: integer
                fkParentCompanyBusinessUnit:
                    type: integer
                bic:
                    type: string
                defaultBillingAddress:
                    type: integer
                email:
                    type: string
                externalUrl:
                    type: string
                iban:
                    type: string
                key:
                    type: string
                name:
                    type: string
                phone:
                    type: string
                uuid:
                    type: string
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                parentCompanyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                companyBusinessUnitDefaultBillingAddress:
                    $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
                spyCompanyUserInvitations:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserInvitationEntity'
                spyCompanyUnitAddressToCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressToCompanyBusinessUnitEntity'
                spyCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyShoppingListCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitEntity'
                spyMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
                spyMerchantRelationshipToCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipToCompanyBusinessUnitEntity'
        SpyCompanyEntity:
            properties:
                idCompany:
                    type: integer
                fkCompanyType:
                    type: integer
                isActive:
                    type: boolean
                key:
                    type: string
                name:
                    type: string
                status:
                    type: string
                uuid:
                    type: string
                companyType:
                    $ref: '#/components/schemas/SpyCompanyTypeEntity'
                spyCompanyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
                spyCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyCompanyRoles:
                    items:
                        $ref: '#/components/schemas/SpyCompanyRoleEntity'
                spyCompanyStores:
                    items:
                        $ref: '#/components/schemas/SpyCompanyStoreEntity'
                spyPriceProducts:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductEntity'
                spyCompanySupplierToProducts:
                    items:
                        $ref: '#/components/schemas/SpyCompanySupplierToProductEntity'
        SpyCompanyRoleEntity:
            properties:
                idCompanyRole:
                    type: integer
                fkCompany:
                    type: integer
                isDefault:
                    type: boolean
                key:
                    type: string
                name:
                    type: string
                uuid:
                    type: string
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                spyCompanyRoleToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyCompanyRoleToPermissionEntity'
                spyCompanyRoleToCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyCompanyRoleToCompanyUserEntity'
        SpyCompanyRoleToCompanyUserEntity:
            properties:
                idCompanyRoleToCompanyUser:
                    type: integer
                fkCompanyRole:
                    type: integer
                fkCompanyUser:
                    type: integer
                companyRole:
                    $ref: '#/components/schemas/SpyCompanyRoleEntity'
                companyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
        SpyCompanyRoleToPermissionEntity:
            properties:
                idCompanyRoleToPermission:
                    type: integer
                fkCompanyRole:
                    type: integer
                fkPermission:
                    type: integer
                configuration:
                    type: string
                permission:
                    $ref: '#/components/schemas/SpyPermissionEntity'
                companyRole:
                    $ref: '#/components/schemas/SpyCompanyRoleEntity'
        SpyCompanyStoreEntity:
            properties:
                idCompanyStore:
                    type: integer
                fkCompany:
                    type: integer
                fkStore:
                    type: integer
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyCompanySupplierToProductEntity:
            properties:
                idCompanySupplierToProduct:
                    type: integer
                fkCompany:
                    type: integer
                fkProduct:
                    type: integer
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyCompanyTypeEntity:
            properties:
                idCompanyType:
                    type: integer
                name:
                    type: string
                spyCompanies:
                    items:
                        $ref: '#/components/schemas/SpyCompanyEntity'
        SpyCompanyUnitAddressEntity:
            properties:
                idCompanyUnitAddress:
                    type: integer
                fkCompany:
                    type: integer
                fkCountry:
                    type: integer
                fkRegion:
                    type: integer
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                city:
                    type: string
                comment:
                    type: string
                key:
                    type: string
                phone:
                    type: string
                uuid:
                    type: string
                zipCode:
                    type: string
                country:
                    $ref: '#/components/schemas/SpyCountryEntity'
                region:
                    $ref: '#/components/schemas/SpyRegionEntity'
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                spyCompanyUnitAddressToCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressToCompanyBusinessUnitEntity'
                spyCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyCompanyUnitAddressLabelToCompanyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressLabelToCompanyUnitAddressEntity'
        SpyCompanyUnitAddressLabelEntity:
            properties:
                idCompanyUnitAddressLabel:
                    type: integer
                name:
                    type: string
                spyCompanyUnitAddressLabelToCompanyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressLabelToCompanyUnitAddressEntity'
        SpyCompanyUnitAddressLabelToCompanyUnitAddressEntity:
            properties:
                idCompanyUnitAddressLabelToCompanyUnitAddress:
                    type: integer
                fkCompanyUnitAddress:
                    type: integer
                fkCompanyUnitAddressLabel:
                    type: integer
                companyUnitAddress:
                    $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
                companyUnitAddressLabel:
                    $ref: '#/components/schemas/SpyCompanyUnitAddressLabelEntity'
        SpyCompanyUnitAddressToCompanyBusinessUnitEntity:
            properties:
                idCompanyUnitAddressToCompanyBusinessUnit:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkCompanyUnitAddress:
                    type: integer
                companyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                companyUnitAddress:
                    $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
        SpyCompanyUserEntity:
            properties:
                idCompanyUser:
                    type: integer
                fkCompany:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkCustomer:
                    type: integer
                isActive:
                    type: boolean
                isDefault:
                    type: boolean
                key:
                    type: string
                uuid:
                    type: string
                companyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                customer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                spyCompanyUserInvitations:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserInvitationEntity'
                spyCompanyRoleToCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyCompanyRoleToCompanyUserEntity'
                spyShoppingListCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyUserEntity'
                spyShoppingListCompanyBusinessUnitBlacklists:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitBlacklistEntity'
                spyQuoteApprovals:
                    items:
                        $ref: '#/components/schemas/SpyQuoteApprovalEntity'
                spyQuoteCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyQuoteCompanyUserEntity'
                spyQuoteRequests:
                    items:
                        $ref: '#/components/schemas/SpyQuoteRequestEntity'
        SpyCompanyUserInvitationEntity:
            properties:
                idCompanyUserInvitation:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkCompanyUser:
                    type: integer
                fkCompanyUserInvitationStatus:
                    type: integer
                email:
                    type: string
                firstName:
                    type: string
                hash:
                    type: string
                lastName:
                    type: string
                spyCompanyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyCompanyUserInvitationStatus:
                    $ref: '#/components/schemas/SpyCompanyUserInvitationStatusEntity'
                spyCompanyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
        SpyCompanyUserInvitationStatusEntity:
            properties:
                idCompanyUserInvitationStatus:
                    type: integer
                statusKey:
                    type: string
                spyCompanyUserInvitations:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserInvitationEntity'
        SpyContentEntity:
            properties:
                idContent:
                    type: integer
                contentTermKey:
                    type: string
                contentTypeKey:
                    type: string
                description:
                    type: string
                key:
                    type: string
                name:
                    type: string
                spyContentLocalizeds:
                    items:
                        $ref: '#/components/schemas/SpyContentLocalizedEntity'
        SpyContentLocalizedEntity:
            properties:
                idContentLocalized:
                    type: integer
                fkContent:
                    type: integer
                fkLocale:
                    type: integer
                parameters:
                    type: string
                spyContent:
                    $ref: '#/components/schemas/SpyContentEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyCountryEntity:
            properties:
                idCountry:
                    type: integer
                iso2Code:
                    type: string
                iso3Code:
                    type: string
                name:
                    type: string
                postalCodeMandatory:
                    type: boolean
                postalCodeRegex:
                    type: string
                spyCustomerAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCustomerAddressEntity'
                spyCompanyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
                spyRegions:
                    items:
                        $ref: '#/components/schemas/SpyRegionEntity'
                spyTaxRates:
                    items:
                        $ref: '#/components/schemas/SpyTaxRateEntity'
                spySalesOrderAddresses:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderAddressEntity'
                spySalesOrderAddressHistories:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderAddressHistoryEntity'
        SpyCurrencyEntity:
            properties:
                idCurrency:
                    type: integer
                name:
                    type: string
                code:
                    type: string
                symbol:
                    type: string
                spyShipmentMethodPrices:
                    items:
                        $ref: '#/components/schemas/SpyShipmentMethodPriceEntity'
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
                spyMerchantRelationshipSalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipSalesOrderThresholdEntity'
                spyProductOptionValuePrices:
                    items:
                        $ref: '#/components/schemas/SpyProductOptionValuePriceEntity'
                spySalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderThresholdEntity'
                spyPriceProductStores:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductStoreEntity'
                spyDiscountAmounts:
                    items:
                        $ref: '#/components/schemas/SpyDiscountAmountEntity'
        SpyCustomerAddressEntity:
            properties:
                idCustomerAddress:
                    type: integer
                fkCountry:
                    type: integer
                fkCustomer:
                    type: integer
                fkRegion:
                    type: integer
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                anonymizedAt:
                    type: string
                city:
                    type: string
                comment:
                    type: string
                company:
                    type: string
                deletedAt:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                phone:
                    type: string
                salutation:
                    type: string
                uuid:
                    type: string
                zipCode:
                    type: string
                customer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                region:
                    $ref: '#/components/schemas/SpyRegionEntity'
                country:
                    $ref: '#/components/schemas/SpyCountryEntity'
                spyCustomers:
                    items:
                        $ref: '#/components/schemas/SpyCustomerEntity'
        SpyCustomerEntity:
            properties:
                idCustomer:
                    type: integer
                fkLocale:
                    type: integer
                fkUser:
                    type: integer
                anonymizedAt:
                    type: string
                company:
                    type: string
                customerReference:
                    type: string
                dateOfBirth:
                    type: string
                defaultBillingAddress:
                    type: integer
                defaultShippingAddress:
                    type: integer
                email:
                    type: string
                firstName:
                    type: string
                gender:
                    type: string
                lastName:
                    type: string
                password:
                    type: string
                phone:
                    type: string
                registered:
                    type: string
                registrationKey:
                    type: string
                restorePasswordDate:
                    type: string
                restorePasswordKey:
                    type: string
                salutation:
                    type: string
                billingAddress:
                    $ref: '#/components/schemas/SpyCustomerAddressEntity'
                shippingAddress:
                    $ref: '#/components/schemas/SpyCustomerAddressEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyUser:
                    $ref: '#/components/schemas/SpyUserEntity'
                spyCustomerAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCustomerAddressEntity'
                spyCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyWishlists:
                    items:
                        $ref: '#/components/schemas/SpyWishlistEntity'
                spyNewsletterSubscribers:
                    items:
                        $ref: '#/components/schemas/SpyNewsletterSubscriberEntity'
                spyComments:
                    items:
                        $ref: '#/components/schemas/SpyCommentEntity'
                spyCustomerGroupToCustomers:
                    items:
                        $ref: '#/components/schemas/SpyCustomerGroupToCustomerEntity'
                spyCustomerNotes:
                    items:
                        $ref: '#/components/schemas/SpyCustomerNoteEntity'
        SpyCustomerGroupEntity:
            properties:
                idCustomerGroup:
                    type: integer
                description:
                    type: string
                name:
                    type: string
                spyCustomerGroupToCustomers:
                    items:
                        $ref: '#/components/schemas/SpyCustomerGroupToCustomerEntity'
        SpyCustomerGroupToCustomerEntity:
            properties:
                idCustomerGroupToCustomer:
                    type: integer
                fkCustomer:
                    type: integer
                fkCustomerGroup:
                    type: integer
                customerGroup:
                    $ref: '#/components/schemas/SpyCustomerGroupEntity'
                customer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
        SpyCustomerNoteEntity:
            properties:
                idCustomerNote:
                    type: integer
                fkCustomer:
                    type: integer
                fkUser:
                    type: integer
                createdAt:
                    type: string
                message:
                    type: string
                updatedAt:
                    type: string
                username:
                    type: string
                customer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                user:
                    $ref: '#/components/schemas/SpyUserEntity'
        SpyDatasetColumnEntity:
            properties:
                idDatasetColumn:
                    type: integer
                title:
                    type: string
                spyDatasetRowColumnValues:
                    items:
                        $ref: '#/components/schemas/SpyDatasetRowColumnValueEntity'
        SpyDatasetEntity:
            properties:
                idDataset:
                    type: integer
                isActive:
                    type: boolean
                name:
                    type: string
                spyDatasetRowColumnValues:
                    items:
                        $ref: '#/components/schemas/SpyDatasetRowColumnValueEntity'
                spyDatasetLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyDatasetLocalizedAttributesEntity'
        SpyDatasetLocalizedAttributesEntity:
            properties:
                idDatasetLocalizedAttributes:
                    type: integer
                fkDataset:
                    type: integer
                fkLocale:
                    type: integer
                title:
                    type: string
                spyDataset:
                    $ref: '#/components/schemas/SpyDatasetEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyDatasetRowColumnValueEntity:
            properties:
                idRowColumnValue:
                    type: integer
                fkDataset:
                    type: integer
                fkDatasetColumn:
                    type: integer
                fkDatasetRow:
                    type: integer
                value:
                    type: string
                spyDataset:
                    $ref: '#/components/schemas/SpyDatasetEntity'
                spyDatasetRow:
                    $ref: '#/components/schemas/SpyDatasetRowEntity'
                spyDatasetColumn:
                    $ref: '#/components/schemas/SpyDatasetColumnEntity'
        SpyDatasetRowEntity:
            properties:
                idDatasetRow:
                    type: integer
                title:
                    type: string
                spyDatasetRowColumnValues:
                    items:
                        $ref: '#/components/schemas/SpyDatasetRowColumnValueEntity'
        SpyDiscountAmountEntity:
            properties:
                idDiscountAmount:
                    type: integer
                fkCurrency:
                    type: integer
                fkDiscount:
                    type: integer
                grossAmount:
                    type: integer
                netAmount:
                    type: integer
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                discount:
                    $ref: '#/components/schemas/SpyDiscountEntity'
        SpyDiscountEntity:
            properties:
                idDiscount:
                    type: integer
                fkDiscountVoucherPool:
                    type: integer
                fkStore:
                    type: integer
                amount:
                    type: integer
                calculatorPlugin:
                    type: string
                collectorQueryString:
                    type: string
                decisionRuleQueryString:
                    type: string
                description:
                    type: string
                discountKey:
                    type: string
                discountType:
                    type: string
                displayName:
                    type: string
                isActive:
                    type: boolean
                isExclusive:
                    type: boolean
                minimumItemAmount:
                    type: integer
                validFrom:
                    type: string
                validTo:
                    type: string
                voucherPool:
                    $ref: '#/components/schemas/SpyDiscountVoucherPoolEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                spyDiscountStores:
                    items:
                        $ref: '#/components/schemas/SpyDiscountStoreEntity'
                spyDiscountAmounts:
                    items:
                        $ref: '#/components/schemas/SpyDiscountAmountEntity'
                spyDiscountPromotions:
                    items:
                        $ref: '#/components/schemas/SpyDiscountPromotionEntity'
        SpyDiscountPromotionEntity:
            properties:
                idDiscountPromotion:
                    type: integer
                fkDiscount:
                    type: integer
                abstractSku:
                    type: string
                quantity:
                    type: integer
                discount:
                    $ref: '#/components/schemas/SpyDiscountEntity'
        SpyDiscountStoreEntity:
            properties:
                idDiscountStore:
                    type: integer
                fkDiscount:
                    type: integer
                fkStore:
                    type: integer
                spyDiscount:
                    $ref: '#/components/schemas/SpyDiscountEntity'
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyDiscountVoucherEntity:
            properties:
                idDiscountVoucher:
                    type: integer
                fkDiscountVoucherPool:
                    type: integer
                code:
                    type: string
                isActive:
                    type: boolean
                maxNumberOfUses:
                    type: integer
                numberOfUses:
                    type: integer
                voucherBatch:
                    type: integer
                voucherPool:
                    $ref: '#/components/schemas/SpyDiscountVoucherPoolEntity'
        SpyDiscountVoucherPoolEntity:
            properties:
                idDiscountVoucherPool:
                    type: integer
                isActive:
                    type: boolean
                name:
                    type: string
                spyDiscounts:
                    items:
                        $ref: '#/components/schemas/SpyDiscountEntity'
                spyDiscountVouchers:
                    items:
                        $ref: '#/components/schemas/SpyDiscountVoucherEntity'
        SpyFileDirectoryEntity:
            properties:
                idFileDirectory:
                    type: integer
                fkParentFileDirectory:
                    type: integer
                isActive:
                    type: boolean
                name:
                    type: string
                position:
                    type: integer
                parentFileDirectory:
                    $ref: '#/components/schemas/SpyFileDirectoryEntity'
                spyFiles:
                    items:
                        $ref: '#/components/schemas/SpyFileEntity'
                spyFileDirectories:
                    items:
                        $ref: '#/components/schemas/SpyFileDirectoryEntity'
                spyFileDirectoryLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyFileDirectoryLocalizedAttributesEntity'
        SpyFileDirectoryLocalizedAttributesEntity:
            properties:
                idFileDirectoryLocalizedAttributes:
                    type: integer
                fkFileDirectory:
                    type: integer
                fkLocale:
                    type: integer
                title:
                    type: string
                spyFileDirectory:
                    $ref: '#/components/schemas/SpyFileDirectoryEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyFileEntity:
            properties:
                idFile:
                    type: integer
                fkFileDirectory:
                    type: integer
                fileName:
                    type: string
                fileDirectory:
                    $ref: '#/components/schemas/SpyFileDirectoryEntity'
                spyFileInfos:
                    items:
                        $ref: '#/components/schemas/SpyFileInfoEntity'
                spyFileLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyFileLocalizedAttributesEntity'
        SpyFileInfoEntity:
            properties:
                idFileInfo:
                    type: integer
                fkFile:
                    type: integer
                extension:
                    type: string
                size:
                    type: integer
                storageFileName:
                    type: string
                storageName:
                    type: string
                type:
                    type: string
                version:
                    type: integer
                versionName:
                    type: string
                file:
                    $ref: '#/components/schemas/SpyFileEntity'
        SpyFileLocalizedAttributesEntity:
            properties:
                idFileLocalizedAttributes:
                    type: integer
                fkFile:
                    type: integer
                fkLocale:
                    type: integer
                alt:
                    type: string
                title:
                    type: string
                spyFile:
                    $ref: '#/components/schemas/SpyFileEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyGiftCardBalanceLogEntity:
            properties:
                idGiftCardBalanceLog:
                    type: integer
                fkGiftCard:
                    type: integer
                fkSalesOrder:
                    type: integer
                value:
                    type: integer
                createdAt:
                    type: string
                spyGiftCard:
                    $ref: '#/components/schemas/SpyGiftCardEntity'
                spySalesOrder:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
        SpyGiftCardEntity:
            properties:
                idGiftCard:
                    type: integer
                attributes:
                    type: string
                code:
                    type: string
                currencyIsoCode:
                    type: string
                isActive:
                    type: boolean
                name:
                    type: string
                replacementPattern:
                    type: string
                value:
                    type: integer
                spyGiftCardBalanceLogs:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardBalanceLogEntity'
        SpyGiftCardProductAbstractConfigurationEntity:
            properties:
                idGiftCardProductAbstractConfiguration:
                    type: integer
                codePattern:
                    type: string
                spyGiftCardProductAbstractConfigurationLinks:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardProductAbstractConfigurationLinkEntity'
        SpyGiftCardProductAbstractConfigurationLinkEntity:
            properties:
                idGiftCardProductAbstractConfigurationLink:
                    type: integer
                fkGiftCardProductAbstractConfiguration:
                    type: integer
                fkProductAbstract:
                    type: integer
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyGiftCardProductAbstractConfiguration:
                    $ref: '#/components/schemas/SpyGiftCardProductAbstractConfigurationEntity'
        SpyGiftCardProductConfigurationEntity:
            properties:
                idGiftCardProductConfiguration:
                    type: integer
                value:
                    type: integer
                spyGiftCardProductConfigurationLinks:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardProductConfigurationLinkEntity'
        SpyGiftCardProductConfigurationLinkEntity:
            properties:
                idGiftCardProductConfigurationLink:
                    type: integer
                fkGiftCardProductConfiguration:
                    type: integer
                fkProduct:
                    type: integer
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
                spyGiftCardProductConfiguration:
                    $ref: '#/components/schemas/SpyGiftCardProductConfigurationEntity'
        SpyGlossaryKeyEntity:
            properties:
                idGlossaryKey:
                    type: integer
                isActive:
                    type: boolean
                key:
                    type: string
                spyGlossaryTranslations:
                    items:
                        $ref: '#/components/schemas/SpyGlossaryTranslationEntity'
                spyCmsBlockGlossaryKeyMappings:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockGlossaryKeyMappingEntity'
                spyCmsGlossaryKeyMappings:
                    items:
                        $ref: '#/components/schemas/SpyCmsGlossaryKeyMappingEntity'
        SpyGlossaryTranslationEntity:
            properties:
                idGlossaryTranslation:
                    type: integer
                fkGlossaryKey:
                    type: integer
                fkLocale:
                    type: integer
                isActive:
                    type: boolean
                value:
                    type: string
                glossaryKey:
                    $ref: '#/components/schemas/SpyGlossaryKeyEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyLocaleEntity:
            properties:
                idLocale:
                    type: integer
                localeName:
                    type: string
                isActive:
                    type: boolean
                spyFileLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyFileLocalizedAttributesEntity'
                spyFileDirectoryLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyFileDirectoryLocalizedAttributesEntity'
                spyProductDiscontinuedNotes:
                    items:
                        $ref: '#/components/schemas/SpyProductDiscontinuedNoteEntity'
                spyCustomers:
                    items:
                        $ref: '#/components/schemas/SpyCustomerEntity'
                spyProductReviews:
                    items:
                        $ref: '#/components/schemas/SpyProductReviewEntity'
                spyContentLocalizeds:
                    items:
                        $ref: '#/components/schemas/SpyContentLocalizedEntity'
                spyProductImageSets:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetEntity'
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
                spyNavigationNodeLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyNavigationNodeLocalizedAttributesEntity'
                spyProductManagementAttributeValueTranslations:
                    items:
                        $ref: '#/components/schemas/SpyProductManagementAttributeValueTranslationEntity'
                spyCategoryImageSets:
                    items:
                        $ref: '#/components/schemas/SpyCategoryImageSetEntity'
                spyTouchStorages:
                    items:
                        $ref: '#/components/schemas/SpyTouchStorageEntity'
                spyTouchSearches:
                    items:
                        $ref: '#/components/schemas/SpyTouchSearchEntity'
                spyGlossaryTranslations:
                    items:
                        $ref: '#/components/schemas/SpyGlossaryTranslationEntity'
                spyProductSetDatas:
                    items:
                        $ref: '#/components/schemas/SpyProductSetDataEntity'
                spyProductSearches:
                    items:
                        $ref: '#/components/schemas/SpyProductSearchEntity'
                spyCategoryAttributes:
                    items:
                        $ref: '#/components/schemas/SpyCategoryAttributeEntity'
                spyProductLabelLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductLabelLocalizedAttributesEntity'
                spyUsers:
                    items:
                        $ref: '#/components/schemas/SpyUserEntity'
                spyAvailabilityNotificationSubscriptions:
                    items:
                        $ref: '#/components/schemas/SpyAvailabilityNotificationSubscriptionEntity'
                spyProductAbstractLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractLocalizedAttributesEntity'
                spyProductLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductLocalizedAttributesEntity'
                spyDatasetLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyDatasetLocalizedAttributesEntity'
                spySalesOrders:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderEntity'
                spyCmsPageLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyCmsPageLocalizedAttributesEntity'
        SpyMerchantEntity:
            properties:
                idMerchant:
                    type: integer
                merchantKey:
                    type: string
                name:
                    type: string
                spyProductAbstractMerchants:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractMerchantEntity'
                spyMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
        SpyMerchantRelationshipEntity:
            properties:
                idMerchantRelationship:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkMerchant:
                    type: integer
                merchantRelationshipKey:
                    type: string
                merchant:
                    $ref: '#/components/schemas/SpyMerchantEntity'
                companyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyMerchantRelationshipSalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipSalesOrderThresholdEntity'
                spyMerchantRelationshipToCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipToCompanyBusinessUnitEntity'
                spyPriceProductMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductMerchantRelationshipEntity'
                spyProductLists:
                    items:
                        $ref: '#/components/schemas/SpyProductListEntity'
        SpyMerchantRelationshipSalesOrderThresholdEntity:
            properties:
                idMerchantRelationshipSalesOrderThreshold:
                    type: integer
                fkCurrency:
                    type: integer
                fkMerchantRelationship:
                    type: integer
                fkSalesOrderThresholdType:
                    type: integer
                fkStore:
                    type: integer
                fee:
                    type: integer
                messageGlossaryKey:
                    type: string
                threshold:
                    type: integer
                merchantRelationship:
                    $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
                salesOrderThresholdType:
                    $ref: '#/components/schemas/SpySalesOrderThresholdTypeEntity'
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyMerchantRelationshipToCompanyBusinessUnitEntity:
            properties:
                idMerchantRelationshipToCompanyBusinessUnit:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkMerchantRelationship:
                    type: integer
                merchantRelationship:
                    $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
                companyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
        SpyNavigationEntity:
            properties:
                idNavigation:
                    type: integer
                isActive:
                    type: boolean
                key:
                    type: string
                name:
                    type: string
                spyNavigationNodes:
                    items:
                        $ref: '#/components/schemas/SpyNavigationNodeEntity'
        SpyNavigationNodeEntity:
            properties:
                idNavigationNode:
                    type: integer
                fkNavigation:
                    type: integer
                fkParentNavigationNode:
                    type: integer
                isActive:
                    type: boolean
                nodeKey:
                    type: string
                nodeType:
                    type: string
                position:
                    type: integer
                validFrom:
                    type: string
                validTo:
                    type: string
                parentNavigationNode:
                    $ref: '#/components/schemas/SpyNavigationNodeEntity'
                spyNavigation:
                    $ref: '#/components/schemas/SpyNavigationEntity'
                spyNavigationNodes:
                    items:
                        $ref: '#/components/schemas/SpyNavigationNodeEntity'
                spyNavigationNodeLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyNavigationNodeLocalizedAttributesEntity'
        SpyNavigationNodeLocalizedAttributesEntity:
            properties:
                idNavigationNodeLocalizedAttributes:
                    type: integer
                fkLocale:
                    type: integer
                fkNavigationNode:
                    type: integer
                fkUrl:
                    type: integer
                cssClass:
                    type: string
                externalUrl:
                    type: string
                link:
                    type: string
                title:
                    type: string
                spyNavigationNode:
                    $ref: '#/components/schemas/SpyNavigationNodeEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyUrl:
                    $ref: '#/components/schemas/SpyUrlEntity'
        SpyNewsletterSubscriberEntity:
            properties:
                idNewsletterSubscriber:
                    type: integer
                fkCustomer:
                    type: integer
                email:
                    type: string
                isConfirmed:
                    type: boolean
                subscriberKey:
                    type: string
                spyCustomer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                spyNewsletterSubscriptions:
                    items:
                        $ref: '#/components/schemas/SpyNewsletterSubscriptionEntity'
        SpyNewsletterSubscriptionEntity:
            properties:
                fkNewsletterSubscriber:
                    type: integer
                fkNewsletterType:
                    type: integer
                spyNewsletterSubscriber:
                    $ref: '#/components/schemas/SpyNewsletterSubscriberEntity'
                spyNewsletterType:
                    $ref: '#/components/schemas/SpyNewsletterTypeEntity'
        SpyNewsletterTypeEntity:
            properties:
                idNewsletterType:
                    type: integer
                name:
                    type: string
                spyNewsletterSubscriptions:
                    items:
                        $ref: '#/components/schemas/SpyNewsletterSubscriptionEntity'
        SpyNopaymentPaidEntity:
            properties:
                idNopaymentPaid:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpyOfferEntity:
            properties:
                idOffer:
                    type: integer
                fkUser:
                    type: integer
                contactDate:
                    type: string
                contactPerson:
                    type: string
                customerReference:
                    type: string
                note:
                    type: string
                quoteData:
                    type: string
                status:
                    type: string
                user:
                    $ref: '#/components/schemas/SpyUserEntity'
        SpyOmsEventTimeoutEntity:
            properties:
                idOmsEventTimeout:
                    type: integer
                fkOmsOrderItemState:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                event:
                    type: string
                timeout:
                    type: string
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
                state:
                    $ref: '#/components/schemas/SpyOmsOrderItemStateEntity'
        SpyOmsOrderItemStateEntity:
            properties:
                idOmsOrderItemState:
                    type: integer
                description:
                    type: string
                name:
                    type: string
                spyOmsOrderItemStateHistories:
                    items:
                        $ref: '#/components/schemas/SpyOmsOrderItemStateHistoryEntity'
                spyOmsEventTimeouts:
                    items:
                        $ref: '#/components/schemas/SpyOmsEventTimeoutEntity'
                spySalesOrderItems:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpyOmsOrderItemStateHistoryEntity:
            properties:
                idOmsOrderItemStateHistory:
                    type: integer
                fkOmsOrderItemState:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
                state:
                    $ref: '#/components/schemas/SpyOmsOrderItemStateEntity'
        SpyOmsOrderProcessEntity:
            properties:
                idOmsOrderProcess:
                    type: integer
                name:
                    type: string
                spyOmsTransitionLogs:
                    items:
                        $ref: '#/components/schemas/SpyOmsTransitionLogEntity'
                spySalesOrderItems:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpyOmsProductReservationEntity:
            properties:
                idOmsProductReservation:
                    type: integer
                fkStore:
                    type: integer
                reservationQuantity:
                    type: integer
                sku:
                    type: string
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyOmsTransitionLogEntity:
            properties:
                idOmsTransitionLog:
                    type: integer
                fkOmsOrderProcess:
                    type: integer
                fkSalesOrder:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                command:
                    type: string
                condition:
                    type: string
                errorMessage:
                    type: string
                event:
                    type: string
                hostname:
                    type: string
                isError:
                    type: boolean
                locked:
                    type: boolean
                params:
                    type: array
                    items: {  }
                path:
                    type: string
                quantity:
                    type: integer
                sourceState:
                    type: string
                targetState:
                    type: string
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
                process:
                    $ref: '#/components/schemas/SpyOmsOrderProcessEntity'
        SpyOrderSourceEntity:
            properties:
                idOrderSource:
                    type: integer
                name:
                    type: string
                spySalesOrders:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderEntity'
        SpyPaymentGiftCardEntity:
            properties:
                idPaymentGiftCard:
                    type: integer
                fkSalesPayment:
                    type: integer
                code:
                    type: string
                spySalesPayment:
                    $ref: '#/components/schemas/SpySalesPaymentEntity'
        SpyPermissionEntity:
            properties:
                idPermission:
                    type: integer
                key:
                    type: string
                configurationSignature:
                    type: string
                spyCompanyRoleToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyCompanyRoleToPermissionEntity'
                spyShoppingListPermissionGroupToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListPermissionGroupToPermissionEntity'
                spyQuotePermissionGroupToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyQuotePermissionGroupToPermissionEntity'
        SpyPriceProductDefaultEntity:
            properties:
                idPriceProductDefault:
                    type: string
                fkPriceProductStore:
                    type: string
                priceProductStore:
                    $ref: '#/components/schemas/SpyPriceProductStoreEntity'
        SpyPriceProductEntity:
            properties:
                idPriceProduct:
                    type: integer
                fkCompany:
                    type: integer
                fkPriceType:
                    type: integer
                fkProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                price:
                    type: integer
                company:
                    $ref: '#/components/schemas/SpyCompanyEntity'
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                priceType:
                    $ref: '#/components/schemas/SpyPriceTypeEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyPriceProductStores:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductStoreEntity'
        SpyPriceProductMerchantRelationshipEntity:
            properties:
                idPriceProductMerchantRelationship:
                    type: string
                fkMerchantRelationship:
                    type: integer
                fkPriceProductStore:
                    type: string
                fkProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                priceProductStore:
                    $ref: '#/components/schemas/SpyPriceProductStoreEntity'
                merchantRelationship:
                    $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                productAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyPriceProductScheduleEntity:
            properties:
                idPriceProductSchedule:
                    type: string
                fkCurrency:
                    type: integer
                fkStore:
                    type: integer
                fkPriceType:
                    type: integer
                fkProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkPriceProductScheduleList:
                    type: string
                netPrice:
                    type: integer
                grossPrice:
                    type: integer
                priceData:
                    type: string
                activeFrom:
                    type: string
                activeTo:
                    type: string
                isCurrent:
                    type: boolean
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                productAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                priceType:
                    $ref: '#/components/schemas/SpyPriceTypeEntity'
                priceProductScheduleList:
                    $ref: '#/components/schemas/SpyPriceProductScheduleListEntity'
        SpyPriceProductScheduleListEntity:
            properties:
                idPriceProductScheduleList:
                    type: string
                name:
                    type: string
                isActive:
                    type: boolean
                fkUser:
                    type: integer
                user:
                    $ref: '#/components/schemas/SpyUserEntity'
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
        SpyPriceProductStoreEntity:
            properties:
                idPriceProductStore:
                    type: string
                fkCurrency:
                    type: integer
                fkPriceProduct:
                    type: integer
                fkStore:
                    type: integer
                grossPrice:
                    type: integer
                netPrice:
                    type: integer
                priceData:
                    type: string
                priceDataChecksum:
                    type: string
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                priceProduct:
                    $ref: '#/components/schemas/SpyPriceProductEntity'
                spyPriceProductMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductMerchantRelationshipEntity'
                spyPriceProductDefaults:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductDefaultEntity'
        SpyPriceTypeEntity:
            properties:
                idPriceType:
                    type: integer
                name:
                    type: string
                priceModeConfiguration:
                    type: string
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
                spyPriceProducts:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductEntity'
        SpyProductAbstractEntity:
            properties:
                idProductAbstract:
                    type: integer
                fkTaxSet:
                    type: integer
                attributes:
                    type: string
                colorCode:
                    type: string
                newFrom:
                    type: string
                newTo:
                    type: string
                sku:
                    type: string
                spyTaxSet:
                    $ref: '#/components/schemas/SpyTaxSetEntity'
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
                spyProductLabelProductAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyProductLabelProductAbstractEntity'
                spyProductReviews:
                    items:
                        $ref: '#/components/schemas/SpyProductReviewEntity'
                spyProductImageSets:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetEntity'
                spyProductAbstractMerchants:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractMerchantEntity'
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
                spyCmsBlockProductConnectors:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockProductConnectorEntity'
                spyProductAbstractGroups:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractGroupEntity'
                spyProductCategories:
                    items:
                        $ref: '#/components/schemas/SpyProductCategoryEntity'
                spyProductMeasurementBaseUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementBaseUnitEntity'
                spyProductAbstractProductOptionGroups:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractProductOptionGroupEntity'
                spyProductAbstractSets:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractSetEntity'
                spyProductRelations:
                    items:
                        $ref: '#/components/schemas/SpyProductRelationEntity'
                spyProductRelationProductAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyProductRelationProductAbstractEntity'
                spyPriceProductMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductMerchantRelationshipEntity'
                spyPriceProducts:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductEntity'
                spyProductPackagingLeadProducts:
                    items:
                        $ref: '#/components/schemas/SpyProductPackagingLeadProductEntity'
                spyProductAlternatives:
                    items:
                        $ref: '#/components/schemas/SpyProductAlternativeEntity'
                spyProducts:
                    items:
                        $ref: '#/components/schemas/SpyProductEntity'
                spyProductAbstractLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractLocalizedAttributesEntity'
                spyProductAbstractStores:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractStoreEntity'
                spyGiftCardProductAbstractConfigurationLinks:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardProductAbstractConfigurationLinkEntity'
        SpyProductAbstractGroupEntity:
            properties:
                fkProductAbstract:
                    type: integer
                fkProductGroup:
                    type: integer
                position:
                    type: integer
                spyProductGroup:
                    $ref: '#/components/schemas/SpyProductGroupEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductAbstractLocalizedAttributesEntity:
            properties:
                idAbstractAttributes:
                    type: integer
                fkLocale:
                    type: integer
                fkProductAbstract:
                    type: integer
                attributes:
                    type: string
                description:
                    type: string
                metaDescription:
                    type: string
                metaKeywords:
                    type: string
                metaTitle:
                    type: string
                name:
                    type: string
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductAbstractMerchantEntity:
            properties:
                idProductAbstractMerchant:
                    type: integer
                fkMerchant:
                    type: integer
                fkProductAbstract:
                    type: integer
                merchant:
                    $ref: '#/components/schemas/SpyMerchantEntity'
                productAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductAbstractProductOptionGroupEntity:
            properties:
                fkProductAbstract:
                    type: integer
                fkProductOptionGroup:
                    type: integer
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyProductOptionGroup:
                    $ref: '#/components/schemas/SpyProductOptionGroupEntity'
        SpyProductAbstractSetEntity:
            properties:
                idProductAbstractSet:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkProductSet:
                    type: integer
                position:
                    type: integer
                spyProductSet:
                    $ref: '#/components/schemas/SpyProductSetEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductAbstractStoreEntity:
            properties:
                idProductAbstractStore:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkStore:
                    type: integer
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpyProductAlternativeEntity:
            properties:
                idProductAlternative:
                    type: integer
                fkProduct:
                    type: integer
                fkProductAbstractAlternative:
                    type: integer
                fkProductConcreteAlternative:
                    type: integer
                productConcrete:
                    $ref: '#/components/schemas/SpyProductEntity'
                productAbstractAlternative:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                productConcreteAlternative:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyProductAttributeKeyEntity:
            properties:
                idProductAttributeKey:
                    type: integer
                isSuper:
                    type: boolean
                key:
                    type: string
                spyProductManagementAttributes:
                    items:
                        $ref: '#/components/schemas/SpyProductManagementAttributeEntity'
                spyProductSearchAttributeMaps:
                    items:
                        $ref: '#/components/schemas/SpyProductSearchAttributeMapEntity'
                spyProductSearchAttributes:
                    items:
                        $ref: '#/components/schemas/SpyProductSearchAttributeEntity'
        SpyProductBundleEntity:
            properties:
                idProductBundle:
                    type: integer
                fkBundledProduct:
                    type: integer
                fkProduct:
                    type: integer
                quantity:
                    type: integer
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyProductCategoryEntity:
            properties:
                idProductCategory:
                    type: integer
                fkCategory:
                    type: integer
                fkProductAbstract:
                    type: integer
                productOrder:
                    type: integer
                spyCategory:
                    $ref: '#/components/schemas/SpyCategoryEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductCategoryFilterEntity:
            properties:
                idProductCategoryFilter:
                    type: integer
                fkCategory:
                    type: integer
                filterData:
                    type: string
                spyCategory:
                    $ref: '#/components/schemas/SpyCategoryEntity'
        SpyProductDiscontinuedEntity:
            properties:
                idProductDiscontinued:
                    type: integer
                fkProduct:
                    type: integer
                activeUntil:
                    type: string
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                spyProductDiscontinuedNotes:
                    items:
                        $ref: '#/components/schemas/SpyProductDiscontinuedNoteEntity'
        SpyProductDiscontinuedNoteEntity:
            properties:
                idProductDiscontinuedNote:
                    type: integer
                fkLocale:
                    type: integer
                fkProductDiscontinued:
                    type: integer
                note:
                    type: string
                productDiscontinued:
                    $ref: '#/components/schemas/SpyProductDiscontinuedEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductEntity:
            properties:
                idProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                attributes:
                    type: string
                discount:
                    type: integer
                isActive:
                    type: boolean
                isQuantitySplittable:
                    type: boolean
                sku:
                    type: string
                warehouses:
                    type: string
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyProductBundles:
                    items:
                        $ref: '#/components/schemas/SpyProductBundleEntity'
                spyProductDiscontinueds:
                    items:
                        $ref: '#/components/schemas/SpyProductDiscontinuedEntity'
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
                spyWishlistItems:
                    items:
                        $ref: '#/components/schemas/SpyWishlistItemEntity'
                spyProductImageSets:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetEntity'
                spyStockProducts:
                    items:
                        $ref: '#/components/schemas/SpyStockProductEntity'
                spyProductMeasurementSalesUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementSalesUnitEntity'
                spyProductValidities:
                    items:
                        $ref: '#/components/schemas/SpyProductValidityEntity'
                spyProductSearches:
                    items:
                        $ref: '#/components/schemas/SpyProductSearchEntity'
                spyProductQuantities:
                    items:
                        $ref: '#/components/schemas/SpyProductQuantityEntity'
                spyPriceProductMerchantRelationships:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductMerchantRelationshipEntity'
                spyPriceProducts:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductEntity'
                spyProductPackagingUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductPackagingUnitEntity'
                spyProductPackagingLeadProducts:
                    items:
                        $ref: '#/components/schemas/SpyProductPackagingLeadProductEntity'
                spyProductListProductConcretes:
                    items:
                        $ref: '#/components/schemas/SpyProductListProductConcreteEntity'
                spyProductAlternatives:
                    items:
                        $ref: '#/components/schemas/SpyProductAlternativeEntity'
                spyCompanySupplierToProducts:
                    items:
                        $ref: '#/components/schemas/SpyCompanySupplierToProductEntity'
                spyProductLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductLocalizedAttributesEntity'
                spyGiftCardProductConfigurationLinks:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardProductConfigurationLinkEntity'
        SpyProductGroupEntity:
            properties:
                idProductGroup:
                    type: integer
                productGroupKey:
                    type: string
                spyProductAbstractGroups:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractGroupEntity'
        SpyProductImageEntity:
            properties:
                idProductImage:
                    type: integer
                externalUrlLarge:
                    type: string
                externalUrlSmall:
                    type: string
                spyProductImageSetToProductImages:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetToProductImageEntity'
        SpyProductImageSetEntity:
            properties:
                idProductImageSet:
                    type: integer
                fkLocale:
                    type: integer
                fkProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkResourceProductSet:
                    type: integer
                name:
                    type: string
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyProductSet:
                    $ref: '#/components/schemas/SpyProductSetEntity'
                spyProductImageSetToProductImages:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetToProductImageEntity'
        SpyProductImageSetToProductImageEntity:
            properties:
                idProductImageSetToProductImage:
                    type: integer
                fkProductImage:
                    type: integer
                fkProductImageSet:
                    type: integer
                sortOrder:
                    type: integer
                spyProductImageSet:
                    $ref: '#/components/schemas/SpyProductImageSetEntity'
                spyProductImage:
                    $ref: '#/components/schemas/SpyProductImageEntity'
        SpyProductLabelEntity:
            properties:
                idProductLabel:
                    type: integer
                frontEndReference:
                    type: string
                isActive:
                    type: boolean
                isDynamic:
                    type: boolean
                isExclusive:
                    type: boolean
                isPublished:
                    type: boolean
                name:
                    type: string
                position:
                    type: integer
                validFrom:
                    type: string
                validTo:
                    type: string
                spyProductLabelProductAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyProductLabelProductAbstractEntity'
                spyProductLabelLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyProductLabelLocalizedAttributesEntity'
        SpyProductLabelLocalizedAttributesEntity:
            properties:
                idProductLabelLocalizedAttributes:
                    type: integer
                fkLocale:
                    type: integer
                fkProductLabel:
                    type: integer
                name:
                    type: string
                spyProductLabel:
                    $ref: '#/components/schemas/SpyProductLabelEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductLabelProductAbstractEntity:
            properties:
                idProductLabelProductAbstract:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkProductLabel:
                    type: integer
                spyProductLabel:
                    $ref: '#/components/schemas/SpyProductLabelEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductListCategoryEntity:
            properties:
                fkCategory:
                    type: integer
                fkProductList:
                    type: integer
                spyProductList:
                    $ref: '#/components/schemas/SpyProductListEntity'
                spyCategory:
                    $ref: '#/components/schemas/SpyCategoryEntity'
        SpyProductListEntity:
            properties:
                idProductList:
                    type: integer
                fkMerchantRelationship:
                    type: integer
                key:
                    type: string
                title:
                    type: string
                type:
                    type: string
                spyMerchantRelationship:
                    $ref: '#/components/schemas/SpyMerchantRelationshipEntity'
                spyProductListProductConcretes:
                    items:
                        $ref: '#/components/schemas/SpyProductListProductConcreteEntity'
                spyProductListCategories:
                    items:
                        $ref: '#/components/schemas/SpyProductListCategoryEntity'
        SpyProductListProductConcreteEntity:
            properties:
                fkProduct:
                    type: integer
                fkProductList:
                    type: integer
                spyProductList:
                    $ref: '#/components/schemas/SpyProductListEntity'
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyProductLocalizedAttributesEntity:
            properties:
                idProductAttributes:
                    type: integer
                fkLocale:
                    type: integer
                fkProduct:
                    type: integer
                attributes:
                    type: string
                description:
                    type: string
                isComplete:
                    type: boolean
                name:
                    type: string
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductManagementAttributeEntity:
            properties:
                idProductManagementAttribute:
                    type: integer
                fkProductAttributeKey:
                    type: integer
                allowInput:
                    type: boolean
                inputType:
                    type: string
                spyProductAttributeKey:
                    $ref: '#/components/schemas/SpyProductAttributeKeyEntity'
                spyProductManagementAttributeValues:
                    items:
                        $ref: '#/components/schemas/SpyProductManagementAttributeValueEntity'
        SpyProductManagementAttributeValueEntity:
            properties:
                idProductManagementAttributeValue:
                    type: integer
                fkProductManagementAttribute:
                    type: integer
                value:
                    type: string
                spyProductManagementAttribute:
                    $ref: '#/components/schemas/SpyProductManagementAttributeEntity'
                spyProductManagementAttributeValueTranslations:
                    items:
                        $ref: '#/components/schemas/SpyProductManagementAttributeValueTranslationEntity'
        SpyProductManagementAttributeValueTranslationEntity:
            properties:
                idProductManagementAttributeValueTranslation:
                    type: integer
                fkLocale:
                    type: integer
                fkProductManagementAttributeValue:
                    type: integer
                translation:
                    type: string
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyProductManagementAttributeValue:
                    $ref: '#/components/schemas/SpyProductManagementAttributeValueEntity'
        SpyProductMeasurementBaseUnitEntity:
            properties:
                idProductMeasurementBaseUnit:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkProductMeasurementUnit:
                    type: integer
                productAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                productMeasurementUnit:
                    $ref: '#/components/schemas/SpyProductMeasurementUnitEntity'
                spyProductMeasurementSalesUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementSalesUnitEntity'
        SpyProductMeasurementSalesUnitEntity:
            properties:
                idProductMeasurementSalesUnit:
                    type: integer
                fkProduct:
                    type: integer
                fkProductMeasurementBaseUnit:
                    type: integer
                fkProductMeasurementUnit:
                    type: integer
                conversion:
                    type: number
                isDefault:
                    type: boolean
                isDisplayed:
                    type: boolean
                key:
                    type: string
                precision:
                    type: integer
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                productMeasurementUnit:
                    $ref: '#/components/schemas/SpyProductMeasurementUnitEntity'
                productMeasurementBaseUnit:
                    $ref: '#/components/schemas/SpyProductMeasurementBaseUnitEntity'
                spyProductMeasurementSalesUnitStores:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementSalesUnitStoreEntity'
        SpyProductMeasurementSalesUnitStoreEntity:
            properties:
                idProductMeasurementSalesUnitStore:
                    type: integer
                fkProductMeasurementSalesUnit:
                    type: integer
                fkStore:
                    type: integer
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
                spyProductMeasurementSalesUnit:
                    $ref: '#/components/schemas/SpyProductMeasurementSalesUnitEntity'
        SpyProductMeasurementUnitEntity:
            properties:
                idProductMeasurementUnit:
                    type: integer
                code:
                    type: string
                defaultPrecision:
                    type: integer
                name:
                    type: string
                spyProductMeasurementBaseUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementBaseUnitEntity'
                spyProductMeasurementSalesUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementSalesUnitEntity'
        SpyProductOptionGroupEntity:
            properties:
                idProductOptionGroup:
                    type: integer
                fkTaxSet:
                    type: integer
                active:
                    type: boolean
                name:
                    type: string
                spyTaxSet:
                    $ref: '#/components/schemas/SpyTaxSetEntity'
                spyProductAbstractProductOptionGroups:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractProductOptionGroupEntity'
                spyProductOptionValues:
                    items:
                        $ref: '#/components/schemas/SpyProductOptionValueEntity'
        SpyProductOptionValueEntity:
            properties:
                idProductOptionValue:
                    type: integer
                fkProductOptionGroup:
                    type: integer
                price:
                    type: integer
                sku:
                    type: string
                value:
                    type: string
                spyProductOptionGroup:
                    $ref: '#/components/schemas/SpyProductOptionGroupEntity'
                spyProductOptionValuePrices:
                    items:
                        $ref: '#/components/schemas/SpyProductOptionValuePriceEntity'
                spyShoppingListProductOptions:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListProductOptionEntity'
        SpyProductOptionValuePriceEntity:
            properties:
                idProductOptionValuePrice:
                    type: integer
                fkCurrency:
                    type: integer
                fkProductOptionValue:
                    type: integer
                fkStore:
                    type: integer
                grossPrice:
                    type: integer
                netPrice:
                    type: integer
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                productOptionValue:
                    $ref: '#/components/schemas/SpyProductOptionValueEntity'
        SpyProductPackagingLeadProductEntity:
            properties:
                idProductPackagingLeadProduct:
                    type: integer
                fkProduct:
                    type: integer
                fkProductAbstract:
                    type: integer
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyProductPackagingUnitAmountEntity:
            properties:
                idProductPackagingUnitAmount:
                    type: integer
                fkProductPackagingUnit:
                    type: integer
                amountInterval:
                    type: integer
                amountMax:
                    type: integer
                amountMin:
                    type: integer
                defaultAmount:
                    type: integer
                isVariable:
                    type: boolean
                productPackagingUnit:
                    $ref: '#/components/schemas/SpyProductPackagingUnitEntity'
        SpyProductPackagingUnitEntity:
            properties:
                idProductPackagingUnit:
                    type: integer
                fkProduct:
                    type: integer
                fkProductPackagingUnitType:
                    type: integer
                hasLeadProduct:
                    type: boolean
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
                productPackagingUnitType:
                    $ref: '#/components/schemas/SpyProductPackagingUnitTypeEntity'
                spyProductPackagingUnitAmounts:
                    items:
                        $ref: '#/components/schemas/SpyProductPackagingUnitAmountEntity'
        SpyProductPackagingUnitTypeEntity:
            properties:
                idProductPackagingUnitType:
                    type: integer
                name:
                    type: string
                spyProductPackagingUnits:
                    items:
                        $ref: '#/components/schemas/SpyProductPackagingUnitEntity'
        SpyProductQuantityEntity:
            properties:
                idProductQuantity:
                    type: integer
                fkProduct:
                    type: integer
                quantityInterval:
                    type: integer
                quantityMax:
                    type: integer
                quantityMin:
                    type: integer
                product:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyProductRelationEntity:
            properties:
                idProductRelation:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkProductRelationType:
                    type: integer
                isActive:
                    type: boolean
                isRebuildScheduled:
                    type: boolean
                querySetData:
                    type: string
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyProductRelationType:
                    $ref: '#/components/schemas/SpyProductRelationTypeEntity'
                spyProductRelationProductAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyProductRelationProductAbstractEntity'
        SpyProductRelationProductAbstractEntity:
            properties:
                idProductRelationProductAbstract:
                    type: integer
                fkProductAbstract:
                    type: integer
                fkProductRelation:
                    type: integer
                order:
                    type: integer
                spyProductRelation:
                    $ref: '#/components/schemas/SpyProductRelationEntity'
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
        SpyProductRelationTypeEntity:
            properties:
                idProductRelationType:
                    type: integer
                key:
                    type: string
                spyProductRelations:
                    items:
                        $ref: '#/components/schemas/SpyProductRelationEntity'
        SpyProductReviewEntity:
            properties:
                idProductReview:
                    type: integer
                fkLocale:
                    type: integer
                fkProductAbstract:
                    type: integer
                customerReference:
                    type: string
                description:
                    type: string
                nickname:
                    type: string
                rating:
                    type: integer
                status:
                    type: string
                summary:
                    type: string
                spyProductAbstract:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductSearchAttributeEntity:
            properties:
                idProductSearchAttribute:
                    type: integer
                fkProductAttributeKey:
                    type: integer
                filterType:
                    type: string
                position:
                    type: integer
                synced:
                    type: boolean
                spyProductAttributeKey:
                    $ref: '#/components/schemas/SpyProductAttributeKeyEntity'
        SpyProductSearchAttributeMapEntity:
            properties:
                fkProductAttributeKey:
                    type: integer
                synced:
                    type: boolean
                targetField:
                    type: string
                spyProductAttributeKey:
                    $ref: '#/components/schemas/SpyProductAttributeKeyEntity'
        SpyProductSearchEntity:
            properties:
                idProductSearch:
                    type: integer
                fkLocale:
                    type: integer
                fkProduct:
                    type: integer
                isSearchable:
                    type: boolean
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductSetDataEntity:
            properties:
                idProductSetData:
                    type: integer
                fkLocale:
                    type: integer
                fkProductSet:
                    type: integer
                description:
                    type: string
                metaDescription:
                    type: string
                metaKeywords:
                    type: string
                metaTitle:
                    type: string
                name:
                    type: string
                spyProductSet:
                    $ref: '#/components/schemas/SpyProductSetEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyProductSetEntity:
            properties:
                idProductSet:
                    type: integer
                isActive:
                    type: boolean
                productSetKey:
                    type: string
                weight:
                    type: integer
                spyProductImageSets:
                    items:
                        $ref: '#/components/schemas/SpyProductImageSetEntity'
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
                spyProductAbstractSets:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractSetEntity'
                spyProductSetDatas:
                    items:
                        $ref: '#/components/schemas/SpyProductSetDataEntity'
        SpyProductValidityEntity:
            properties:
                idProductValidity:
                    type: integer
                fkProduct:
                    type: integer
                validFrom:
                    type: string
                validTo:
                    type: string
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
        SpyQuoteApprovalEntity:
            properties:
                idQuoteApproval:
                    type: integer
                fkQuote:
                    type: integer
                fkCompanyUser:
                    type: integer
                status:
                    type: string
                uuid:
                    type: string
                spyCompanyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyQuote:
                    $ref: '#/components/schemas/SpyQuoteEntity'
        SpyQuoteCompanyUserEntity:
            properties:
                idQuoteCompanyUser:
                    type: integer
                fkCompanyUser:
                    type: integer
                fkQuote:
                    type: integer
                fkQuotePermissionGroup:
                    type: integer
                isDefault:
                    type: boolean
                uuid:
                    type: string
                spyCompanyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyQuote:
                    $ref: '#/components/schemas/SpyQuoteEntity'
                spyQuotePermissionGroup:
                    $ref: '#/components/schemas/SpyQuotePermissionGroupEntity'
        SpyQuoteEntity:
            properties:
                idQuote:
                    type: integer
                fkStore:
                    type: integer
                customerReference:
                    type: string
                isDefault:
                    type: boolean
                key:
                    type: string
                name:
                    type: string
                quoteData:
                    type: string
                uuid:
                    type: string
                spyStore:
                    $ref: '#/components/schemas/SpyStoreEntity'
                spyQuoteApprovals:
                    items:
                        $ref: '#/components/schemas/SpyQuoteApprovalEntity'
                spyQuoteCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyQuoteCompanyUserEntity'
        SpyQuotePermissionGroupEntity:
            properties:
                idQuotePermissionGroup:
                    type: integer
                isDefault:
                    type: boolean
                name:
                    type: string
                spyQuoteCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyQuoteCompanyUserEntity'
                spyQuotePermissionGroupToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyQuotePermissionGroupToPermissionEntity'
        SpyQuotePermissionGroupToPermissionEntity:
            properties:
                idQuotePermissionGroupToPermission:
                    type: integer
                fkPermission:
                    type: integer
                fkQuotePermissionGroup:
                    type: integer
                permission:
                    $ref: '#/components/schemas/SpyPermissionEntity'
                quotePermissionGroup:
                    $ref: '#/components/schemas/SpyQuotePermissionGroupEntity'
        SpyQuoteRequestEntity:
            properties:
                idQuoteRequest:
                    type: integer
                fkCompanyUser:
                    type: integer
                quoteRequestReference:
                    type: string
                validUntil:
                    type: string
                status:
                    type: string
                isLatestVersionVisible:
                    type: boolean
                uuid:
                    type: string
                companyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyQuoteRequestVersions:
                    items:
                        $ref: '#/components/schemas/SpyQuoteRequestVersionEntity'
        SpyQuoteRequestVersionEntity:
            properties:
                idQuoteRequestVersion:
                    type: integer
                fkQuoteRequest:
                    type: integer
                version:
                    type: integer
                versionReference:
                    type: string
                metadata:
                    type: string
                quote:
                    type: string
                spyQuoteRequest:
                    $ref: '#/components/schemas/SpyQuoteRequestEntity'
        SpyRefundEntity:
            properties:
                idRefund:
                    type: integer
                fkSalesOrder:
                    type: integer
                amount:
                    type: integer
                comment:
                    type: string
                spySalesOrder:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
        SpyRegionEntity:
            properties:
                idRegion:
                    type: integer
                fkCountry:
                    type: integer
                iso2Code:
                    type: string
                name:
                    type: string
                spyCountry:
                    $ref: '#/components/schemas/SpyCountryEntity'
                spyCustomerAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCustomerAddressEntity'
                spyCompanyUnitAddresses:
                    items:
                        $ref: '#/components/schemas/SpyCompanyUnitAddressEntity'
                spySalesOrderAddresses:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderAddressEntity'
                spySalesOrderAddressHistories:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderAddressHistoryEntity'
        SpySalesDiscountCodeEntity:
            properties:
                idSalesDiscountCode:
                    type: integer
                fkSalesDiscount:
                    type: integer
                code:
                    type: string
                codepoolName:
                    type: string
                isOncePerCustomer:
                    type: boolean
                isRefundable:
                    type: boolean
                isReusable:
                    type: boolean
                discount:
                    $ref: '#/components/schemas/SpySalesDiscountEntity'
        SpySalesDiscountEntity:
            properties:
                idSalesDiscount:
                    type: integer
                fkSalesExpense:
                    type: integer
                fkSalesOrder:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                fkSalesOrderItemOption:
                    type: integer
                amount:
                    type: integer
                description:
                    type: string
                displayName:
                    type: string
                name:
                    type: string
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
                expense:
                    $ref: '#/components/schemas/SpySalesExpenseEntity'
                option:
                    $ref: '#/components/schemas/SpySalesOrderItemOptionEntity'
                spySalesDiscountCodes:
                    items:
                        $ref: '#/components/schemas/SpySalesDiscountCodeEntity'
        SpySalesExpenseEntity:
            properties:
                idSalesExpense:
                    type: integer
                fkSalesOrder:
                    type: integer
                canceledAmount:
                    type: integer
                discountAmountAggregation:
                    type: integer
                grossPrice:
                    type: integer
                name:
                    type: string
                netPrice:
                    type: integer
                price:
                    type: integer
                priceToPayAggregation:
                    type: integer
                refundableAmount:
                    type: integer
                taxAmount:
                    type: integer
                taxAmountAfterCancellation:
                    type: integer
                taxRate:
                    type: string
                type:
                    type: string
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                spySalesDiscounts:
                    items:
                        $ref: '#/components/schemas/SpySalesDiscountEntity'
                spySalesShipments:
                    items:
                        $ref: '#/components/schemas/SpySalesShipmentEntity'
        SpySalesOrderAddressEntity:
            properties:
                idSalesOrderAddress:
                    type: integer
                fkCountry:
                    type: integer
                fkRegion:
                    type: integer
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                cellPhone:
                    type: string
                city:
                    type: string
                comment:
                    type: string
                company:
                    type: string
                description:
                    type: string
                email:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                middleName:
                    type: string
                phone:
                    type: string
                poBox:
                    type: string
                salutation:
                    type: string
                zipCode:
                    type: string
                country:
                    $ref: '#/components/schemas/SpyCountryEntity'
                region:
                    $ref: '#/components/schemas/SpyRegionEntity'
                spySalesOrders:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderEntity'
                spySalesOrderAddressHistories:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderAddressHistoryEntity'
        SpySalesOrderAddressHistoryEntity:
            properties:
                idSalesOrderAddressHistory:
                    type: integer
                fkCountry:
                    type: integer
                fkRegion:
                    type: integer
                fkSalesOrderAddress:
                    type: integer
                address1:
                    type: string
                address2:
                    type: string
                address3:
                    type: string
                cellPhone:
                    type: string
                city:
                    type: string
                comment:
                    type: string
                company:
                    type: string
                description:
                    type: string
                email:
                    type: string
                firstName:
                    type: string
                isBilling:
                    type: boolean
                lastName:
                    type: string
                middleName:
                    type: string
                phone:
                    type: string
                poBox:
                    type: string
                salutation:
                    type: string
                zipCode:
                    type: string
                country:
                    $ref: '#/components/schemas/SpyCountryEntity'
                salesOrderAddress:
                    $ref: '#/components/schemas/SpySalesOrderAddressEntity'
                region:
                    $ref: '#/components/schemas/SpyRegionEntity'
        SpySalesOrderCommentEntity:
            properties:
                idSalesOrderComment:
                    type: integer
                fkSalesOrder:
                    type: integer
                message:
                    type: string
                username:
                    type: string
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
        SpySalesOrderEntity:
            properties:
                idSalesOrder:
                    type: integer
                fkLocale:
                    type: integer
                fkOrderSource:
                    type: integer
                fkSalesOrderAddressBilling:
                    type: integer
                fkSalesOrderAddressShipping:
                    type: integer
                cartNote:
                    type: string
                currencyIsoCode:
                    type: string
                customerReference:
                    type: string
                email:
                    type: string
                firstName:
                    type: string
                isTest:
                    type: boolean
                lastName:
                    type: string
                orderReference:
                    type: string
                priceMode:
                    type: string
                salutation:
                    type: string
                store:
                    type: string
                orderSource:
                    $ref: '#/components/schemas/SpyOrderSourceEntity'
                billingAddress:
                    $ref: '#/components/schemas/SpySalesOrderAddressEntity'
                shippingAddress:
                    $ref: '#/components/schemas/SpySalesOrderAddressEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyRefunds:
                    items:
                        $ref: '#/components/schemas/SpyRefundEntity'
                spyGiftCardBalanceLogs:
                    items:
                        $ref: '#/components/schemas/SpyGiftCardBalanceLogEntity'
                spySalesPayments:
                    items:
                        $ref: '#/components/schemas/SpySalesPaymentEntity'
                spySalesReclamations:
                    items:
                        $ref: '#/components/schemas/SpySalesReclamationEntity'
                spyOmsTransitionLogs:
                    items:
                        $ref: '#/components/schemas/SpyOmsTransitionLogEntity'
                spySalesOrderItems:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemEntity'
                spySalesDiscounts:
                    items:
                        $ref: '#/components/schemas/SpySalesDiscountEntity'
                spySalesOrderTotalss:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderTotalsEntity'
                spySalesOrderNotes:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderNoteEntity'
                spySalesOrderComments:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderCommentEntity'
                spySalesExpenses:
                    items:
                        $ref: '#/components/schemas/SpySalesExpenseEntity'
                spySalesShipments:
                    items:
                        $ref: '#/components/schemas/SpySalesShipmentEntity'
        SpySalesOrderItemBundleEntity:
            properties:
                idSalesOrderItemBundle:
                    type: integer
                cartNote:
                    type: string
                grossPrice:
                    type: integer
                image:
                    type: string
                name:
                    type: string
                netPrice:
                    type: integer
                price:
                    type: integer
                sku:
                    type: string
                spySalesOrderItems:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpySalesOrderItemEntity:
            properties:
                idSalesOrderItem:
                    type: integer
                fkOmsOrderItemState:
                    type: integer
                fkOmsOrderProcess:
                    type: integer
                fkSalesOrder:
                    type: integer
                fkSalesOrderItemBundle:
                    type: integer
                amount:
                    type: integer
                amountBaseMeasurementUnitName:
                    type: string
                amountMeasurementUnitCode:
                    type: string
                amountMeasurementUnitConversion:
                    type: number
                amountMeasurementUnitName:
                    type: string
                amountMeasurementUnitPrecision:
                    type: integer
                amountSku:
                    type: string
                canceledAmount:
                    type: integer
                cartNote:
                    type: string
                discountAmountAggregation:
                    type: integer
                discountAmountFullAggregation:
                    type: integer
                expensePriceAggregation:
                    type: integer
                grossPrice:
                    type: integer
                groupKey:
                    type: string
                isQuantitySplittable:
                    type: boolean
                lastStateChange:
                    type: string
                merchantReference:
                    type: string
                name:
                    type: string
                netPrice:
                    type: integer
                orderItemReference:
                    type: string
                price:
                    type: integer
                priceToPayAggregation:
                    type: integer
                productOptionPriceAggregation:
                    type: integer
                quantity:
                    type: integer
                quantityBaseMeasurementUnitName:
                    type: string
                quantityMeasurementUnitCode:
                    type: string
                quantityMeasurementUnitConversion:
                    type: number
                quantityMeasurementUnitName:
                    type: string
                quantityMeasurementUnitPrecision:
                    type: integer
                refundableAmount:
                    type: integer
                sku:
                    type: string
                subtotalAggregation:
                    type: integer
                taxAmount:
                    type: integer
                taxAmountAfterCancellation:
                    type: integer
                taxAmountFullAggregation:
                    type: integer
                taxRate:
                    type: string
                taxRateAverageAggregation:
                    type: string
                salesOrderItemBundle:
                    $ref: '#/components/schemas/SpySalesOrderItemBundleEntity'
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                state:
                    $ref: '#/components/schemas/SpyOmsOrderItemStateEntity'
                process:
                    $ref: '#/components/schemas/SpyOmsOrderProcessEntity'
                spySalesReclamationItems:
                    items:
                        $ref: '#/components/schemas/SpySalesReclamationItemEntity'
                spyNopaymentPaids:
                    items:
                        $ref: '#/components/schemas/SpyNopaymentPaidEntity'
                spyOmsTransitionLogs:
                    items:
                        $ref: '#/components/schemas/SpyOmsTransitionLogEntity'
                spyOmsOrderItemStateHistories:
                    items:
                        $ref: '#/components/schemas/SpyOmsOrderItemStateHistoryEntity'
                spyOmsEventTimeouts:
                    items:
                        $ref: '#/components/schemas/SpyOmsEventTimeoutEntity'
                spySalesDiscounts:
                    items:
                        $ref: '#/components/schemas/SpySalesDiscountEntity'
                spySalesOrderItemGiftCards:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemGiftCardEntity'
                spySalesOrderItemOptions:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemOptionEntity'
                spySalesOrderItemMetadatas:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderItemMetadataEntity'
        SpySalesOrderItemGiftCardEntity:
            properties:
                idSalesOrderItemGiftCard:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                attributes:
                    type: string
                code:
                    type: string
                pattern:
                    type: string
                value:
                    type: integer
                spySalesOrderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpySalesOrderItemMetadataEntity:
            properties:
                idSalesOrderItemMetadata:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                image:
                    type: string
                superAttributes:
                    type: string
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpySalesOrderItemOptionEntity:
            properties:
                idSalesOrderItemOption:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                canceledAmount:
                    type: integer
                discountAmountAggregation:
                    type: integer
                grossPrice:
                    type: integer
                groupName:
                    type: string
                netPrice:
                    type: integer
                price:
                    type: integer
                sku:
                    type: string
                taxAmount:
                    type: integer
                taxRate:
                    type: string
                value:
                    type: string
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
                spySalesDiscounts:
                    items:
                        $ref: '#/components/schemas/SpySalesDiscountEntity'
        SpySalesOrderNoteEntity:
            properties:
                idSalesOrderNote:
                    type: integer
                fkSalesOrder:
                    type: integer
                command:
                    type: string
                message:
                    type: string
                success:
                    type: boolean
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
        SpySalesOrderThresholdEntity:
            properties:
                idSalesOrderThreshold:
                    type: integer
                fkCurrency:
                    type: integer
                fkSalesOrderThresholdType:
                    type: integer
                fkStore:
                    type: integer
                fee:
                    type: integer
                messageGlossaryKey:
                    type: string
                threshold:
                    type: integer
                salesOrderThresholdType:
                    $ref: '#/components/schemas/SpySalesOrderThresholdTypeEntity'
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
        SpySalesOrderThresholdTaxSetEntity:
            properties:
                idSalesOrderThresholdTaxSet:
                    type: integer
                fkTaxSet:
                    type: integer
                taxSet:
                    $ref: '#/components/schemas/SpyTaxSetEntity'
        SpySalesOrderThresholdTypeEntity:
            properties:
                idSalesOrderThresholdType:
                    type: integer
                key:
                    type: string
                thresholdGroup:
                    type: string
                spyMerchantRelationshipSalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipSalesOrderThresholdEntity'
                spySalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderThresholdEntity'
        SpySalesOrderTotalsEntity:
            properties:
                idSalesOrderTotals:
                    type: integer
                fkSalesOrder:
                    type: integer
                canceledTotal:
                    type: integer
                discountTotal:
                    type: integer
                grandTotal:
                    type: integer
                orderExpenseTotal:
                    type: integer
                refundTotal:
                    type: integer
                subtotal:
                    type: integer
                taxTotal:
                    type: integer
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
        SpySalesPaymentEntity:
            properties:
                idSalesPayment:
                    type: integer
                fkSalesOrder:
                    type: integer
                fkSalesPaymentMethodType:
                    type: integer
                amount:
                    type: integer
                salesOrder:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                salesPaymentMethodType:
                    $ref: '#/components/schemas/SpySalesPaymentMethodTypeEntity'
                spyPaymentGiftCards:
                    items:
                        $ref: '#/components/schemas/SpyPaymentGiftCardEntity'
        SpySalesPaymentMethodTypeEntity:
            properties:
                idSalesPaymentMethodType:
                    type: integer
                paymentMethod:
                    type: string
                paymentProvider:
                    type: string
                spySalesPayments:
                    items:
                        $ref: '#/components/schemas/SpySalesPaymentEntity'
        SpySalesReclamationEntity:
            properties:
                idSalesReclamation:
                    type: integer
                fkSalesOrder:
                    type: integer
                customerEmail:
                    type: string
                customerName:
                    type: string
                customerReference:
                    type: string
                isOpen:
                    type: boolean
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                spySalesReclamationItems:
                    items:
                        $ref: '#/components/schemas/SpySalesReclamationItemEntity'
        SpySalesReclamationItemEntity:
            properties:
                idSalesReclamationItem:
                    type: integer
                fkSalesOrderItem:
                    type: integer
                fkSalesReclamation:
                    type: integer
                spySalesReclamation:
                    $ref: '#/components/schemas/SpySalesReclamationEntity'
                orderItem:
                    $ref: '#/components/schemas/SpySalesOrderItemEntity'
        SpySalesShipmentEntity:
            properties:
                idSalesShipment:
                    type: integer
                fkSalesExpense:
                    type: integer
                fkSalesOrder:
                    type: integer
                carrierName:
                    type: string
                deliveryTime:
                    type: string
                name:
                    type: string
                order:
                    $ref: '#/components/schemas/SpySalesOrderEntity'
                expense:
                    $ref: '#/components/schemas/SpySalesExpenseEntity'
        SpyShipmentCarrierEntity:
            properties:
                idShipmentCarrier:
                    type: integer
                isActive:
                    type: boolean
                name:
                    type: string
                spyShipmentMethods:
                    items:
                        $ref: '#/components/schemas/SpyShipmentMethodEntity'
        SpyShipmentMethodEntity:
            properties:
                idShipmentMethod:
                    type: integer
                fkShipmentCarrier:
                    type: integer
                fkTaxSet:
                    type: integer
                availabilityPlugin:
                    type: string
                defaultPrice:
                    type: integer
                deliveryTimePlugin:
                    type: string
                isActive:
                    type: boolean
                name:
                    type: string
                pricePlugin:
                    type: string
                shipmentMethodKey:
                    type: string
                shipmentCarrier:
                    $ref: '#/components/schemas/SpyShipmentCarrierEntity'
                taxSet:
                    $ref: '#/components/schemas/SpyTaxSetEntity'
                spyShipmentMethodPrices:
                    items:
                        $ref: '#/components/schemas/SpyShipmentMethodPriceEntity'
        SpyShipmentMethodPriceEntity:
            properties:
                idShipmentMethodPrice:
                    type: integer
                fkCurrency:
                    type: integer
                fkShipmentMethod:
                    type: integer
                fkStore:
                    type: integer
                defaultGrossPrice:
                    type: integer
                defaultNetPrice:
                    type: integer
                currency:
                    $ref: '#/components/schemas/SpyCurrencyEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                shipmentMethod:
                    $ref: '#/components/schemas/SpyShipmentMethodEntity'
        SpyShoppingListCompanyBusinessUnitBlacklistEntity:
            properties:
                idShoppingListCompanyBusinessUnitBlacklist:
                    type: integer
                fkCompanyUser:
                    type: integer
                fkShoppingListCompanyBusinessUnit:
                    type: integer
                spyShoppingListCompanyBusinessUnit:
                    $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitEntity'
                spyCompanyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
        SpyShoppingListCompanyBusinessUnitEntity:
            properties:
                idShoppingListCompanyBusinessUnit:
                    type: integer
                fkCompanyBusinessUnit:
                    type: integer
                fkShoppingList:
                    type: integer
                fkShoppingListPermissionGroup:
                    type: integer
                spyCompanyBusinessUnit:
                    $ref: '#/components/schemas/SpyCompanyBusinessUnitEntity'
                spyShoppingList:
                    $ref: '#/components/schemas/SpyShoppingListEntity'
                spyShoppingListPermissionGroup:
                    $ref: '#/components/schemas/SpyShoppingListPermissionGroupEntity'
                spyShoppingListCompanyBusinessUnitBlacklists:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitBlacklistEntity'
        SpyShoppingListCompanyUserEntity:
            properties:
                idShoppingListCompanyUser:
                    type: integer
                fkCompanyUser:
                    type: integer
                fkShoppingList:
                    type: integer
                fkShoppingListPermissionGroup:
                    type: integer
                spyCompanyUser:
                    $ref: '#/components/schemas/SpyCompanyUserEntity'
                spyShoppingList:
                    $ref: '#/components/schemas/SpyShoppingListEntity'
                spyShoppingListPermissionGroup:
                    $ref: '#/components/schemas/SpyShoppingListPermissionGroupEntity'
        SpyShoppingListEntity:
            properties:
                idShoppingList:
                    type: integer
                customerReference:
                    type: string
                description:
                    type: string
                key:
                    type: string
                name:
                    type: string
                spyShoppingListItems:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListItemEntity'
                spyShoppingListCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyUserEntity'
                spyShoppingListCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitEntity'
        SpyShoppingListItemEntity:
            properties:
                idShoppingListItem:
                    type: integer
                fkShoppingList:
                    type: integer
                quantity:
                    type: integer
                sku:
                    type: string
                spyShoppingList:
                    $ref: '#/components/schemas/SpyShoppingListEntity'
                spyShoppingListItemNotes:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListItemNoteEntity'
                spyShoppingListProductOptions:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListProductOptionEntity'
        SpyShoppingListItemNoteEntity:
            properties:
                idShoppingListItemNote:
                    type: integer
                fkShoppingListItem:
                    type: integer
                note:
                    type: string
                spyShoppingListItem:
                    $ref: '#/components/schemas/SpyShoppingListItemEntity'
        SpyShoppingListPermissionGroupEntity:
            properties:
                idShoppingListPermissionGroup:
                    type: integer
                name:
                    type: string
                spyShoppingListCompanyUsers:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyUserEntity'
                spyShoppingListCompanyBusinessUnits:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListCompanyBusinessUnitEntity'
                spyShoppingListPermissionGroupToPermissions:
                    items:
                        $ref: '#/components/schemas/SpyShoppingListPermissionGroupToPermissionEntity'
        SpyShoppingListPermissionGroupToPermissionEntity:
            properties:
                idShoppingListPermissionGroupToPermission:
                    type: integer
                fkPermission:
                    type: integer
                fkShoppingListPermissionGroup:
                    type: integer
                spyShoppingListPermissionGroup:
                    $ref: '#/components/schemas/SpyShoppingListPermissionGroupEntity'
                spyPermission:
                    $ref: '#/components/schemas/SpyPermissionEntity'
        SpyShoppingListProductOptionEntity:
            properties:
                idShoppingListItemProductOption:
                    type: integer
                fkProductOptionValue:
                    type: integer
                fkShoppingListItem:
                    type: integer
                spyShoppingListItem:
                    $ref: '#/components/schemas/SpyShoppingListItemEntity'
                spyProductOptionValue:
                    $ref: '#/components/schemas/SpyProductOptionValueEntity'
        SpyStockEntity:
            properties:
                idStock:
                    type: integer
                name:
                    type: string
                spyStockProducts:
                    items:
                        $ref: '#/components/schemas/SpyStockProductEntity'
        SpyStockProductEntity:
            properties:
                idStockProduct:
                    type: integer
                fkProduct:
                    type: integer
                fkStock:
                    type: integer
                isNeverOutOfStock:
                    type: boolean
                quantity:
                    type: integer
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
                stock:
                    $ref: '#/components/schemas/SpyStockEntity'
        SpyStoreEntity:
            properties:
                idStore:
                    type: integer
                name:
                    type: string
                spyShipmentMethodPrices:
                    items:
                        $ref: '#/components/schemas/SpyShipmentMethodPriceEntity'
                spyPriceProductSchedules:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleEntity'
                spyMerchantRelationshipSalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpyMerchantRelationshipSalesOrderThresholdEntity'
                spyCompanyStores:
                    items:
                        $ref: '#/components/schemas/SpyCompanyStoreEntity'
                spyProductMeasurementSalesUnitStores:
                    items:
                        $ref: '#/components/schemas/SpyProductMeasurementSalesUnitStoreEntity'
                spyTouchStorages:
                    items:
                        $ref: '#/components/schemas/SpyTouchStorageEntity'
                spyTouchSearches:
                    items:
                        $ref: '#/components/schemas/SpyTouchSearchEntity'
                spyProductOptionValuePrices:
                    items:
                        $ref: '#/components/schemas/SpyProductOptionValuePriceEntity'
                spySalesOrderThresholds:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderThresholdEntity'
                spyPriceProductStores:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductStoreEntity'
                spyDiscounts:
                    items:
                        $ref: '#/components/schemas/SpyDiscountEntity'
                spyDiscountStores:
                    items:
                        $ref: '#/components/schemas/SpyDiscountStoreEntity'
                spyAvailabilityAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyAvailabilityAbstractEntity'
                spyAvailabilities:
                    items:
                        $ref: '#/components/schemas/SpyAvailabilityEntity'
                spyAvailabilityNotificationSubscriptions:
                    items:
                        $ref: '#/components/schemas/SpyAvailabilityNotificationSubscriptionEntity'
                spyCmsBlockStores:
                    items:
                        $ref: '#/components/schemas/SpyCmsBlockStoreEntity'
                spyProductAbstractStores:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractStoreEntity'
                spyQuotes:
                    items:
                        $ref: '#/components/schemas/SpyQuoteEntity'
                spyOmsProductReservations:
                    items:
                        $ref: '#/components/schemas/SpyOmsProductReservationEntity'
                spyCmsPageStores:
                    items:
                        $ref: '#/components/schemas/SpyCmsPageStoreEntity'
        SpyTaxRateEntity:
            properties:
                idTaxRate:
                    type: integer
                fkCountry:
                    type: integer
                name:
                    type: string
                rate:
                    type: string
                country:
                    $ref: '#/components/schemas/SpyCountryEntity'
                spyTaxSetTaxes:
                    items:
                        $ref: '#/components/schemas/SpyTaxSetTaxEntity'
        SpyTaxSetEntity:
            properties:
                idTaxSet:
                    type: integer
                name:
                    type: string
                spySalesOrderThresholdTaxSets:
                    items:
                        $ref: '#/components/schemas/SpySalesOrderThresholdTaxSetEntity'
                spyShipmentMethods:
                    items:
                        $ref: '#/components/schemas/SpyShipmentMethodEntity'
                spyProductOptionGroups:
                    items:
                        $ref: '#/components/schemas/SpyProductOptionGroupEntity'
                spyProductAbstracts:
                    items:
                        $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyTaxSetTaxes:
                    items:
                        $ref: '#/components/schemas/SpyTaxSetTaxEntity'
        SpyTaxSetTaxEntity:
            properties:
                fkTaxRate:
                    type: integer
                fkTaxSet:
                    type: integer
                spyTaxSet:
                    $ref: '#/components/schemas/SpyTaxSetEntity'
                spyTaxRate:
                    $ref: '#/components/schemas/SpyTaxRateEntity'
        SpyTouchEntity:
            properties:
                idTouch:
                    type: integer
                itemEvent:
                    type: string
                itemId:
                    type: integer
                itemType:
                    type: string
                touched:
                    type: string
                spyTouchStorages:
                    items:
                        $ref: '#/components/schemas/SpyTouchStorageEntity'
                spyTouchSearches:
                    items:
                        $ref: '#/components/schemas/SpyTouchSearchEntity'
        SpyTouchSearchEntity:
            properties:
                idTouchSearch:
                    type: integer
                fkLocale:
                    type: integer
                fkStore:
                    type: integer
                fkTouch:
                    type: integer
                key:
                    type: string
                touch:
                    $ref: '#/components/schemas/SpyTouchEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyTouchStorageEntity:
            properties:
                idTouchStorage:
                    type: integer
                fkLocale:
                    type: integer
                fkStore:
                    type: integer
                fkTouch:
                    type: integer
                key:
                    type: string
                touch:
                    $ref: '#/components/schemas/SpyTouchEntity'
                store:
                    $ref: '#/components/schemas/SpyStoreEntity'
                locale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
        SpyUrlEntity:
            properties:
                idUrl:
                    type: integer
                fkLocale:
                    type: integer
                fkResourceCategorynode:
                    type: integer
                fkResourcePage:
                    type: integer
                fkResourceProductAbstract:
                    type: integer
                fkResourceProductSet:
                    type: integer
                fkResourceRedirect:
                    type: integer
                url:
                    type: string
                spyCategoryNode:
                    $ref: '#/components/schemas/SpyCategoryNodeEntity'
                cmsPage:
                    $ref: '#/components/schemas/SpyCmsPageEntity'
                spyProductSet:
                    $ref: '#/components/schemas/SpyProductSetEntity'
                spyProduct:
                    $ref: '#/components/schemas/SpyProductAbstractEntity'
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyUrlRedirect:
                    $ref: '#/components/schemas/SpyUrlRedirectEntity'
                spyNavigationNodeLocalizedAttributess:
                    items:
                        $ref: '#/components/schemas/SpyNavigationNodeLocalizedAttributesEntity'
        SpyUrlRedirectEntity:
            properties:
                idUrlRedirect:
                    type: integer
                status:
                    type: integer
                toUrl:
                    type: string
                spyUrls:
                    items:
                        $ref: '#/components/schemas/SpyUrlEntity'
        SpyUserEntity:
            properties:
                idUser:
                    type: integer
                fkLocale:
                    type: integer
                firstName:
                    type: string
                isAgent:
                    type: boolean
                lastLogin:
                    type: string
                lastName:
                    type: string
                password:
                    type: string
                status:
                    type: string
                username:
                    type: string
                spyLocale:
                    $ref: '#/components/schemas/SpyLocaleEntity'
                spyCustomers:
                    items:
                        $ref: '#/components/schemas/SpyCustomerEntity'
                spyPriceProductScheduleLists:
                    items:
                        $ref: '#/components/schemas/SpyPriceProductScheduleListEntity'
                spyAuthResetPasswords:
                    items:
                        $ref: '#/components/schemas/SpyAuthResetPasswordEntity'
                spyCustomerNotes:
                    items:
                        $ref: '#/components/schemas/SpyCustomerNoteEntity'
                spyAclUserHasGroups:
                    items:
                        $ref: '#/components/schemas/SpyAclUserHasGroupEntity'
                spyCmsVersions:
                    items:
                        $ref: '#/components/schemas/SpyCmsVersionEntity'
                spyOffers:
                    items:
                        $ref: '#/components/schemas/SpyOfferEntity'
        SpyWishlistEntity:
            properties:
                idWishlist:
                    type: integer
                fkCustomer:
                    type: integer
                name:
                    type: string
                spyCustomer:
                    $ref: '#/components/schemas/SpyCustomerEntity'
                spyWishlistItems:
                    items:
                        $ref: '#/components/schemas/SpyWishlistItemEntity'
        SpyWishlistItemEntity:
            properties:
                idWishlistItem:
                    type: integer
                fkWishlist:
                    type: integer
                sku:
                    type: string
                spyWishlist:
                    $ref: '#/components/schemas/SpyWishlistEntity'
                spyProduct:
                    $ref: '#/components/schemas/SpyProductEntity'
        Store:
            properties:
                name:
                    type: string
                idStore:
                    type: integer
                availableCurrencyIsoCodes:
                    type: array
                    items: {  }
                storesWithSharedPersistence:
                    type: array
                    items: {  }
                selectedCurrencyIsoCode:
                    type: string
                defaultCurrencyIsoCode:
                    type: string
                availableLocaleIsoCodes:
                    type: array
                    items: {  }
                queuePools:
                    type: array
                    items: {  }
                countries:
                    type: array
                    items: {  }
                timezone:
                    type: string
        StoreCountryRestAttributes:
            properties:
                iso2Code:
                    type: string
                iso3Code:
                    type: string
                name:
                    type: string
                postalCodeMandatory:
                    type: boolean
                postalCodeRegex:
                    type: string
                regions:
                    items:
                        $ref: '#/components/schemas/StoreRegionRestAttributes'
        StoreCurrencyRestAttributes:
            properties:
                code:
                    type: string
                name:
                    type: string
        StoreLocaleRestAttributes:
            properties:
                code:
                    type: string
                name:
                    type: string
        StoreRegionRestAttributes:
            properties:
                iso2Code:
                    type: string
                name:
                    type: string
        StoreRelation:
            properties:
                idEntity:
                    type: integer
                idStores:
                    type: array
                    items:
                        type: integer
                stores:
                    items:
                        $ref: '#/components/schemas/Store'
        StoresRestAttributes:
            properties:
                timeZone:
                    type: string
                defaultCurrency:
                    type: string
                currencies:
                    items:
                        $ref: '#/components/schemas/StoreCurrencyRestAttributes'
                locales:
                    items:
                        $ref: '#/components/schemas/StoreLocaleRestAttributes'
                countries:
                    items:
                        $ref: '#/components/schemas/StoreCountryRestAttributes'
        StoresRestCollectionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/StoresRestCollectionResponseData'
        StoresRestCollectionResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/StoresRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        StoresRestResponse:
            properties:
                data:
                    $ref: '#/components/schemas/StoresRestResponseData'
                links:
                    $ref: '#/components/schemas/RestLinks'
        StoresRestResponseData:
            properties:
                type:
                    type: string
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/StoresRestAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
