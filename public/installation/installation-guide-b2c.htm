<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.B2C">
    <head>
    </head>
    <body>
        <h1>B2C Demo Shop Installation Guide <img src="../Resources/Images/shoptype/B2C_Shop.png" /></h1>
        <p>To install the Demo Shop for B2C implementations, follow the steps below:</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Mac OS or Linux, with Development Virtual Machine</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><a name="linux"></a>
                <h3>1. Install Prerequisites</h3>
                <p>To set up your environment, install the following prerequisites:</p>
                <ul>
                    <li class="bullet_list"><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank">Git</a>
                    </li>
                    <li class="bullet_list"><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">VirtualBox 5.2.2+</a>
                    </li>
                    <li class="bullet_list"><a href="https://www.vagrantup.com/downloads.html" target="_blank">Vagrant 2.0.0+</a>
                    </li>
                    <li class="bullet_list"><i>vagrant-vbguest</i> and <i>vagrant-hostmanager</i> plugins:
					</li>
                </ul><pre><code class="language-Bash">vagrant plugin install vagrant-vbguest
vagrant plugin install vagrant-hostmanager</code></pre>
                <h3>2. Install Spryker Virtual Machine</h3>
                <p>Run the following commands in your favorite shell (e.g. <var>Bash</var>):</p>
                <p>1. <b>Create the folder in which you want the source code to be placed:</b></p><pre><code class="language-Bash">mkdir devvm
cd devvm						</code></pre>
                <p>2. <strong>Initialize the Vagrant environment</strong>:</p><pre xml:space="preserve"><code class="language-Bash">vagrant init devvm2.3.0 https://github.com/spryker/devvm/releases/download/v2.3.0/spryker-devvm.box</code></pre>
                <p>3. <strong>Update the Vagrantfile</strong>:</p>
                <p>Add hostmanager plugin configuration:</p><pre><code class="language-Bash">mv Vagrantfile Vagrantfile.bak
awk '/^end/{print "  config.hostmanager.enabled = true\n  config.hostmanager.manage_host = true"}1' Vagrantfile.bak &gt; Vagrantfile</code></pre>
                <p>4. <b>Build and start the virtual machine</b>:</p><pre xml:space="preserve"><code class="language-Bash">VM_PROJECT=b2c-demo-shop SPRYKER_REPOSITORY="https://github.com/spryker-shop/b2c-demo-shop.git" vagrant up</code></pre>
                <p>When the VM is built and running, your local copy of the repository will be placed in the <var>project</var> subfolder of the folder where the VM is located (e.g. <var>~/devvm/project</var>). The subfolder will be mounted inside the VM to <var>/data/shop/development/current</var>.</p>
                <h3>3. Install the Shop</h3>
                <p>1. <b>Log into the VM:</b></p><pre><code class="language-Bash">vagrant ssh</code></pre>
                <p>2. <b>Run the installation commands:</b></p><pre><code class="language-Bash">composer install
vendor/bin/install</code></pre>
                <div class="note">If you are using a devvm version lower than 2.2.0, run the <i>ulimit -n 65535</i> command at first.</div>
                <p>Executing these steps will install all required dependencies,  and run the installation process. Also, this will install the demo data and export it to <var>Redis</var> and <var>Elasticsearch</var>.</p>
                <p>When the installation process is complete, Spryker Commerce OS is ready to use. It can be accessed via the following links:</p>
                <ul>
                    <li><a href="http://www.de.b2c-demo-shop.local/" target="_blank">http://www.de.b2c-demo-shop.local</a> - front-end;</li>
                    <li><a href="http://zed.de.b2c-demo-shop.local/" target="_blank">http://zed.de.b2c-demo-shop.local</a> - backend (administrator interface).</li>
                </ul>
                <p>Credentials to access the administrator interface: user <var>admin@spryker.com</var> and password <var>change123</var>.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Windows, with Development Virtual Machine</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><a name="windows"></a>
                <h3>1. Install Prerequisites</h3>
                <p>To set up your environment, install the following prerequisites:</p>
                <ul>
                    <li class="bullet_list"><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank">Git</a>
                    </li>
                    <li class="bullet_list"><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">VirtualBox 5.2.2+</a>
                    </li>
                    <li class="bullet_list"><a href="https://www.vagrantup.com/downloads.html" target="_blank">Vagrant 2.0.0+</a>
                    </li>
                    <li class="bullet_list"><i>vagrant-vbguest</i> and <i>vagrant-hostmanager</i> plugins:
							</li>
                </ul><pre><code class="language-Bash">vagrant plugin install vagrant-vbguest
vagrant plugin install vagrant-hostmanager</code></pre>
                <h3>2. Install Spryker Virtual Machine</h3>
                <p>
							To install the VM, you need to run the following commands. For this purpose, use <var>Git Bash</var> command prompt with administrative privileges.
						</p>
                <MadCap:dropDown>
                    <MadCap:dropDownHead>
                        <MadCap:dropDownHotspot>How to Launch Git Bash</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody>
                        <ul>
                            <li>Click <b>Start</b>.</li>
                            <li>Start typing <var>Git Bash</var>.</li>
                            <li>In the search results, right-click <b>Git Bash</b> and select <b>Run as administrator</b>.
									<p><img src="../Resources/Images/run-git-bash-as-administrator.png" /></p></li>
                        </ul>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <p>1. <b>Create the folder in which you want the source code to be placed:</b></p><pre><code class="language-Bash">mkdir devvm
cd devvm</code></pre>
                <p>2. <strong>Initialize the Vagrant environment</strong>:</p><pre xml:space="preserve"><code class="language-Bash">vagrant init devvm2.3.0 https://github.com/spryker/devvm/releases/download/v2.3.0/spryker-devvm.box</code></pre>
                <p>3. <strong>Update the Vagrantfile</strong>:</p>
                <p>Add hostmanager plugin configuration:</p><pre><code class="language-Bash">mv Vagrantfile Vagrantfile.bak
awk '/^end/{print "  config.hostmanager.enabled = true\n  config.hostmanager.manage_host = true"}1' Vagrantfile.bak &gt; Vagrantfile</code></pre>
                <p>4. <b><a name="build"></a>Build and start the virtual machine</b>:</p><pre xml:space="preserve"><code class="language-Bash">VM_SKIP_SF="1" VM_PROJECT=b2c-demo-shop SPRYKER_REPOSITORY="https://github.com/spryker-shop/b2c-demo-shop.git" vagrant up</code></pre>
                <h3>3. Install the Shop</h3>
                <p>1. <b>Log into the VM:</b></p><pre><code class="language-Bash">vagrant ssh</code></pre>
                <p>2. <b>Update network configuration of the VM:</b></p><pre><code class="language-Bash">sudo sed -i "s/eth1/eth1 $(ip -o -4 route show to default | cut -d ' ' -f 5)/g; s/create mask = 0775/create mask = 0777/g; s/directory mask = 0775/directory mask = 0777\n  force user = vagrant\n  force group = vagrant/g"  /etc/samba/smb.conf</code></pre>
                <p>3. <b>Restart the Samba server:</b></p><pre><code class="language-Bash">sudo /etc/init.d/samba restart</code></pre>
                <p>4. <b>Update PHP and Jenkins configuration:</b></p><pre><code class="language-Bash">sudo sed -i 's/user = www-data/user = vagrant/g'  /etc/php/7.2/fpm/pool.d/*.conf
sudo sed -i 's/=www-data/=vagrant/g' /etc/default/jenkins-devtest
sudo chown -R vagrant:vagrant /data/shop/devtest/shared/data/common/jenkins</code></pre>
                <p>5. <b>Restart PHP and Jenkins:</b></p><pre><code class="language-Bash">sudo /etc/init.d/php7.2-fpm restart
sudo /etc/init.d/jenkins-devtest restart</code></pre>
                <p>6. <b>Change permissions for the project directory:</b></p><pre><code class="language-Bash">sudo chown vagrant:vagrant .
sudo chmod og+rwx .</code></pre><a name="mountshare"></a>7. <b>Mount the share in Windows:</b><ol><li>
						Start Windows Command Prompt. To do this, press <var>Win+R</var>, type <var>cmd</var> and press <var>Enter</var>.
					</li><li>
						Execute the following command to mount the share as a network drive:<pre><code class="language-Bash">net use s: \\spryker-vagrant\project\current /persistent:yes</code></pre><p class="info">The share will be mounted as the <var>s:</var> drive.</p></li></ol><p>8. <b>Copy the codebase to the VM:</b></p><p>Execute the following commands in the Windows Command Prompt console you opened on step <b>8</b>:</p><pre><code class="language-Bash">cd "%USERPROFILE%\Documents\devvm"
xcopy project s: /e</code></pre><p>where:
					<ul><li><b>%USERPROFILE%\Documents\devvm</b> - is the <var>dvvm</var> directory you created on step <b>3.1</b>.
						</li><li><b>s:</b> - is the network drive you mounted on the previous step.
						</li></ul></p><p>9. <b>Run the installation commands:</b></p><p>After performing steps <b>7</b> and <b>8</b> and making sure that copying is complete, switch back to the <b>Git Bash</b> console and run the following commands:</p><pre><code class="language-Bash">composer install
vendor/bin/install</code></pre><div class="note">If you are using a devvm version lower than 2.2.0, run the <i>ulimit -n 65535</i> command first.</div><p>Executing these steps will install all required dependencies,  and run the installation process. Also, this will install the demo data and export it to <var>Redis</var> and <var>Elasticsearch</var>.</p><p>When the installation process is complete, Spryker Commerce OS is ready to use. It can be accessed via the following links:</p><ul><li><a href="http://www.de.b2c-demo-shop.local/" target="_blank">http://www.de.b2c-demo-shop.local</a> - front-end;</li><li><a href="http://zed.de.b2c-demo-shop.local/" target="_blank">http://zed.de.b2c-demo-shop.local</a> - backend (administrator interface).</li></ul><p>Credentials to access the administrator interface: user <var>admin@spryker.com</var> and password <var>change123</var>.</p></MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Without Development Virtual Machine</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><a name="novm"></a>
                <p>This guide will help you install Spryker's Demoshop without using the virtual machine that we offer.
</p>
                <h3>Minimum requirements
</h3>
                <ul>
                    <li class="bullet_list">PHP v7.1.x<br /><pre><code class="language-bash">apt-get install php-curl php-json php-mysql php-pdo-sqlite php-sqlite3 php-gd php-intl php-mysqli php-pgsql php-ssh2 php-gmp php-mcrypt php-pdo-mysql php-readline php-twig php-imagick php-memcache php-pdo-pgsql php-redis php-xml php-bz2 php-mbstring</code></pre></li>
                    <li class="bullet_list">
                Jenkins<br />                Please install appropriate version for your system, refer to <a href="https://jenkins.io/download/">https://jenkins.io/download/</a>.<br />                Make sure it runs on port <b>localhost:10007</b>, otherwise update config.
            </li>
                    <li class="bullet_list">
                Elasticsearch v5.x (preferably v5.6.x)<br />                Please install appropriate version for your system, refer to <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/running-elasticsearch.html">https://www.elastic.co/guide/en/elasticsearch/guide/current/running-elasticsearch.html</a>.
                Make sure it runs on <b>localhost:10005</b>, otherwise update config.
            </li>
                    <li class="bullet_list">Graphviz v2.x<br />                Please follow the instructions at <a href="http://www.graphviz.org/Download_linux_ubuntu.php">http://www.graphviz.org/Download_linux_ubuntu.php</a>.</li>
                    <li class="bullet_list">Nginx or Apache
</li>
                    <li class="bullet_list">Redis v3.x<br />                Make sure it runs on <b>localhost:10009</b>, otherwise update config.
</li>
                    <li class="bullet_list">PostgreSQL v9.6</li>
                    <li>
                        <p>RabbitMQ v3.6+</p>
                    </li>
                </ul>
                <h3>Nginx Configuration
</h3>
                <h4>Nginx Configuration for Yves
</h4>
                <p>The following configuration must be included for Yves in the Nginx configuration file.

</p><pre><code class="language-PHP line-numbers">location / {
    if (-f $document_root/maintenance.html) {
        return 503;
    }

    # CORS - Allow Ajax requests from http to https webservices on the same domain
    #more_set_headers "Access-Control-Allow-Origin: http://$server_name";
    #more_set_headers "Access-Control-Allow-Credentials: true";
    #more_set_headers "Access-Control-Allow-Headers: Authorization";

    # CORS - Allow Ajax calls from cdn/static scripts
    if ($http_origin ~* "^(http|https)://(img[1234]|cdn|static|cms)\.") {
      add_header "Access-Control-Allow-Origin" $http_origin;
    }

    # Frontend - force browser to use new rendering engine
    #more_set_headers "X-UA-Compatible: IE=Edge,chrome=1";

    # Terminate OPTIONS requests immediately. No need for calling php
    # OPTIONS is used by Ajax from http to https as a pre-flight-request
    # see http://en.wikipedia.org/wiki/Cross-origin_resource_sharing
    if ($request_method = OPTIONS) {
        return 200;
    }

    add_header X-Server $hostname;

    try_files $uri @rewriteapp;

    #more_clear_headers 'X-Powered-By' 'X-Store' 'X-Locale' 'X-Env' 'Server';
}

location @rewriteapp {
    # rewrite all to app.php
    rewrite ^(.*)$ /index.php last;
}
</code></pre>
                <h4>Nginx Configuration for Zed
</h4>
                <p>The following configuration must be included for Yves in the Nginx configuration file.

</p><pre><code class="language-PHP line-numbers"># Timeout for Zed requests - 10 minutes
# (longer requests should be converted to jobs and executed via jenkins)
proxy_read_timeout 600s;
proxy_send_timeout 600s;
fastcgi_read_timeout 600s;
client_body_timeout 600s;
client_header_timeout 600s;
send_timeout 600s;

# Static files can be delivered directly
location ~ (/images/|/scripts|/styles|/fonts|/bundles|/favicon.ico|/robots.txt) {
    access_log        off;
    expires           30d;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    try_files $uri =404;
}

# Payone - PHP application gets all other requests without authorized
location /payone/ {
    auth_basic off;
    add_header X-Server $hostname;
    try_files $uri @rewriteapp;
}

# PHP application gets all other requests
location / {
    #add_header X-Server $hostname;
    try_files $uri @rewriteapp;
    #more_clear_headers 'X-Powered-By' 'X-Store' 'X-Locale' 'X-Env' 'Server';

}

location @rewriteapp {
    # rewrite all to app.php
    rewrite ^(.*)$ /index.php last;
}
</code></pre>
                <h3>Configuration Files
</h3>
                <h4>Database
</h4>
                <p>Edit config_local.php to configure the database access:

</p><pre><code class="language-PHP line-numbers">&lt;?php
$config[ApplicationConstants::ZED_DB_USERNAME] = 'development';
$config[ApplicationConstants::ZED_DB_PASSWORD] = 'mate20mg';
$config[ApplicationConstants::ZED_DB_DATABASE] = 'DE_development_zed';
$config[ApplicationConstants::ZED_DB_HOST] = '127.0.0.1';
$config[ApplicationConstants::ZED_DB_ENGINE] = $config[ApplicationConstants::ZED_DB_ENGINE_PGSQL];
$config[ApplicationConstants::ZED_DB_PORT] = 5432;
</code></pre>
                <h4>Redis
</h4>
                <p>Configure Redis in your local configuration file:

</p><pre><code class="language-PHP line-numbers">&lt;?php
$config[ApplicationConstants::YVES_STORAGE_SESSION_REDIS_PROTOCOL] = 'tcp';
$config[ApplicationConstants::YVES_STORAGE_SESSION_REDIS_HOST] = '127.0.0.1';
$config[ApplicationConstants::YVES_STORAGE_SESSION_REDIS_PORT] = '10009';
$config[ApplicationConstants::YVES_STORAGE_SESSION_REDIS_PASSWORD] = '';
</code></pre>
                <h4>Elasticsearch
</h4>
                <p>Configure Elasticsearch in your local configuration file:

</p><pre><code class="language-PHP line-numbers">&lt;?php
$config[ApplicationConstants::ELASTICA_PARAMETER__HOST] = 'localhost';
$config[ApplicationConstants::ELASTICA_PARAMETER__TRANSPORT] = 'http';
$config[ApplicationConstants::ELASTICA_PARAMETER__PORT] = '10005';
$config[ApplicationConstants::ELASTICA_PARAMETER__AUTH_HEADER] = '';
$config[ApplicationConstants::ELASTICA_PARAMETER__INDEX_NAME] = 'index_page';
$config[ApplicationConstants::ELASTICA_PARAMETER__DOCUMENT_TYPE] = 'page';
</code></pre>
                <p>Configure Elasticsearch localized parameters:

</p><pre><code class="language-PHP line-numbers">&lt;?php
$config[ApplicationConstants::ELASTICA_PARAMETER__INDEX_NAME] = 'de_search';<![CDATA[
]]></code></pre>
                <h4>RabbitMQ</h4>
                <p>Configure RabbitMQ permissions and virtual hosts  according to the <a href="http://documentation.spryker.com/tutorials/introduction/setup-hello-world-queue.htm#rabbitmq-management-ui">instructions</a>.</p>
                <h4>Hostname</h4>
                <p>If you want to configure the hostname, set the values for Yves and Zed hostnames in your local configuration file:</p>
                <ul>
                    <li><code>$config[ApplicationConstants::HOST_ZED]</code>
                    </li>
                    <li><code>$config[ApplicationConstants::HOST_YVES]</code>
                    </li>
                </ul>
                <h3>Installing the Shop</h3>
                <p>After configuring all the required services, do the following:</p>
                <ol>
                    <li>Clone the <a href="https://github.com/spryker-shop/b2c-demo-shop" target="_blank">Store Repository</a>.</li>
                    <li>
                        <p>Run the installation commands inside the project folder:
                        </p><pre><code class="language-Bash">composer install
vendor/bin/install</code></pre>
                    </li>
                </ol>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <p><strong>See also</strong>: </p>
        <ul>
            <li>
                <MadCap:xref href="installation-guide-b2b.htm">B2B Demo Shop Installation Guide</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="installation-guide-chose-modules.htm">Installing Spryker with Custom Set of Modules</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../Maintenance/post-installation-steps-and-additional-info.htm">Post-Installation Steps and Additional Info</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="troubleshooting.htm">Troubleshooting</MadCap:xref>
            </li>
        </ul>
        <p>&#160;</p>
        <p>&#160;</p>
        <p><i>Last review date: Feb 11, 2019</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"> by Volodymyr Volkov</MadCap:conditionalText>
        </p>
    </body>
</html>