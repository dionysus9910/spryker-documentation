<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-conditions="Spryker.ShopSuite,Spryker.B2C,Spryker.B2B" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Tutorials|Introduction|Customizing Spryker Frontend">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Tutorial - Frontend - Create a Component</title>
        <!-- Google Tag Manager -->
        <script>/* <![CDATA[ */(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','GTM-NP24S2');/* ]]> */</script>
        <!-- End Google Tag Manager -->
        <script>/* <![CDATA[ */
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.src = "https://www.googletagmanager.com/gtag/js?id==UA-56589105-4";
			document.getElementsByTagName('head').item(0).appendChild(s);
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', 'UA-56589105-4');
		/* ]]> */</script>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/perfect-scrollbar.css" rel="stylesheet" />
        <link href="../../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../resources/scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../../resources/scripts/custom.modernizr.js">
        </script>
        <script src="../../../resources/scripts/jquery.min.js">
        </script>
        <script src="../../../resources/scripts/require.min.js">
        </script>
        <script src="../../../resources/scripts/require.config.js">
        </script>
        <script src="../../../resources/scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../resources/scripts/plugins.min.js">
        </script>
        <script src="../../../resources/scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search the Academy" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <!-- Google Tag Manager (noscript) -->
                                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NP24S2" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                </noscript>
                                <!-- End Google Tag Manager (noscript) -->
                                <div class="search-container">
                                    <form class="search" action="#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="breadcrumbs-block">
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                        </div>
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchHome mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="vIqhT9mWaEm23jH29kxRVg">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="vIqhT9mWaEm23jH29kxRVg:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="toolbar-wrapper">
                                                    <div class="widget-github js-widget-github"><a class="widget-github-link js-widget-github-link" href="https://github.com/spryker/spryker-documentation" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M13.5 0C6.057 0 0 6.057 0 13.5c0 5.888 3.791 10.905 9.058 12.745a.463.463 0 0 0 .258.088c1.316.43 2.724.667 4.184.667C20.943 27 27 20.943 27 13.5S20.943 0 13.5 0zm0 .931c6.93 0 12.569 5.639 12.569 12.569 0 5.428-3.459 10.061-8.287 11.818a1.903 1.903 0 0 1-.092-.527v-2.446c0-.975-.477-2.037-.946-2.75 2.584-.436 5.537-1.776 5.537-6.779 0-1.37-.429-2.58-1.275-3.598.186-.611.415-1.9-.225-3.52a.47.47 0 0 0-.291-.272c-.13-.04-1.326-.35-3.806 1.277a12.921 12.921 0 0 0-6.36 0c-2.481-1.63-3.68-1.319-3.809-1.277a.47.47 0 0 0-.29.273C5.582 7.319 5.811 8.607 6 9.218c-.85 1.018-1.279 2.227-1.279 3.598 0 4.957 2.9 6.323 5.463 6.778-.322.407-.66.934-.81 1.47-.661.184-2.018.19-2.929-1.37-.032-.06-.829-1.475-2.4-1.584-.25.002-.882.042-1.035.525-.169.537.424.944.679 1.117l.058.034c.029.015.707.371 1.213 1.644.105.333 1.03 2.84 4.353 2.399.002.367 0 .552-.004.7v.26c0 .15-.045.378-.096.525C4.386 23.558.931 18.924.931 13.5.931 6.57 6.57.931 13.5.931zm6.51 5.375c.5 1.471.158 2.537.035 2.839a.468.468 0 0 0 .089.49c.805.883 1.214 1.952 1.214 3.181 0 4.72-2.796 5.666-5.535 5.97a.464.464 0 0 0-.253.815c.368.314 1.199 1.68 1.199 2.744v2.446c0 .009.001.414.134.809a12.513 12.513 0 0 1-6.792-.002c.135-.396.139-.802.139-.81l.001-.248c.002-.211.006-.497 0-1.266a.473.473 0 0 0-.174-.362.47.47 0 0 0-.391-.09c-3.126.681-3.802-1.576-3.828-1.67l-.016-.047c-.448-1.135-1.037-1.713-1.388-1.975.759.267 1.182 1.007 1.193 1.024 1.231 2.107 3.264 2.162 4.328 1.685a.463.463 0 0 0 .27-.36c.095-.665.826-1.545 1.196-1.87a.464.464 0 0 0 .136-.488.461.461 0 0 0-.39-.324c-2.73-.31-5.524-1.266-5.524-5.98 0-1.228.41-2.3 1.219-3.181a.464.464 0 0 0 .087-.491c-.124-.302-.467-1.364.031-2.837.396.013 1.362.182 2.988 1.286.112.076.256.1.387.063.973-.27 2.058-.416 3.135-.421 1.08.005 2.166.15 3.14.421.131.037.273.013.386-.063 1.635-1.11 2.6-1.275 2.984-1.288z" /></svg></a>
                                                    </div>
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic NextTopic Print ExpandAll CollapseAll;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="js-anchorer main-content">
                                                    <h1>Tutorial - Frontend - Create a Component</h1>
                                                    <p>
                                                        <img src="../../../resources/images/shoptype/b2b_shop.png" /> <img src="../../../resources/images/shoptype/b2c_shop.png" /> <img src="../../../resources/images/shoptype/mastersuite.png" /></p>
                                                    <p>As Spryker Shop implements&#160;the <a href="../../../front-end_developer_guide/atomic_frontend/overview.htm#component-model" target="_blank">Component Model</a>, adding new functionality to it usually means implementing a new component. In this document, we shall review creation of a new component on the example of a simple block that displays the count of DOM elements of a certain type. To implement it:</p>
                                                    <h2>1. Create Component Folder</h2>
                                                    <p>First of all, you need to create a folder on&#160;the file system where all component files will be located. By default,&#160;project level components are located under&#160;<code>src/Pyz/Yves/ShopUi/Theme/default/components</code>. This folder should contain subfolders for each component type (<i>atoms</i>, <i>molecules</i>, <i>organisms</i>). A links counter is a simple molecule, so it will be created under the <b>molecules</b>&#160;subfolder. Per naming conventions, the folder name follows <a href="http://wiki.c2.com/?KebabCase" target="_blank">Kebab Case</a>:&#160;<i>src/Pyz/Yves/ShopUi/Theme/default/components/<b>molecules</b>/new-component-counter</i>.</p>
                                                    <p>Open the <code>new-component-counter</code>&#160;folder and create the following files:</p>
                                                    <ul>
                                                        <li value="1"><code>index.ts</code> - Webpack entry point;</li>
                                                        <li value="2"><code>new-component-counter.scss</code> - styles;</li>
                                                        <li value="3"><code>new-component-counter.ts</code> - Javascript code;</li>
                                                        <li value="4"><code>new-component-counter.twig</code> - component template.</li>
                                                    </ul>
                                                    <h2>2. Define Template</h2>
                                                    <p>The first thing to do when creating a component is to define a template for it. A template specifies which blocks a component consists of and how they are arranged. This is done in Twig. Open the&#160;<code>new-component-counter.twig</code> file.</p>
                                                    <p>First, we need to define the inheritance of the component. A component can inherit from a model or another component. Since we are creating a new component, it can be inherited from the following models defined in Spryker Shop Application:</p>
                                                    <ul>
                                                        <li value="1">
                                                            <p>atoms, molecules and organisms extend model <b>component</b>:<br /><code>{% extends model('component') %}</code></p>
                                                        </li>
                                                        <li value="2">
                                                            <p>templates and views extend model <b>template</b><br /><code>{% extends model('template') %}</code></p>
                                                        </li>
                                                    </ul>
                                                    <p>As we are creating a molecule, it must inherit the <b>component</b> model. For this purpose, add the following:</p><pre><code class="language-Twig line-numbers">{% extends model('component') %}</code></pre>
                                                    <p>After that, we need to define a configuration object for our new component. A configuration consists of the following:</p>
                                                    <ul>
                                                        <li value="1">
                                                            <p><b>name</b> - specifies the component name. It is also used as the class name of the component.</p>
                                                        </li>
                                                        <li value="2">
                                                            <p><b>tag</b> <i>(optional)</i> - specifies the name of the DOM tag that will be used to render the component. It also defines the component Javascript class name (<b>jsName</b>) automatically.</p>
                                                            <p class="info">If the tag name is not defined,&#160;<b>div</b> is used by default.</p>
                                                        </li>
                                                        <li value="3">
                                                            <p><b>jsName</b> <i>(optional)</i>&#160;- explicitly specifies the&#160;Javascript class name&#160;(<b>.js-classname</b>) of the component.</p>
                                                            <p class="tip"><b>Separation of Logic from Styles</b>
                                                                <br />To enforce separation between logic and visual styles and achieve clear understanding as to which code is responsible for what, the following convention has been put in place:<br />- code related to <b>styles</b> is always contained in <i><b>{{config.name}}</b>__element</i> classes;<br />- code related to <b>behavior</b> is always contained in <i><b>{{config.jsName}}</b>__element</i> classes;</p>
                                                        </li>
                                                    </ul>
                                                    <p>The same as with files and folders, <i>Kebab Case</i> should be used</p>
                                                    <p>We will use a custom tag for the component. It will have the same name as the name of the component. Add the <i>config</i> element as follows:</p><pre><code class="language-Twig line-numbers">{% define config = {
    name: 'new-component-counter',
    tag: 'new-component-counter'
} %}</code></pre>
                                                    <p>Now, we need to define a contract for the component. Contract consists of the attributes required for the component to function properly. Attributes can be either&#160;<b>required</b> or <b>optional</b>. <i>Required</i>&#160;attributes must always be defined whenever a component is used, while&#160;<i>optional </i>ones can be left undefined. Nevertheless, by convention, attributes cannot have their value undefined. For this reason, if you define an optional attribute in your contract, you must set a default value for it.</p>
                                                    <p>Let us define 2 attributes. They will be used to pass the component <i>title</i> and <i>description</i> displayed on a page. <i>Title</i> will be required and <i>description</i>&#160;will be optional with the default value of&#160;<i>no description.</i></p><pre><code class="language-Twig line-numbers">{% define data = {
    name: required,
    description: 'no description'
} %}</code></pre>
                                                    <p>In addition to the data contract, you can also add attributes that will be passed in the HTML tag of the component. The same as <b>data</b> attributes, they can be required or not.</p>
                                                    <p>For our component, we will use an attribute called&#160;<i>element-selector</i>. It will be used to specify the type of HTML elements to count. Let us add the attribute and make it required:</p><pre><code class="language-Twig line-numbers">{% define attributes = {
    'element-selector': required
} %}</code></pre>
                                                    <p>With the above configuration, if we want our component to count&#160;<b>a</b>&#160;tags, we need to embed it on a page as follows:</p><pre><code class="language-Twig line-numbers">{% include molecule('new-component-counter') with {
                ...
                attributes: {
                    'element-selector': 'a'
                }
            } only %}</code></pre>
                                                    <p>Finally, let us define the template. You can do this like you would normally do in Twig.</p><pre><code class="language-Twig line-numbers">{% block body %}
    {% spaceless %}
        &lt;strong class="{{config.name}}__name"&gt;
            {{data.name}}
        &lt;/strong&gt;
        &lt;em class="{{config.name}}__description"&gt;
            {% if data.description is not empty %}{{data.description}}{% endif %}
        &lt;/em&gt;
        {% block counter %}
            Found &lt;strong class="{{config.name}}__counter {{config.jsName}}__counter"&gt;&lt;/strong&gt; elements
        {% endblock %}
    {% endspaceless %}
{% endblock %}</code></pre>
                                                    <h2>3. Create Styles</h2>
                                                    <p>Now, let us create visual styles used to display the component on a page. When creating styles, use <a href="https://en.bem.info/methodology/css/" target="_blank">BEM methodology</a>. To link the style to the new component, the class name must be the same as the component name, also in <i>Kebab Case</i>.</p>
                                                    <p>Open file&#160;<code>new-component-counter.scss</code>&#160;file and add the following code:</p><pre><code class="language-Css line-numbers">.new-component-counter {
    &amp;__name {
        display: block;
    }

    &amp;__description {
        display: block;
        color: $setting-color-dark;
    }

    &amp;__counter {
        color: $setting-color-alt;
    }

    &amp;--big {
        @include helper-font-size(big);
    }
}</code></pre>
                                                    <p class="info">As shown in the example, you can use global variables, functions and mixins&#160;in your styles, for example&#160;<i>$setting-color-alt</i> or&#160;<i>$setting-color-dark</i>. They can be found in the <code>vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/styles</code>&#160;folder. For more details, see section&#160;<b>SASS Layer</b> in <a href="../../../front-end_developer_guide/atomic_frontend/overview.htm">Atomic Frontend</a>.</p>
                                                    <p>Also, the styles must be locatable by Webpack. For this purpose, we need to add them to the entry point of the component. Open the&#160;<i>index.ts</i> file and add the following line:</p><pre><code class="language-Css line-numbers">import './new-component-counter.scss';</code></pre>
                                                    <h2>4. Implement Behavior</h2>
                                                    <p>Finally, we need to implement the actual code that will count the elements. Open the&#160;<code>new-component-counter.ts</code>&#160;file.</p>
                                                    <p>The component we are creating is a molecule which is inherited from the&#160;<i>Component</i> model. Because of this, it must extend the&#160;<b>Component</b> base class defined in the <i>ShopUI</i> module. First, we need to import the base class:</p><pre><code class="language-Css line-numbers">import Component from 'ShopUi/models/component';</code></pre>
                                                    <p>After that, we need to create the new component class extending the base&#160;class. The new component class must implement a DOM callback.&#160;You can use any callback defined by the <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">Web Components Specification</a>.&#160;When the component receives the callback you define, it should execute the behavioral logic.</p>
                                                    <p class="tip">It is recommended to use&#160;<b>ready&#160;</b>callback. This callback is triggered when the component is ready and all other components have already been loaded in the DOM. It is the safest approach from the point of view of DOM manipulation.</p>
                                                    <p>Let us implement the&#160;<b>ready</b> callback. Upon receiving the callback, the component will count the number of tags defined by&#160;<i>element-selector</i>.</p>
                                                    <p>To fulfill our goal, we can use&#160;keyword&#160;<i>this</i>. It provides direct access to the public API of the HTML element associated with the component.</p>
                                                    <p>Names of Javascript classes follow <a href="http://wiki.c2.com/?CamelCase" target="_blank">Camel Case</a>, thus, the behavior of our component will be implemented by Javascript class&#160;<b>NewComponentCounter</b>:</p><pre><code class="language-Javascript line-numbers">export default class NewComponentCounter extends Component {
    protected counter: HTMLElement
    protected elements: HTMLElement[]

    protected readyCallback(): void {
        this.counter = &lt;HTMLElement&gt;document.querySelector(`.${this.jsName}__counter`);
        this.elements = &lt;HTMLElement[]&gt;Array.from(document.querySelectorAll(this.elementSelector)); this.count(); }
                        count(): void { this.counter.innerText = `${this.elements.length}`; } get elementSelector():
                        string { return this.getAttribute('element-selector'); } }</code></pre>
                                                    <p>After implementing the behavior, we also need to bind the Javascript class to the DOM. For this purpose, we need to use the&#160;<b>register</b> function of the Spryker Shop application. It accepts&#160;<b>2</b> arguments:</p>
                                                    <ul>
                                                        <li value="1"><b>name</b> - specifies the component name.<br />This name will be associated with the component and can be used in Twig to insert the component in a template. Also, it will be used in the DOM as a tag name. Whenever a tag with the specified name occurs in the DOM, the Shop Application will load the component. It must be the same as the&#160;<code>data.tag</code> specified in the component Twig on step&#160;<b>2</b>.</li>
                                                        <li value="2">
                                                            <p><b>importer</b> - must be a call of Webpack's&#160;<b>import</b> function to import Typescript code for the component.<br />The call must include a Webpack magic comment that specifies which type of import you want for the component, 'lazy' or 'eager'. For details, see&#160;<a href="https://webpack.js.org/guides/code-splitting/#dynamic-imports" target="_blank">Dynamic Imports</a>.</p>
                                                        </li>
                                                    </ul>
                                                    <p>In twig, we used tag name <code>new-component-counter</code>. Let us bind it to the Javascript class we created and use 'lazy' import. To do this, open file&#160;<code>index.ts</code> again and attach the following code:</p><pre><code class="language-Javascript line-numbers">// Import the 'register' function from the Shop Application
import register from 'ShopUi/app/registry';

// Register the component
export default register(
    'new-component-counter',
    () =&gt; import(/* webpackMode: "lazy" */'./new-component-counter')
);</code></pre>
                                                    <h2>5. Compile and Use the Component</h2>
                                                    <p>Our component is almost complete. The only thing left is to compile it. Execute the following line in the console: <code>npm run yves</code></p>
                                                    <p>When done, you can include it into other components, views and templates.</p>
                                                    <ul>
                                                        <li value="1">Copy file&#160;<code>vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/page-layout-main/page-layout-main.twig</code> to&#160;<code>src/Pyz/Yves/ShopUi/Theme/default/page-layout-main/page-layout-main.twig</code>. Doing so overrides the default main page on the project level.</li>
                                                        <li value="2">
                                                            <p>Add the following&#160;code to the very beginning of the&#160;<code>&lt;main&gt;</code> block. It will include our new component&#160;and configure it to count&#160;<b>a</b> tags:</p><pre><code class="language-Twig line-numbers">{% include molecule('new-component-counter') with {
    modifiers: ['big'],
    data: {
        name: 'Counting a tags...',
        description: 'How many links are there on this page?'
    },
    attributes: {
        'element-selector': 'a'
    }
} only %}</code></pre>
                                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />See resulting file (page-layout-main.twig)</a></span>
                                                                <div class="MCDropDownBody dropDownBody">
                                                                    <p><pre><code class="language-Twig line-numbers">{% extends template('page-blank') %}

{%- block class -%}js-page-layout-main__side-drawer-container{%- endblock -%}

{% block body %}
    {% block notifications %}
        {% include organism('notification-area') only %}
    {% endblock %}

    {% block sidebar %}
        {% include organism('component-side-drawer') with {
            class: 'is-hidden-lg-xl',
            attributes: {
                'container-selector': 'js-page-layout-main__side-drawer-container',
                'trigger-selector': 'js-page-layout-main__side-drawer-trigger'
            }
        } only %}
    {% endblock %}

    {% block outside %}{% endblock %}

    {% block header %}
        {% embed organism('header') only %}
            {% block mobile %}
                &lt;a href="#" class="link link--alt js-page-layout-main__side-drawer-trigger"&gt;
                    {% include atom('icon') with {
                        modifiers: ['big'],
                        data: {
                            name: 'bars'
                        }
                    } only %}
                &lt;/a&gt;
            {% endblock %}
        {% endembed %}
    {% endblock %}

    &lt;div class="container"&gt;
        {% block pageInfo %}
            &lt;div class="box"&gt;
                {% block breadcrumbs %}
                    {% include molecule('breadcrumb') only %}
                {% endblock %}

                &lt;hr /&gt;

                {% block title %}
                    &lt;h3&gt;{{data.title}}&lt;/h3&gt;
                {% endblock %}
            &lt;/div&gt;
        {% endblock %}

        &lt;main&gt;
            {#
                Use the new component
            #}
            {% include molecule('new-component-counter') with {
                modifiers: ['big'],
                    data: {
                    name: 'Counting a tags...',
                    description: 'How many links are there on this page?'
                },
                attributes: {
                    'element-selector': 'a'
                }
            } only %}
            {% block content %}{% endblock %}
        &lt;/main&gt;

        {% block footer %}
                {% include organism('footer') only %}
        {% endblock %}

        {% block copyright %}
            &lt;p class="text-center text-small text-secondary"&gt;
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
                &lt;br&gt;Aenean commodo ligula eget dolor. Aenean massa.
                &lt;br&gt;© ACME Company
            &lt;/p&gt;
        {% endblock %}
    &lt;/div&gt;

    {% block icons %}
        {% include atom('icon-sprite') only %}
    {% endblock %}
{% endblock %}</code></pre>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </li>
                                                        <li value="3">
                                                            <p>Now, open the front page of Spryker Shop. The new component will appear at the top of the page, below the header:</p>
                                                            <p>
                                                                <img src="../../../resources/images/frontend/new-component-counter.png" />
                                                            </p>
                                                        </li>
                                                    </ul>
                                                    <p><i>Last review date: November 19th, 2018</i>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div><a class="scroll-top js-scroll-top" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill="#FFF" fill-rule="nonzero" d="M11.82 5.22a.54.54 0 0 1 0 .806.636.636 0 0 1-.852 0L6.607 1.937v13.49a.587.587 0 0 1-.602.573c-.336 0-.611-.258-.611-.573V1.937L1.04 6.026a.647.647 0 0 1-.86 0 .54.54 0 0 1 0-.807L5.573.163a.636.636 0 0 1 .852 0L11.82 5.22z" /></svg></a>
                                <script>/* <![CDATA[ */
			function createGithubUrl() {
			var GITHUB_CONTENT_PATH = '/blob/master/public';
			var link = document.querySelector('.js-widget-github-link');
			var href =
			link.getAttribute('href')
			+ GITHUB_CONTENT_PATH
			+ window.location.pathname;
			link.setAttribute('href', href);
			}
			createGithubUrl();
		/* ]]> */</script>
                                <script>/* <![CDATA[ */
			requirejs.config({
				appDir: '',
				paths: {
					'clipboard': ['https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min']
					
				}
			});
			require(['clipboard'], function(Clipboard) {
				console.log(Clipboard);
				window.Clipboard = Clipboard;
			});
		/* ]]> */</script>
                                <script src="../../../resources/scripts/perfect-scrollbar.js">
                                </script>
                                <script src="../../../resources/scripts/imagemapster.js">
                                </script>
                                <script src="../../../resources/scripts/script.js">
                                </script>
                                <script src="../../../resources/scripts/prism.js">
                                </script>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>
