<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1 style="vertical-align: super;">Tutorial - Hello World - <MadCap:variable name="General.ProductName" /></h1>
        <p class="info">This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the <a href="https://training.spryker.com/courses/developer-bootcamp">Spryker Training</a> web-site.</p>
        <h2>Challenge Description</h2>
        <p>Show "Hello World!" string on a web page on your browser. To do so, build a new module called <b>HelloWorld</b>.</p>
        <h2>Build the HelloWorld Module</h2>
        <p>The steps described in this procedure describe how to build your new module using the Spryker code generator:</p>
        <ol>
            <li>
                To add a new Yves module called <b>HelloWorld</b>, go to <code>/src/Pyz/Yves/</code> and add a new module called HelloWorld.
				<p class="info">A new module is simply a new folder. </p></li>
            <li>Now add a new controller for the module. 
				<p>Add a new folder inside the HelloWorld module called Controller, and then add the following controller class called IndexController:</p><![CDATA[
				]]><pre><code class="language-PHP line-numbers">
namespace Pyz\Yves\HelloWorld\Controller;
 
use Spryker\Yves\Kernel\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
 
class IndexController extends AbstractController
{
	/**
    * @param Request $request
	*
	* @return \Spryker\Yves\Kernel\View\View
	*/
	public function indexAction(Request $request)
		{
			$data = ['helloWorld' =&gt; 'Hello World!'];
 
			return $this-&gt;view(
				$data,
				[],
				'@HelloWorld/views/index/index.twig'
			);
		}
}
				</code></pre></li>
            <li>Add the rout to the controller:
			<p>1. Add a new folder inside the HelloWorld module called Plugin.</p><p>2. Inside the <b>Plugin</b> folder, add a folder called <b>Provider</b>.</p><p>3. Add your <code>ControllerProvider</code> class with the name <code>HelloWorldControllerProvider</code>:
				<pre><code class="language-PHP line-numbers">
namespace Pyz\Yves\HelloWorld\Plugin\Provider;
 
use Silex\Application;
use SprykerShop\Yves\ShopApplication\Plugin\Provider\AbstractYvesControllerProvider;
 
class HelloWorldControllerProvider extends AbstractYvesControllerProvider
{
	const HELLO_WORLD_INDEX = 'hello_world-index';
 
	/**
	* @param \Silex\Application $app
	*
	* @return void
	*/
	protected function defineControllers(Application $app)
	{
		$this-&gt;createGetController('/hello-world', static::HELLO_WORLD_INDEX, 'HelloWorld', 'Index', 'index');
	}
}</code></pre></p></li>
            <li>Register the ControllerProvider in the application, so the application knows about your controller action.
                <p>Go to <code>YvesBootstrap::getControllerProviderStack</code> method in ShopApplication module and add <code>HelloWorldControllerProvider</code> to the array.</p></li>
            <li>
                Finally, add the twig file to render your Hello World page. Add the following folder structure inside the HelloWorld module: <code>Theme/default/views/index</code>. 
				<p class="info">This folder structure reflects your theme and controller names. Default is the theme name, and index is the controller name. For every action there is a template with the same name.</p><p>As your action is called index, add a twig file for your action called <code>index.twig</code>:</p><pre><code class="language-PHP line-numbers">
	{% extends template('page-layout-main') %}
 
	{% define data = {
	helloWorld: _view.helloWorld
	} %}
 
	{% block content %}
		&lt;div&gt;&lt;h2&gt;{{ data.helloWorld }}&lt;/h2&gt;&lt;/div&gt;
	{% endblock %}
				</code></pre></li>
            <li>Open the newly created page <a href="http://www.de.suite.local/hello-world">http://www.de.suite.local/hello-world</a>.</li>
        </ol>
        <p>&#160;</p>
        <p><i>Last review date: Jul 20, 2018 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment" style="font-style: italic;">by Hussam Hebbo, Anastasija Datsun</MadCap:conditionalText>
        </p>
    </body>
</html>