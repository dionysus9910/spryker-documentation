<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="">
    <head>
    </head>
    <body>
        <h1>Tutorial - Using Translations</h1>
        <p>
            <img src="../../Resources/Images/shoptype/B2B_Shop.png" />
            <img src="../../Resources/Images/shoptype/B2C_Shop.png" />
            <img src="../../Resources/Images/shoptype/MasterSuite.png" />
            <img src="../../Resources/Images/shoptype/Demoshop.png" />
        </p>
        <p MadCap:conditions="General.Hidden Comment">used to be: http://spryker.github.io/tutorials/yves/using-translations/</p>
        <p>The data stored in the key-value storage can be used for multiple purposes:</p>
        <ul>
            <li class="bullet_list">URL mappings</li>
            <li class="bullet_list">localized product details</li>
            <li class="bullet_list">localized product categories details</li>
        </ul>
        <h2>Translations - Using Twig Translator</h2>
        <p>Twig Translator uses the data that comes from the Redis key-value storage. The glossary keys store static localized text that’s not likely to be subject of a change ( e.g. : caption of a label).</p>
        <p>Format of the glossary keys: {store}.{locale}.glossary.translation.{glossary_key}</p>
        <p>Example :</p>
        <ul>
            <li class="bullet_list"><strong>key</strong> : demo.de_de.glossary.translation.catalog.next</li>
            <li class="bullet_list"><strong>value</strong> : weiter</li>
        </ul>
        <p>The example below shows how the Twig Translator can be used :</p><pre><code class="language-PHP line-numbers">&lt;div class="catalog__pagination"&gt;
    &lt;button class="pagination__button js-pagination-prev"&gt;catalog.prev&lt;/button&gt;
    &lt;button class="pagination__button js-pagination-next"&gt;catalog.next&lt;/button&gt;
&lt;/div&gt;</code></pre>
        <p>When the page containing this template is requested, the Twig Translator will replace the text containing the key (e.g. : <code>catalog.next</code>) with the value of the key stored in Redis that corresponds to the current locale ( e.g. : for locale <code>de_DE</code>, will replace with the value of the key <code>demo.de_de.glossary.translation.catalog.next</code>)</p>
    </body>
</html>