<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.DemoShop">
    <head>
    </head>
    <body>
        <h1>Tutorial - Working with Filter Facets </h1>
        <p>
            <img src="../../Resources/Images/shoptype/B2B_Shop.png" />
            <img src="../../Resources/Images/shoptype/B2C_Shop.png" />
            <img src="../../Resources/Images/shoptype/MasterSuite.png" />
            <img src="../../Resources/Images/shoptype/Demoshop.png" />
        </p>
        <p MadCap:conditions="General.Hidden Comment">used to be: http://spryker.github.io/tutorials/yves/working-with-filter-facets/</p>
        <p>A search engine is one of the most important functionalities in an online shops because it facilitates a better navigation, allowing the user to get to the products that are in his interest.</p>
        <p>The search engine should return a small number of items that match the query.</p>
        <p>Facets provide aggregated data based on a search query. For example, let’s say we need to query for all the shirts that are in color blue. The search engine has configured a facet on category and one on the color attribute. Therefore, the search query will be executed using these 2 facets. The search result will return the entries that are aggregated both in the category facet with shirt category ID and in the color facet with value blue.</p>
        <h2>Category Facet Filter</h2>
        <p><code>CatalogClient</code> enables creating a search query when a request is submitted. <code>CatalogClient</code> exposes 2 operations:</p>
        <ul>
            <li class="bullet_list"><code>createFacetSearch(Request $request, array $category)</code>
            </li>
            <li class="bullet_list"><code>createFulltextSearch(Request $request)</code>
            </li>
        </ul>
        <p>Both of the operation can contain in the request other facet filters(such as color or size).</p>
        <p>The main difference is that the full-text search operation will add in the search query the search string contained in the request while the facet search will add a facet filter on category id.</p>
        <p>On the category detail page, the <code>createFulltextSearch(Request $request)</code> should be use, as in the example below:</p><pre><code class="language-PHP line-numbers">&lt;?php
 public function indexAction(array $categoryNode, Request $request)
    {
        $search = $this-&gt;getFactory()
            -&gt;getCatalogClient()
            -&gt;createFacetSearch($request, $categoryNode);

        $response = $search-&gt;getResult();

        if ($request-&gt;isXmlHttpRequest()) {
            return $this-&gt;formatJsonResponse($response);
        }

        return $this-&gt;viewResponse($response);
    }</code></pre>
        <p>Example:</p>
        <p MadCap:conditions="Spryker.DemoShop">Making a request on the URL <a href="http://www.de.demoshop.local/en/computers/notebooks" target="_blank" title="demoshop" alt="demoshop">http://www.de.demoshop.local/en/computers/notebooks</a> in Demoshop will be routed to the <code>CatalogController:indexAction</code> controller action, which is designated for category detail page.</p>
        <p>A facet search will be executed using the category facet with the provided category node as a parameter.</p>
        <h2>Configuring Facet Filters</h2>
        <p>As mentioned above, the category facet is a special case and needs to be handled this way because a call needs to be made to Redis to retrieve the category node ID when a category detail page is requested.</p>
        <p>Other then that, both <code>CatalogClient</code> operations can handle requests that contain other facet filters.</p>
        <p>You can integrate as many facet filters in your search query, as long as they are configured. The facet configuration is done in the <code>FacetConfig</code> class.</p>
        <p>Keep in mind that the configuration you make in the <code>FacetConfig</code> must be in sync with the structure of the data that’s exported to Elasticsearch.</p>
        <p>Also, keep in mind that even if you have the facets exported in Elasticsearch, without adding the necessary configuration in the <code>FacetConfig</code> you won’t be able to submit the correct queries.</p>
        <p>The search attributes must be configured in the <code>$attributes[]</code> in the <code>FacetConfig</code>.</p>
        <p>Example:</p><pre><code class="language-PHP line-numbers">&lt;?php
    protected static $attributes = [
    //..
        'price' =&gt; [
            static::KEY_FACET_ACTIVE =&gt; true,
            static::KEY_SORT_ACTIVE =&gt; true,
            static::KEY_FACET_FIELD_NAME =&gt; static::FIELD_INTEGER_FACET,
            static::KEY_SORT_FIELD_NAME =&gt; static::FIELD_INTEGER_SORT,
            static::KEY_TYPE =&gt; static::TYPE_SLIDER,
            static::KEY_PARAM =&gt; 'price',
            static::KEY_RANGE_DIVIDER =&gt; '-',
        ],
    ];</code></pre>
        <p>Having the price attribute added to configuration as an active facet enables us to filter the products on the value of this attribute.</p>
        <p><a href="http://www.de.demoshop.local/en/computers/notebooks?price=0-300" target="_blank">http://www.de.demoshop.local/en/computers/notebooks?price=0-300</a> request will perform a search using the category and price facets. It will return the products that are under the notebooks category with price range between 0 and 300.</p>
        <p><a href="http://www.de.demoshop.local/search?q=tablet?price=0-300" target="_blank">http://www.de.demoshop.local/search?q=tablet&amp;price=0-300</a> request will perform a full-text search with search string <code>tablet</code> and with facet filter price(price in the range 0-300).</p>
    </body>
</html>