<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.DemoShop,Spryker.B2C">
    <head>
        <link href="../../../../Resources/TableStyles/PatternedRows2.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Heidelpay - Integration to Your Project
 <img src="../../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <ol>
            <li>
                <h4>Configuration</h4>
                <p>
                    <p>You can copy over configs to your config from the Heidelpay's module<code>config.dist.php</code> file.
        </p>
       The most important configuration items are explained in the table below,
        make sure to get the required configuration items from Heidelpay:<br /><br /></p>
                <div class="u-is-scrollable">
                    <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/PatternedRows2.css');" class="TableStyle-PatternedRows2" cellspacing="0">
                        <col class="TableStyle-PatternedRows2-Column-Regular" />
                        <col class="TableStyle-PatternedRows2-Column-Regular" />
                        <col class="TableStyle-PatternedRows2-Column-Regular" />
                        <col class="TableStyle-PatternedRows2-Column-Regular" />
                        <thead>
                            <tr class="TableStyle-PatternedRows2-Head-Header1">
                                <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Configuration key*</th>
                                <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Description</th>
                                <th class="TableStyle-PatternedRows2-HeadE-Regular-Header1">Obtained from Heidelpay?</th>
                                <th class="TableStyle-PatternedRows2-HeadD-Regular-Header1">Value for debugging</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>CONFIG_HEIDELPAY_SECURITY_SENDER</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Hash which is needed for making requests to Heidelpay payment system </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Yes</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">See "Authentifizierungsdaten" section in <br /><a href="https://dev.heidelpay.de/sandbox-environment/" class="external-link" rel="nofollow">https://dev.heidelpay.de/sandbox-environment/</a></td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>CONFIG_HEIDELPAY_USER_LOGIN</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Merchant login to the Heidelpay payment system</td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Yes</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">See "Authentifizierungsdaten" section in <br /><a href="https://dev.heidelpay.de/sandbox-environment/" class="external-link" rel="nofollow">https://dev.heidelpay.de/sandbox-environment/</a></td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>CONFIG_HEIDELPAY_USER_PASSWORD</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Merchant password to the <span>Heidelpay payment system</span></td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Yes</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">See "Authentifizierungsdaten" section in <br /><a href="https://dev.heidelpay.de/sandbox-environment/" class="external-link" rel="nofollow">https://dev.heidelpay.de/sandbox-environment/</a></td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_[YOUR_CHANNEL_NAME]**</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Transaction channel hash used for specified payment method in Heidelpay payment system, necessary for making API requests.</td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">Yes</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">See "Authentifizierungsdaten" section for each payment method in <a href="https://dev.heidelpay.de/sandbox-environment/" class="external-link" rel="nofollow">https://dev.heidelpay.de/sandbox-environment/</a></td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows"><var>CONFIG_HEIDELPAY_APPLICATION_SECRET</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Internal secret key, used by Heidelpay to "sign" API requests </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-LightRows">Recommended</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-LightRows">"debug_secret"</td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-DarkerRows">
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows"><var>CONFIG_HEIDELPAY_PAYMENT_RESPONSE_URL</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">A response URL used by Heidelpay to send Payment results to the system when the order is made. Make sure it is accessible from outside!</td>
                                <td class="TableStyle-PatternedRows2-BodyE-Regular-DarkerRows">No</td>
                                <td class="TableStyle-PatternedRows2-BodyD-Regular-DarkerRows">If your dev (staging/whatever) system is not accessible from outside, see "Usage from localhost" section below to figure out how to debug the system when developing locally.</td>
                            </tr>
                            <tr class="TableStyle-PatternedRows2-Body-LightRows">
                                <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows"><var>CONFIG_YVES_CHECKOUT_ASYNC_RESPONSE_URL</var>
                                </td>
                                <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">A response URL used by Secure Credit Card payment method on the payment step of the checkout. Heidelpay payment system will use it to send asynchronous credit card registration response.</td>
                                <td class="TableStyle-PatternedRows2-BodyB-Regular-LightRows">No</td>
                                <td class="TableStyle-PatternedRows2-BodyA-Regular-LightRows">If your dev (staging/whatever) system is not accessible from outside, see "Usage from localhost" section below to figure out how to debug the system when developing locally.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>* Configuration keys are used as follows: <var>$config[HeidelpayConstants::CONFIGURATION_KEY_HERE] = 'CONFIGURATION VALUE HERE'</var><br />** Repeat this configuration for each payment method you're going to use.<br /><br />Based
            on the payment methods you're going to use, remove unnecessary processes from&#160;<var>OmsConstants::ACTIVE_PROCESSES</var> and <var>SalesConstants::PAYMENT_METHOD_STATEMACHINE_MAPPING</var>.</p>
                <p>Please see example of the configuration below:</p>
                <p><pre><code class="language-php line-numbers">
// Navigation
$YVES_HOST_PROTOCOL = 'http';
 
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_SUCCESS_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/checkout/success';
$config[HeidelpayConstants::CONFIG_YVES_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES];
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_PAYMENT_FAILED_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/payment-failed?error_code=%s';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_IDEAL_AUTHORIZE_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/ideal-authorize';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_SUMMARY_STEP_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/checkout/summary';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_ASYNC_RESPONSE_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/cc-register-response';
 
// Error handling
$config[ErrorHandlerConstants::DISPLAY_ERRORS] = true;
$config[ErrorHandlerConstants::ERROR_RENDERER] = WebExceptionErrorRenderer::class;
 
// Heidelpay API
$config[HeidelpayConstants::CONFIG_HEIDELPAY_SECURITY_SENDER] = 'CONFIG_HEIDELPAY_SECURITY_SENDER';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_USER_LOGIN] = 'CONFIG_HEIDELPAY_USER_LOGIN';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_USER_PASSWORD] = 'CONFIG_HEIDELPAY_USER_PASSWORD';
 
$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_CC_3D_SECURE] = 'CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_CC_3D_SECURE';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_PAYPAL] = 'CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_PAYPAL';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_IDEAL] = 'CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_IDEAL';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_SOFORT] = 'CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_SOFORT';
 
// Shop configuration values
$config[HeidelpayConstants::CONFIG_HEIDELPAY_APPLICATION_SECRET] = 'application_secret';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_SANDBOX_REQUEST] = true;
 
$config[HeidelpayConstants::CONFIG_HEIDELPAY_LANGUAGE_CODE] = 'DE';
$config[HeidelpayConstants::CONFIG_HEIDELPAY_PAYMENT_RESPONSE_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/payment';
 
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_SUCCESS_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/checkout/success';
$config[HeidelpayConstants::CONFIG_YVES_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES];
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_PAYMENT_FAILED_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/payment-failed?error_code=%s';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_IDEAL_AUTHORIZE_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/ideal-authorize';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_PAYMENT_STEP_PATH] = '/checkout/payment';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_SUMMARY_STEP_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/checkout/summary';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_ASYNC_RESPONSE_URL] = $YVES_HOST_PROTOCOL . '://' . $config[ApplicationConstants::HOST_YVES] . '/heidelpay/cc-register-response';
 
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_PAYMENT_FRAME_CUSTOM_CSS_URL] = '';
$config[HeidelpayConstants::CONFIG_YVES_CHECKOUT_PAYMENT_FRAME_PREVENT_ASYNC_REDIRECT] = "FALSE";
$config[HeidelpayConstants::CONFIG_ENCRYPTION_KEY] = "encryption_key";
 
// Heidelpay Split-payment marketplace logic
$config[HeidelpayConstants::CONFIG_IS_SPLIT_PAYMENT_ENABLED_KEY] = true;</code></pre>
                </p>
            </li>
            <li>
                <h4>Add dependencies to <var>src/Pyz/Yves/Checkout/CheckoutDependencyProvider.php</var>:</h4><pre><code class="language-php line-numbers">

class CheckoutDependencyProvider extends SprykerCheckoutDependencyProvider
{
...
	/**
	 * @param \Spryker\Yves\Kernel\Container $container
	 *
	 * @return \Spryker\Yves\Kernel\Container
  	 */
	protected function providePlugins(Container $container)
...
		return $pimplePlugin-&gt;getApplication();
	};

+	$container[static::PAYMENT_SUB_FORMS] = function () {
+		$paymentSubFormPlugin = new SubFormPluginCollection();
+	
+		$paymentSubFormPlugin-&gt;add(new HeidelpaySofortSubFormPlugin());
+		$paymentSubFormPlugin-&gt;add(new HeidelpayPaypalAuthorizeSubFormPlugin());
+		$paymentSubFormPlugin-&gt;add(new HeidelpayPaypalDebitSubFormPlugin());
+		$paymentSubFormPlugin-&gt;add(new HeidelpayIdealSubFormPlugin());
+		$paymentSubFormPlugin-&gt;add(new HeidelpayEasyCreditSubFormPlugin()); 
+ 		$paymentSubFormPlugin-&gt;add(new HeidelpayCreditCardSecureSubFormPlugin()); 
+			 return $paymentSubFormPlugin;
+ }; 
+ $container[static::PAYMENT_METHOD_HANDLER] = function () { 
+ 		$paymentMethodHandler = new StepHandlerPluginCollection(); 
+ 		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_SOFORT); 
+ 		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_PAYPAL_AUTHORIZE); 
+ 		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_PAYPAL_DEBIT); 
+ 		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_IDEAL);
+		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_EASY_CREDIT); 
+ 		$paymentMethodHandler-&gt;add(new HeidelpayHandlerPlugin(), PaymentTransfer::HEIDELPAY_CREDIT_CARD_SECURE); 
+ 		
+		return $paymentMethodHandler; 
+ }; 					
+ return $container; }</code></pre>
            </li>
            <li>
                <h4>Add dependency to <var>src/Pyz/Zed/Oms/OmsDependencyProvider.php</var>:</h4><pre><code class="language-php line-numbers">

 class OmsDependencyProvider extends SprykerOmsDependencyProvider
 {
    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return \Spryker\Zed\Kernel\Container
     */
    public function provideBusinessLayerDependencies(Container $container)
...

+
+        $container-&gt;extend(static::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) {
+            $conditionCollection
+                -&gt;add(new IsAuthorizationCompletedPlugin(), 'Heidelpay/IsAuthorizationCompleted')
+                -&gt;add(new IsDebitCompletedPlugin(), 'Heidelpay/IsDebitCompleted')
+                -&gt;add(new IsCaptureApprovedPlugin(), 'Heidelpay/IsCaptureApproved');
+
+
+            return $conditionCollection;
+        });
+
+        $container-&gt;extend(static::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection) {
+            $commandCollection
+                -&gt;add(new AuthorizePlugin(), 'Heidelpay/Authorize')
+                -&gt;add(new DebitPlugin(), 'Heidelpay/Debit')
+                -&gt;add(new CapturePlugin(), 'Heidelpay/Capture');
+            return $commandCollection;
+        });
+
         return $container;
     }</code></pre>
                <p>In case of need to use marketplace integration, you should extend product with the additional field Heidelpay Item Channel Id, before order will be placed. For example, setting your Heidelpay Item Channel ID can look like:</p><pre><code class="language-php">
...
$product-&gt;setHeidelpayItemChannelId('........');</code></pre>
            </li>
            <li>
                <h4>Add dependencies to <var>src/Pyz/Zed/Payment/PaymentDependencyProvider.php</var>:</h4><pre><code class="language-php line-numbers">...

+class PaymentDependencyProvider extends  SprykerPaymentDependencyProvider
+{
+
+
+    public function provideBusinessLayerDependencies(Container $container)
+    {
+        $container = parent::provideBusinessLayerDependencies($container);
+        $container-&gt;extend(static::CHECKOUT_PLUGINS, function (CheckoutPluginCollection $pluginCollection) {
+            $pluginCollection-&gt;add(new HeidelpaySaveOrderPlugin(), HeidelpayConfig::PROVIDER_NAME, PaymentDependencyProvider::CHECKOUT_ORDER_SAVER_PLUGINS);
+            $pluginCollection-&gt;add(new HeidelpayPostSavePlugin(), HeidelpayConfig::PROVIDER_NAME, PaymentDependencyProvider::CHECKOUT_POST_SAVE_PLUGINS);
+            return $pluginCollection;
+        });
+
+
+    }
+}</code></pre>
            </li>
            <li>
                <h4>Add Heidelpay's controller provider to the Yve's bootstrap:</h4><pre><code class="language-php line-numbers">...
use SprykerEco\Yves\Heidelpay\Plugin\Provider\HeidelpayControllerProvider;
&#160;
class YvesBootstrap
{
...
protected function getControllerProviderStack($isSsl)
{
    return [
        ...
        new HeidelpayControllerProvider($isSsl),
    ];
}
...</code></pre>
            </li>
            <li>
                <h4>Setup database and DTOs</h4>
                <p>The Heidelpay-Bundle will integrate 3 new tables to your database scheme. Make sure that you
        integrate them in accordance with your project migration guideline. (e.g. run console <var>propel:diff</var> to see
            the migrations needed).</p>
                <p><pre><code class="language-php">console propel:diff &amp;&amp; console propel:migrate &amp;&amp; console propel:model:build</code></pre>
                </p>
                <p>You also have to genreate data transfer objects which is related with Heidelpay</p>
                <p><pre><code class="language-php">console tr:ge</code></pre>
                </p>
            </li>
            <li>
                <h4>Change payment step template</h4>
                <p>Change the following lines to change behavior on the payment selection step:
        <pre><code class="language-php line-numbers">
+++ b/src/Pyz/Yves/Checkout/Theme/default/checkout/payment.twig
@@ -11,22 +11,17 @@

             &lt;div class="callout"&gt;
                 &lt;ul class="no-bullet"&gt;
-                    {% for name, choices in paymentForm.paymentSelection.vars.choices %}
-
-                        &lt;h4&gt;{{ ('checkout.payment.provider.' ~ name) | trans }}&lt;/h4&gt;
-
-                        {% for key, choice in choices %}
-                            &lt;li&gt;  &amp;nbsp;
-                                {{ form_widget(paymentForm.paymentSelection[key], {'attr': {'class': '__toggler'}}) }}
-                                {{ form_label(paymentForm.paymentSelection[key]) }}
-                                &lt;div class="__toggler-target"&gt;
-                                    &lt;div class="row columns"&gt;
-                                        {{ checkout.include_subform(paymentForm[paymentForm.paymentSelection[key].vars.value]) }}
-                                    &lt;/div&gt;
+                    {% for method in paymentForm.paymentSelection %}
+                        &lt;li&gt;
+                            {{ form_widget(method, {'attr': {'class': '__toggler'}}) }}
+                            {{ form_label(method) }}
+                            &lt;div class="__toggler-target"&gt;
+                                &lt;div class="row columns"&gt;
+                                    {{ checkout.include_subform(paymentForm[method.vars.value]) }}
                                 &lt;/div&gt;
-                            &lt;/li&gt;
-                        {% endfor %}
-
+                                {% if not loop.last %}&lt;hr&gt;{% endif %}
+                            &lt;/div&gt;
+                        &lt;/li&gt;
                     {% endfor %}
                 &lt;/ul&gt;
             &lt;/div&gt;</code></pre></p>
            </li>
        </ol>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="../heidelpay.htm">Getting a general idea about Heidelpay</a>
            </li>
            <li><a href="heidelpay-installation.htm">Installing Heidelpay</a>
            </li>
            <li><a href="heidelpay-error-workflow.htm">Configuring Heidelpay error workflow</a>
            </li>
            <li><a href="heidelpay-error-workflow.htm">Configuring Heidelpay error workflow</a>
            </li>
            <li><a href="heidelpay-credit-card.htm">Configuring Credit Card Secure payment for Heidelpay</a>
            </li>
            <li><a href="heidelpay-ideal.htm">Configuring iDeal payment for Hedelpay</a>
            </li>
            <li><a href="heidelpay-paypal-debit.htm">Configuring Paypal Debit Workflow for Heidelpay</a>
            </li>
            <li><a href="heidelpay-sofort.htm">Configuring Sofort payment for Heidelay</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last review date: November 13th, 2018</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i> by Mykyta Borysevych, Dmitry Beirak</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>