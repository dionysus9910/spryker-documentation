<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.B2C,Spryker.DemoShop,General.Draft">
    <head><title>Heidelpay Partner Integration - Easy Credit | Spryker</title>
        <meta name="description" content="Integrate Easy Credit payment through Heidelpay into Spryker Legacy Demoshop." />
    </head>
    <body>
        <h1>Heidelpay - Easy Credit <img src="../../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <h2>Setup</h2>
        <p>The following configuration should be implemented after Heidelpay has been <a href="heidelpay-installation.htm">installed</a> and <a href="heidelpay-integration.htm">integrated</a>.</p>
        <h2>Configuration</h2>
        <p>Example (for testing only):</p><pre><code class="language-bash">$config[HeidelpayConstants::CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_EASY_CREDIT] = 'CONFIG_HEIDELPAY_TRANSACTION_CHANNEL_EASY_CREDIT';</code></pre>
        <p>This value should be taken from HEIDELPAY.</p>
        <ol>
            <li>Add new EasyCredit step to StepFactory:</li><pre><code class="language-bash line-numbers">
class StepFactory extends SprykerStepFactory
{
...
/**
 * @return \Spryker\Yves\StepEngine\Process\StepCollectionInterface
 */
public function createStepCollection()
{
	$stepCollection = new StepCollection(
		$this-&gt;getUrlGenerator(),
		CheckoutControllerProvider::CHECKOUT_ERROR
	);

	$stepCollection
		-&gt;addStep($this-&gt;createEntryStep())
		-&gt;addStep($this-&gt;createCustomerStep())
		-&gt;addStep($this-&gt;createAddressStep())
		-&gt;addStep($this-&gt;createShipmentStep())
		-&gt;addStep($this-&gt;createPaymentStep())
		-&gt;addStep($this-&gt;createEasyCreditStep())
		-&gt;addStep($this-&gt;createSummaryStep())
		-&gt;addStep($this-&gt;createPlaceOrderStep())
		-&gt;addStep($this-&gt;createSuccessStep());

	return $stepCollection;
}</code></pre>
            <li>Add EasyCreditStep Class</li><pre><code class="language-bash line-numbers">
&lt;?php

/**
* This file is part of the Spryker Demoshop.
* For full license information, please view the LICENSE file that was distributed with this source code.
*/

namespace Pyz\Yves\Checkout\Process\Steps;

use Spryker\Shared\Kernel\Transfer\AbstractTransfer;
use Spryker\Yves\StepEngine\Dependency\Step\StepWithExternalRedirectInterface;
use SprykerEco\Client\Heidelpay\HeidelpayClientInterface;
use SprykerEco\Shared\Heidelpay\HeidelpayConfig;
use Symfony\Component\HttpFoundation\Request;

class EasyCreditStep extends AbstractBaseStep implements StepWithExternalRedirectInterface
{
	/**
	 * @var string
	 */
	protected $externalRedirect;

	/**
 	 * @var \SprykerEco\Client\Heidelpay\HeidelpayClientInterface
 	 */
	private $heidelpayClient;

	/**
	 * @param HeidelpayClientInterface $heidelpayClient
	 * @param $stepRoute
	 * @param $escapeRoute
	 */
	public function __construct(
		HeidelpayClientInterface $heidelpayClient,
		$stepRoute,
		$escapeRoute
	) {
		parent::__construct($stepRoute, $escapeRoute);

		$this-&gt;heidelpayClient = $heidelpayClient;
	}

	/**
	 * Require input for customer authentication if the customer is not logged in already, or haven't authenticated yet.
	 *
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function requireInput(AbstractTransfer $quoteTransfer)
	{
		return false;
	}

	/**
	 * @param \Symfony\Component\HttpFoundation\Request $request
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer $quoteTransfer
	 *
	 * @return \Spryker\Shared\Kernel\Transfer\AbstractTransfer
	 */
	public function execute(Request $request, AbstractTransfer $quoteTransfer)
	{
		if ($quoteTransfer-&gt;getPayment()-&gt;getPaymentSelection() !== HeidelpayConfig::PAYMENT_METHOD_EASY_CREDIT) {
			return $quoteTransfer;
		}

		$transfer = $this-&gt;heidelpayClient-&gt;heidelpayEasycreditRequest($quoteTransfer);
		$this-&gt;externalRedirect = $transfer-&gt;getPaymentFormUrl();

		return $quoteTransfer;
	}

	/**
	 * The customer step is considered done (return true) if he QuoteTransfer contains a non empty CustomerTransfer.
	 * If the CustomerTransfer is guest and the customer is logged in, then we override the guest customer with the
	 * logged in customer, e.g. return false and execute() will do the rest.
	 *
	 * @param \Spryker\Shared\Kernel\Transfer\AbstractTransfer|\Generated\Shared\Transfer\QuoteTransfer $quoteTransfer
	 *
	 * @return bool
	 */
	public function postCondition(AbstractTransfer $quoteTransfer)
	{
		return true;
	}

	/**
	 * Return external redirect url, when redirect occurs not within same application. Used after execute.
	 *
	 * @return string
	 */
	public function getExternalRedirectUrl()
	{
		return $this-&gt;externalRedirect;
	}
}</code></pre>
        </ol>
        <h2>Checkout Payment Step Display</h2>
        <p>Displays payment method name with a radio button. No extra input fields are required.</p>
        <h2>Payment Step Submitting</h2>
        <p>No extra actions needed, quote being filled with payment method selection as default. After selecting Easy Credit as a payment method "HP.IN" request will be sent. In the response Heidelpay returns an URL string which defines where customer has to be redirected. If everything was ok user will be redirected to the Easy Credit Externally.</p>
        <h2>Summary Review and Order Submitting</h2>
        <p>Once the customer is redirected back to us, response from Easy Credit is sent to the Heidelpay and Heidelpay makes a synchronous POST request to the shop's <var>CONFIG_HEIDELPAY_PAYMENT_RESPONSE_URL</var> URL (Yves), with the result of payment (see <var>EasyCreditController::paymentAction()</var>). This is called "external response transaction", the result will be persisted in <var>spy_payment_heidelpay_transaction_log</var> as usual. The most important data here - is the payment reference ID which can be used for further transactions like finalize/reserve/etc.</p>
        <p>After that customer will be able to see the order summary page, where they can review all related data.</p>
        <p>There user will see:</p>
        <ul>
            <li>rate plan (<var>CRITERION.EASYCREDIT_AMORTISATIONTEXT</var>)</li>
            <li>interest fees (<var>CRITERION_EASYCREDIT_ACCRUINGINTEREST</var>)</li>
            <li>total sum including the interest fees (<var>CRITERION.EASYCREDIT_TOTALAMOUNT</var>)</li>
        </ul>
        <p>If the customer has not yet completed the HP.IN they must do that again.</p>
        <p><u style="font-weight: bold;">On "save order" event</u> - save Heidelpay payment per order and items, as usual.</p>
        <p><b>When state machine is initialized</b>, an event "send authorize on registration request" will trigger the authorize on registration request. In case of success, state will be changed.</p>
        <p>Finalize - later on, when the item is shipped to the customer, it is time to call "finalize" command of the state machine. This will send HP.FI request to the Payment API. This is done in <var>FinalizePlugin</var> of the OMS command.</p>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="../heidelpay.htm">Get a general idea about Heidelpay</a><![CDATA[
            ]]></li>
            <li><a href="heidelpay-installation.htm">Install Heidelpay
            
</a>
            </li>
            <li><a href="heidelpay-integration.htm">Integrate Heidelpay</a><![CDATA[
            ]]></li>
            <li><a href="heidelpay-credit-card.htm">Configuring Credit Card Secure for Heidelpay</a><![CDATA[
            ]]></li>
            <li><a href="heidelpay-ideal.htm">Configuring iDeal for Hedelpay</a><![CDATA[
            ]]></li>
            <li><a href="heidelpay-paypal-debit.htm">Checking Paypal Debit Workflow for Heidelpay
            
</a>
            </li>
            <li><a href="heidelpay-sofort.htm">Configuring Sofort payment for Heidelay
            
</a>
            </li>
            <li><a href="heidelpay-error-workflow.htm">Configuring Heidelpay error workflow
</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last
        review date: November 13th, 2018</i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment"><i> by Ivan Pugach, Dmitry Beirak</i>
            </MadCap:conditionalText>
        </p>
    </body>
</html>