<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Spryker.ShopSuite">
    <head><title>Braintree Configuration for SCOS | Spryker</title>
        <meta name="description" content="To configure Braintree module for SCOS, use credentials that have been received after registering the Braintree account.Also, Checkout,OMS and Payment configuration needs to be added." />
    </head>
    <body>
        <h1>Braintree Configuration for SCOS <img src="../../../../Resources/Images/shoptype/MasterSuite.png" /></h1>
        <p>To configure Braintree module for <MadCap:variable name="General.ProductName" /> (SCOS), do the following:</p>
        <p>Add <var>spryker-eco/braintree</var> to your project by running <var>composer require spryker-eco/braintree</var>.</p>
        <p>Please refer to <var>config/config.dist.php</var> for an example of module configuration.
</p>
        <p>To setup the initial Braintree configuration, use the credentials you received after registering your Braintree merchant account:</p><pre><code class="language-php line-numbers">// the mode of the transaction, either development, integration, sandbox, production, qa (required)
$config[BraintreeConstants::ENVIRONMENT] = '';

// the id of the merchant used (required)
$config[BraintreeConstants::MERCHANT_ID] = '';

// the public key given by the defined merchant account (required)
$config[BraintreeConstants::PUBLIC_KEY] = '';

// the private key given by the defined merchant account (required)
$config[BraintreeConstants::PRIVATE_KEY] = '';

// merchant account id specifying the currency (Marketplace master merchant is used by default)
$config[BraintreeConstants::ACCOUNT_ID] = '';

// merchant account unique identifier (Marketplace master merchant is used by default)
$config[BraintreeConstants::ACCOUNT_UNIQUE_IDENTIFIER] = '';

// defaults to false
$config[BraintreeConstants::IS_VAULTED] = true;

// defaults to false
$config[BraintreeConstants::IS_3D_SECURE] = true;</code></pre>
        <h2>Checkout Configuration</h2>
        <p>To use Braintree in frontend, Braintree payment method handlers and subforms should be added to <var>Pyz/Yves/CheckoutPage/CheckoutPageDependencyProvider.php</var>.</p><pre xml:space="preserve"><code class="language-php line-numbers">use Spryker\Yves\StepEngine\Dependency\Plugin\Form\SubFormPluginCollection;
use Spryker\Yves\StepEngine\Dependency\Plugin\Handler\StepHandlerPluginCollection;
use SprykerEco\Yves\Braintree\Plugin\BraintreeCreditCardSubFormPlugin;
use SprykerEco\Yves\Braintree\Plugin\BraintreeHandlerPlugin;
use SprykerEco\Yves\Braintree\Plugin\BraintreePayPalSubFormPlugin;
use Generated\Shared\Transfer\PaymentTransfer;

...


/**
 * @param \Spryker\Yves\Kernel\Container $container
 *
 * @return \Spryker\Yves\Kernel\Container
 */
protected function addSubFormPluginCollection(Container $container): Container
{
	$container[self::PAYMENT_SUB_FORMS] = function () {
		$paymentSubFormPluginCollection = new SubFormPluginCollection();
		$paymentSubFormPluginCollection-&gt;add(new BraintreeCreditCardSubFormPlugin());
		$paymentSubFormPluginCollection-&gt;add(new BraintreePayPalSubFormPlugin());

		return $paymentSubFormPluginCollection;
	};

	return $container;
}

/**
 * @param \Spryker\Yves\Kernel\Container $container
 *
 * @return \Spryker\Yves\Kernel\Container
 */
protected function addPaymentMethodHandlerPluginCollection(Container $container): Container
{
	$container[self::PAYMENT_METHOD_HANDLER] = function () {
		$paymentMethodHandlerCollection = new StepHandlerPluginCollection();
		$paymentMethodHandlerCollection-&gt;add(new BraintreeHandlerPlugin(), PaymentTransfer::BRAINTREE_CREDIT_CARD);
		$paymentMethodHandlerCollection-&gt;add(new BraintreeHandlerPlugin(), PaymentTransfer::BRAINTREE_PAY_PAL);

		return $paymentMethodHandlerCollection;
	};

	return $container;
}</code></pre>
        <p>All subform and handler plugins are located in <var>SprykerEco\Yves\Braintree\Plugin\</var> namespace.</p>
        <h2>OMS Configuration</h2>
        <p>Activate the following Braintree process:</p><pre xml:space="preserve"><code class="language-php line-numbers">$config[OmsConstants::ACTIVE_PROCESSES] = [
	'BraintreePayPal01',
	'BraintreeCreditCard01',
];


$config[OmsConstants::PROCESS_LOCATION] = [
	OmsConfig::DEFAULT_PROCESS_LOCATION,
	APPLICATION_VENDOR_DIR . '/spryker-eco/braintree/config/Zed/Oms',
];


$config[SalesConstants::PAYMENT_METHOD_STATEMACHINE_MAPPING] = [
	\SprykerEco\Shared\Braintree\BraintreeConfig::PAYMENT_METHOD_CREDIT_CARD =&gt; 'BraintreeCreditCard01',
	\SprykerEco\Shared\Braintree\BraintreeConfig::PAYMENT_METHOD_PAY_PAL =&gt; 'BraintreePayPal01',
];</code></pre>
        <p>Default implementation for commands and options should be added to <var>Pyz/Zed/Oms/OmsDependencyProvider.php</var>.</p>
        <ol>
            <li>Commands:</li><pre xml:space="preserve"><code class="language-php line-numbers">$container-&gt;extend(OmsDependencyProvider::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection) {
	$commandCollection
		-&gt;add(new AuthorizePlugin(), 'Braintree/Authorize')
		-&gt;add(new RevertPlugin(), 'Braintree/Revert')
		-&gt;add(new CapturePlugin(), 'Braintree/Capture')
		-&gt;add(new RefundPlugin(), 'Braintree/Refund');

	return $commandCollection;
});</code></pre>
            <li>Conditions:</li><pre xml:space="preserve"><code class="language-php line-numbers">$container-&gt;extend(OmsDependencyProvider::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) {
	$conditionCollection
		-&gt;add(new IsAuthorizationApprovedPlugin(), 'Braintree/IsAuthorizationApproved')
		-&gt;add(new IsReversalApprovedPlugin(), 'Braintree/IsReversalApproved')
		-&gt;add(new IsCaptureApprovedPlugin(), 'Braintree/IsCaptureApproved')
		-&gt;add(new IsRefundApprovedPlugin(), 'Braintree/IsRefundApproved');

	return $conditionCollection;
});</code></pre>
            <li>
                <p>All commands and conditions are located in <var>SprykerEco\Zed\Braintree\Communication\Plugin\Oms\</var> namespace.</p>
            </li>
        </ol>
        <h2>Payment Configuration</h2>
        <p>Default implementation for checkout payment plugins should be added to <var>Pyz/Zed/Checkout/CheckoutDependencyProvider.php</var></p><pre xml:space="preserve"><code class="language-php line-numbers">protected function getCheckoutPreConditions(Container $container)
{
	return [
		...
		new BraintreePreCheckPlugin(),
	];
}

protected function getCheckoutOrderSavers(Container $container)
{
	$plugins = [
		...
		new BraintreeSaveOrderPlugin(),
	];

	return $plugins;
}

protected function getCheckoutPostHooks(Container $container)
{
	return [
		...
		new BraintreePostSavePlugin(),
	];
}</code></pre>
        <p>All payment plugins are located in the <var>SprykerEco\Zed\Braintree\Communication\Plugin\Checkout\</var> namespace.</p>
        <h2>Frontend Integration</h2>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>src/Pyz/Yves/CheckoutPage/Theme/default/views/payment/payment.twig</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-php line-numbers">{% extends template('page-layout-checkout', 'CheckoutPage') %}
 
{% define data = {
	backUrl: _view.previousStepUrl,
	forms: {
		payment: _view.paymentForm
	},
 
	title: 'checkout.step.payment.title' | trans
} %}
 
{% block content %}
	{% embed molecule('form') with {
		class: 'box',
		data: {
			form: data.forms.payment,
			options: {
				attr: {
					id: 'payment-form'
				}
			},
			submit: {
				enable: true,
				text: 'checkout.step.summary' | trans
			},
			cancel: {
				enable: true,
				url: data.backUrl,
				text: 'general.back.button' | trans
			}
		}
	} only %}
		{% block fieldset %}
			{% for name, choices in data.form.paymentSelection.vars.choices %}
				&lt;h5&gt;{{ ('checkout.payment.provider.' ~ name) | trans }}&lt;/h5&gt;
 
				&lt;ul class="list spacing-y"&gt;
					{% for key, choice in choices %}
						&lt;li class="list__item spacing-y clear"&gt;
							{% embed molecule('form') with {
								data: {
									form: data.form[data.form.paymentSelection[key].vars.value],
									enableStart: false,
									enableEnd: false,
									layout: {
										'card_expires_month': 'col col--sm-4',
										'card_expires_year': 'col col--sm-8'
									}
								},
								embed: {
									toggler: data.form.paymentSelection[key]
								}
							} only %}
								{% block fieldset %}
									{% set templateName = data.form.vars.template_path | replace('/', '-') %}
									{% set viewName = data.form.vars.template_path | split('/') %}
 
									{{ form_row(embed.toggler, {
										required: false,
										component: molecule('toggler-radio'),
										attributes: {
											'target-selector': '.js-payment-method-' ~ templateName,
											'class-to-toggle': 'is-hidden'
										}
									}) }}
 
									&lt;div class="col col--sm-12 is-hidden js-payment-method-{{ templateName }}"&gt;
										&lt;div class="col col--sm-12 col--md-6"&gt;
											{% if 'Braintree' in data.form.vars.template_path %}
												{% include view(viewName[1], viewName[0]) with {
													form: data.form.parent
												} only %}
											{% else %}
												{{parent()}}
											{% endif %}
										&lt;/div&gt;
									&lt;/div&gt;
								{% endblock %}
							{% endembed %}
						&lt;/li&gt;
					{% endfor %}
				&lt;/ul&gt;
			{% endfor %}
		{% endblock %}
	{% endembed %}
{% endblock %}</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
    </body>
</html>