<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="" MadCap:conditions="Spryker.DemoShop,Spryker.B2C">
    <head>
    </head>
    <body>
        <h1>Amazon Pay - State Machine <img src="../../../Resources/Images/shoptype/B2C_Shop.png" /> <img src="../../../Resources/Images/shoptype/Demoshop.png" /></h1>
        <p>The state machine is different for synchronous and asynchronous flow. Although from status "capture completed" it is the same and in the state machine, it's presented as a sub-process.</p>
        <p>The state machine for the synchronous flow:</p>
        <p>
            <img src="../../../Resources/Images/AmazonPay/sync.png" title="Click Me" alt="Synchronous Flow" class="Thumbnail" />
        </p>
        <p>The state machine for the asynchronous flow:</p>
        <p>
            <img src="../../../Resources/Images/AmazonPay/async.png" title="Click Me" alt="Asynchronous Flow" class="Thumbnail" />
        </p>
        <h2><a name="OMS"></a>OMS Commands</h2>
        <p>Here is a list of commands and conditions to support processing of OMS:</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Click here for example of injection</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre><code class="language-php line-numbers">&lt;script&gt;
            /**
            * @param \Spryker\Zed\Kernel\Container $container
            *
            * @return void
            */
            protected function injectAmazonPayCommands(Container $container)
            {
                $container-&gt;extend(
                    OmsDependencyProvider::COMMAND_PLUGINS,
                    function (CommandCollectionInterface $commandCollection) {
                        $commandCollection
                            -&gt;add(new CancelOrderCommandPlugin(), 'AmazonPay/CancelOrder')
                            -&gt;add(new CloseOrderCommandPlugin(), 'AmazonPay/CloseOrder')
                            -&gt;add(new RefundOrderCommandPlugin(), 'AmazonPay/RefundOrder')
                            -&gt;add(new ReauthorizeExpiredOrderCommandPlugin(), 'AmazonPay/ReauthorizeExpiredOrder')
                            -&gt;add(new CaptureCommandPlugin(), 'AmazonPay/Capture')
                            -&gt;add(new UpdateSuspendedOrderCommandPlugin(), 'AmazonPay/UpdateSuspendedOrder')
                            -&gt;add(new UpdateAuthorizationStatusCommandPlugin(), 'AmazonPay/UpdateAuthorizationStatus')
                            -&gt;add(new UpdateCaptureStatusCommandPlugin(), 'AmazonPay/UpdateCaptureStatus')
                            -&gt;add(new UpdateRefundStatusCommandPlugin(), 'AmazonPay/UpdateRefundStatus');

                        return $commandCollection;
                    }
                );
            }

            /**
            * @param \Spryker\Zed\Kernel\Container $container
            *
            * @return void
            */
            protected function injectAmazonPayConditions(Container $container)
            {
                $container-&gt;extend(OmsDependencyProvider::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection) {
                $conditionCollection
                    -&gt;add(new IsClosedConditionPlugin(), 'AmazonPay/IsClosed')
                    -&gt;add(new IsCloseAllowedConditionPlugin(), 'AmazonPay/IsCloseAllowed')

                    -&gt;add(new IsCancelledConditionPlugin(), 'AmazonPay/IsCancelled')
                    -&gt;add(new IsCancelNotAllowedConditionPlugin(), 'AmazonPay/IsCancelNotAllowed')
                    -&gt;add(new IsCancelledOrderConditionPlugin(), 'AmazonPay/IsOrderCancelled')

                    -&gt;add(new IsOpenConditionPlugin(), 'AmazonPay/IsAuthOpen')
                    -&gt;add(new IsDeclinedConditionPlugin(), 'AmazonPay/IsAuthDeclined')
                    -&gt;add(new IsPendingConditionPlugin(), 'AmazonPay/IsAuthPending')
                    -&gt;add(new IsSuspendedConditionPlugin(), 'AmazonPay/IsAuthSuspended')
                    -&gt;add(new IsAuthExpiredConditionPlugin(), 'AmazonPay/IsAuthExpired')
                    -&gt;add(new IsClosedConditionPlugin(), 'AmazonPay/IsAuthClosed')
                    -&gt;add(new IsAuthTransactionTimedOutConditionPlugin(), 'AmazonPay/IsAuthTransactionTimedOut')
                    -&gt;add(new IsSuspendedConditionPlugin(), 'AmazonPay/IsPaymentMethodChanged')

                    -&gt;add(new IsCompletedConditionPlugin(), 'AmazonPay/IsCaptureCompleted')
                    -&gt;add(new IsDeclinedConditionPlugin(), 'AmazonPay/IsCaptureDeclined')
                    -&gt;add(new IsPendingConditionPlugin(), 'AmazonPay/IsCapturePending')

                    -&gt;add(new IsCompletedConditionPlugin(), 'AmazonPay/IsRefundCompleted')
                    -&gt;add(new IsDeclinedConditionPlugin(), 'AmazonPay/IsRefundDeclined')
                    -&gt;add(new IsPendingConditionPlugin(), 'AmazonPay/IsRefundPending');

                    return $conditionCollection;
                });
            }
        &lt;/script&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
        <p><b>See also:</b>
        </p>
        <ul>
            <li><a href="amazon-pay.htm">Get a general idea about Amazon Pay</a><![CDATA[
            ]]></li>
            <li><a href="amazon-pay-api.htm">Configure Amazon Pay API</a><![CDATA[
            ]]></li>
            <li><a href="amazon-pay-configuration-demoshop.htm">Configure Amazon Pay
            
</a>
            </li>
            <li><a href="amazon-pay-configuration-demoshop.htm">Obtaining Amazon Order Reference and Shipping Addresses details
            
</a>
            </li>
            <li><a href="amazon-pay-refund.htm">Learn how Amazon Pay Refund works</a><![CDATA[
            ]]></li>
            <li><a href="amazon-pay-rendering-pay.htm">Rendering the "Pay with Amazon" button on the Cart page
            
</a>
            </li>
            <li><a href="amazon-pay-simulations.htm">Learn how Amazon Pay Sandbox Simulations work
            
</a>
            </li>
            <li><a href="amazon-pay-email-notification.htm">Check out Amazon Pay example email notifications
            
</a>
            </li>
            <li><a href="amazon-pay-support-bundled-products.htm">Check support of bundled products with Amazon</a>
            </li>
        </ul>
        <p>&#160;</p>
        <p><i>Last review date: Nov 26h, 2018 </i>
            <MadCap:conditionalText MadCap:conditions="General.Hidden Comment">by Andrey Tkachenko, Oksana Karasyova</MadCap:conditionalText>
        </p>
    </body>
</html>