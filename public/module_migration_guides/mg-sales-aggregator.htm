<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-conditions="General.Demoshop,Spryker.ShopSuite,Spryker.DemoShop,Spryker.B2C,Spryker.B2B" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Migration and Integration|Module Migration Guides">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Migration Guide - SalesAggregator    </title>
        <!-- Google Tag Manager -->
        <script>/* <![CDATA[ */(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','GTM-NP24S2');/* ]]> */</script>
        <!-- End Google Tag Manager -->
        <script>/* <![CDATA[ */
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.src = "https://www.googletagmanager.com/gtag/js?id==UA-56589105-4";
			document.getElementsByTagName('head').item(0).appendChild(s);
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', 'UA-56589105-4');
		/* ]]> */</script>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../resources/stylesheets/perfect-scrollbar.css" rel="stylesheet" />
        <link href="../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/scripts/PIE-no-motw.htc');
}

</style>
        <link href="../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../resources/scripts/custom.modernizr.js">
        </script>
        <script src="../resources/scripts/jquery.min.js">
        </script>
        <script src="../resources/scripts/require.min.js">
        </script>
        <script src="../resources/scripts/require.config.js">
        </script>
        <script src="../resources/scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../resources/scripts/plugins.min.js">
        </script>
        <script src="../resources/scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search the Academy" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <!-- Google Tag Manager (noscript) -->
                                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NP24S2" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                </noscript>
                                <!-- End Google Tag Manager (noscript) -->
                                <div class="search-container">
                                    <form class="search" action="#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="breadcrumbs-block">
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                        </div>
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchHome mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="hVdtWjEmSEaoqGnoqrzzaw">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="hVdtWjEmSEaoqGnoqrzzaw:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="toolbar-wrapper">
                                                    <div class="widget-github js-widget-github"><a class="widget-github-link js-widget-github-link" href="https://github.com/spryker/spryker-documentation" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M13.5 0C6.057 0 0 6.057 0 13.5c0 5.888 3.791 10.905 9.058 12.745a.463.463 0 0 0 .258.088c1.316.43 2.724.667 4.184.667C20.943 27 27 20.943 27 13.5S20.943 0 13.5 0zm0 .931c6.93 0 12.569 5.639 12.569 12.569 0 5.428-3.459 10.061-8.287 11.818a1.903 1.903 0 0 1-.092-.527v-2.446c0-.975-.477-2.037-.946-2.75 2.584-.436 5.537-1.776 5.537-6.779 0-1.37-.429-2.58-1.275-3.598.186-.611.415-1.9-.225-3.52a.47.47 0 0 0-.291-.272c-.13-.04-1.326-.35-3.806 1.277a12.921 12.921 0 0 0-6.36 0c-2.481-1.63-3.68-1.319-3.809-1.277a.47.47 0 0 0-.29.273C5.582 7.319 5.811 8.607 6 9.218c-.85 1.018-1.279 2.227-1.279 3.598 0 4.957 2.9 6.323 5.463 6.778-.322.407-.66.934-.81 1.47-.661.184-2.018.19-2.929-1.37-.032-.06-.829-1.475-2.4-1.584-.25.002-.882.042-1.035.525-.169.537.424.944.679 1.117l.058.034c.029.015.707.371 1.213 1.644.105.333 1.03 2.84 4.353 2.399.002.367 0 .552-.004.7v.26c0 .15-.045.378-.096.525C4.386 23.558.931 18.924.931 13.5.931 6.57 6.57.931 13.5.931zm6.51 5.375c.5 1.471.158 2.537.035 2.839a.468.468 0 0 0 .089.49c.805.883 1.214 1.952 1.214 3.181 0 4.72-2.796 5.666-5.535 5.97a.464.464 0 0 0-.253.815c.368.314 1.199 1.68 1.199 2.744v2.446c0 .009.001.414.134.809a12.513 12.513 0 0 1-6.792-.002c.135-.396.139-.802.139-.81l.001-.248c.002-.211.006-.497 0-1.266a.473.473 0 0 0-.174-.362.47.47 0 0 0-.391-.09c-3.126.681-3.802-1.576-3.828-1.67l-.016-.047c-.448-1.135-1.037-1.713-1.388-1.975.759.267 1.182 1.007 1.193 1.024 1.231 2.107 3.264 2.162 4.328 1.685a.463.463 0 0 0 .27-.36c.095-.665.826-1.545 1.196-1.87a.464.464 0 0 0 .136-.488.461.461 0 0 0-.39-.324c-2.73-.31-5.524-1.266-5.524-5.98 0-1.228.41-2.3 1.219-3.181a.464.464 0 0 0 .087-.491c-.124-.302-.467-1.364.031-2.837.396.013 1.362.182 2.988 1.286.112.076.256.1.387.063.973-.27 2.058-.416 3.135-.421 1.08.005 2.166.15 3.14.421.131.037.273.013.386-.063 1.635-1.11 2.6-1.275 2.984-1.288z" /></svg></a>
                                                    </div>
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic NextTopic Print ExpandAll CollapseAll;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="js-anchorer main-content">
                                                    <h1>Migration Guide - SalesAggregator <img src="../resources/images/shoptype/b2b_shop.png" /> <img src="../resources/images/shoptype/b2c_shop.png" /> <img src="../resources/images/shoptype/mastersuite.png" /> <img src="../resources/images/shoptype/demoshop.png" /></h1>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><div class="drop-anchor">Upgrading from Version 4.* to Version 5.*</div></a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p><var>SalesAggregator</var> version 4 is last version to be released for this module. Apart from future bug fixes, it will no longer be developed and Core will no longer use it to get order totals anymore.</p>
                                                            <p>There are two steps to the two migration process. The first is to migrate all your orders to the new structure and drop use of <var>SalesAggregator</var>. The second is to migrate your code to support the old Aggregators.</p>
                                                            <p>To learn how to migrate to the new structure see, <a href="mg-calculation.htm#Upgradin" class="MCXref xref">Migration Guide - Calculation    </a></p>
                                                            <h3>Enable the SalesAggregator in Your Project</h3>
                                                            <p>The SalesAggregator module has been deprecated but all calculators are still provided. If you want to keep them you can do so with a few changes to the code.</p>
                                                            <p>All SalesAggregatorr plugins were moved to the SalesAggregator module's, final core plugins list.</p><pre><code class="language-PHP line-numbers">&lt;?php
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ProductBundlePriceAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\DiscountTotalAmountAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\DiscountTotalAmountWithProductOptionsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ExpenseTotalAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\GrandTotalAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ItemDiscountsOrderAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ItemGrossPriceAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ItemsWithProductOptionsAndDiscountsTaxAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ItemTaxAmountAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderDiscountsWithProductOptionsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderExpensesWithDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderExpenseTaxAmountAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderExpenseTaxWithDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderGrandTotalWithDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\OrderTaxAmountWithProductOptionsAndDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ProductOptionDiscountsAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\ProductOptionsGrossPriceAggregatorPlugin;
    use Spryker\Zed\SalesAggregator\Communication\Plugin\OrderAmountAggregator\SubtotalOrderAggregatorPlugin;
?&gt;
</code></pre>
                                                            <p>If you extended any of the above, update your <var>namespace </var>accordingly.</p>
                                                            <p>To receive future patches for related plugins, update all your use statements to point to the salesAggregator modules.</p>
                                                            <p>The modules are: <var>ProductOption</var>, <var>DiscountSalesAggregatorConnector</var>, <var>DiscountSalesAggregatorConnector</var> - they will no longer store any Aggregator plugins.</p>
                                                            <h3>Migrate Your Code to Support the Old Aggregators Sales module</h3>
                                                            <p>Inject the salesAggregator Facade into your <var>\Pyz\Zed\Sales\SalesDependencyProvider::provideBusinessLayerDependencies</var> as follows:</p><pre><code class="language-PHP line-numbers">&lt;?php

 /**
   * @param \Spryker\Zed\Kernel\Container $container
   *
   * @return \Spryker\Zed\Kernel\Container
   */
  public function provideBusinessLayerDependencies(Container $container)
  {
      $container[static::FACADE_SALES_AGGREGATOR] = function (Container $container) {
          return $container-&gt;getLocator()-&gt;SalesAggregator()-&gt;facade();
      };
  }

  /**
    * @param \Spryker\Zed\Kernel\Container $container
    *
    * @return \Spryker\Zed\Kernel\Container
    */
   public function provideCommunicationLayerDependencies(Container $container)
   {
       $container[static::FACADE_SALES_AGGREGATOR] = function (Container $container) {
           return $container-&gt;getLocator()-&gt;SalesAggregator()-&gt;facade();
       };
   }
?&gt;
</code></pre>
                                                            <p><strong>Injecting the Aggregator facade</strong>:</p>
                                                            <p>A similar approach to injecting the Aggregator facade can be used in other modules where replacement is necessary.</p>
                                                            <p>The sales hydrator <var>\Spryker\Zed\Sales\Business\Model\Order\OrderHydrator</var> no longer uses the Aggregator facade.</p>
                                                            <ul>
                                                                <li value="1">To use it, provide <var>salesAggregatorFacade</var> to this class and add a method call in <var>createOrderTransfer</var> to <var>$this-&gt;salesAggregatorFacade-&gt;getOrderTotalByOrderTransfer($orderTransfer);</var></li>
                                                                <li value="2">To get old calculated objects, the Order table list also was using the SalesAggregator and therefore you need to include it in the OrdersTable by adding it as follows:             </li>
                                                            </ul><pre><code class="language-PHP line-numbers">&lt;?php

  /**
    * @param array $item
    *
    * @return int
    */
   protected function getGrandTotal(array $item)
   {
       $orderTransfer = $this-&gt;salesAggregatorFacade-&gt;getOrderTotalsByIdSalesOrder($item[OrdersTableQueryBuilder::COL_ID_SALES_ORDER]);
       return $orderTransfer-&gt;getTotals()-&gt;getGrandTotal();

       //return $this-&gt;formatPrice($item[OrdersTableQueryBuilder::FIELD_ORDER_GRAND_TOTAL]);
   }</code></pre>
                                                            <h4>OMS Module</h4>
                                                            <p><var>Spryker\Zed\Oms\Business\Mail\MailHandler</var> also used SalesAggregator. </p>
                                                            <p>To add it to <var>getOrderTransfer</var> ad the following to the method's top object:</p><pre><code class="language-PHP line-numbers">&lt;?php
  $orderTransfer = $this-&gt;salesAggregatorFacade-&gt;getOrderTotalsByIdSalesOrder($salesOrderEntity-&gt;getIdSalesOrder());
?&gt;</code></pre>
                                                            <h4>Refund Module</h4>
                                                            <p><var>Spryker\Zed\Refund\Business\Model\RefundCalculator</var> used the Aggregator to calculate refundable amount. </p>
                                                            <p>To keep injecting the SalesAggregatorFacade to class and include the Aggregator:</p><pre><code class="language-PHP line-numbers">&lt;?php
/**
    * @param \Orm\Zed\Sales\Persistence\SpySalesOrder $salesOrderEntity
    *
    * @return \Generated\Shared\Transfer\OrderTransfer
*/
protected function getOrderTransfer(SpySalesOrder $salesOrderEntity)
{
   $orderTransfer = $this-&gt;salesAggregatorFacade
       -&gt;getOrderTotalsByIdSalesOrder($salesOrderEntity-&gt;getIdSalesOrder());

   return $orderTransfer;
}</code></pre>
                                                            <h4>Payment methods</h4>
                                                            <p>The payment methods have changed accordingly to use <var>SalesFacade</var> instead of <var>SalesAggregatorFacade</var>.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><div class="drop-anchor">Upgrading from Version 2.* to Version 3.*
</div></a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>The tax plugins are using the version 3.* of the Tax module. You need to upgrade the <a href="mg-tax.htm" class="MCXref xref">Migration Guide - Tax  </a> module</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><div class="drop-anchor">SalesAggregator Migration Console Command</div></a></span>
                                                        <div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * Copyright © 2017-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */

namespace Pyz\Zed\SalesAggregator\Communication\Console;

use Exception;
use Generated\Shared\Transfer\ExpenseTransfer;
use Generated\Shared\Transfer\ItemTransfer;
use Generated\Shared\Transfer\OrderTransfer;
use Generated\Shared\Transfer\ProductOptionTransfer;
use Generated\Shared\Transfer\TaxTotalTransfer;
use Generated\Shared\Transfer\TotalsTransfer;
use Generated\Zed\Ide\Price;
use Orm\Zed\Sales\Persistence\Map\SpySalesOrderTableMap;
use Orm\Zed\Sales\Persistence\SpySalesExpense;
use Orm\Zed\Sales\Persistence\SpySalesOrder;
use Orm\Zed\Sales\Persistence\SpySalesOrderItem;
use Orm\Zed\Sales\Persistence\SpySalesOrderItemOption;
use Orm\Zed\Sales\Persistence\SpySalesOrderQuery;
use Orm\Zed\Sales\Persistence\SpySalesOrderTotals;
use Propel\Runtime\Propel;
use Pyz\Zed\Calculation\CalculationDependencyProvider;
use Spryker\Shared\Price\PriceMode;
use Spryker\Zed\Calculation\Business\CalculationFacade;
use Spryker\Zed\Calculation\Business\Model\Executor\OrderCalculatorExecutor;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\CanceledTotalCalculationPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\DiscountAmountAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\DiscountTotalCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\ExpenseTotalCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\GrandTotalCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\ItemDiscountAmountFullAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\ItemProductOptionPriceAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\ItemSubtotalAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\ItemTaxAmountFullAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\OrderTaxTotalCalculationPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\PriceCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\PriceToPayAggregatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\RefundableAmountCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\RefundTotalCalculatorPlugin;
use Spryker\Zed\Calculation\Communication\Plugin\Calculator\SubtotalCalculatorPlugin;
use Spryker\Zed\Kernel\Communication\Console\Console;
use Spryker\Zed\Tax\Communication\Plugin\Calculator\TaxAmountAfterCancellationCalculatorPlugin;
use Spryker\Zed\Tax\Communication\Plugin\Calculator\TaxAmountCalculatorPlugin;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Propel\Runtime\ActiveQuery\Criteria;
use Symfony\Component\Console\Question\ConfirmationQuestion;

/**
 * @method \Spryker\Zed\SalesAggregator\Communication\SalesAggregatorCommunicationFactory getFactory()
 * @method \Spryker\Zed\SalesAggregator\Business\SalesAggregatorFacade getFacade()
 */
class SalesAggregatorMigrationConsole extends Console
{

    const COMMAND_NAME = 'sales-aggregator:migrate';
    const COMMAND_DESCRIPTION = 'Migrate sales old sales order which used sales aggregator';
    const CONSOLE_ARGUMENT_DRY_RUN = 'dry-run';


    /**
     * @return void
     */
    protected function configure()
    {
        $this-&gt;setName(static::COMMAND_NAME);
        $this-&gt;setDescription(static::COMMAND_DESCRIPTION);

        $this-&gt;addOption(
            static::CONSOLE_ARGUMENT_DRY_RUN,
            null,
            InputOption::VALUE_REQUIRED,
            'Run verification checks, do not store changes to database.',
            false
        );

        parent::configure();
    }

    /**
     * @param \Symfony\Component\Console\Input\InputInterface $input
     * @param \Symfony\Component\Console\Output\OutputInterface $output
     *
     * @return int|null|void
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $salesAggregatorFacade = $this-&gt;getFacade();
        $calculationExecutor = $this-&gt;createCalculationFacade();

        $exportOrdersTillGivenDate = new \DateTime();

        $ordersForUpdate = SpySalesOrderQuery::create()
            -&gt;filterByCreatedAt(
                $exportOrdersTillGivenDate,
                Criteria::LESS_EQUAL
            )
            -&gt;find();

        $totalNumberOfOrdersForUpdate = count($ordersForUpdate);

        if ($totalNumberOfOrdersForUpdate === 0) {
            $output-&gt;writeln(
                sprintf(
                    'No orders found for given date range &lt;= %s ',
                    $exportOrdersTillGivenDate-&gt;format('Y-m-d')
                )
            );
            return;
        }

        $helper = $this-&gt;getQuestionHelper();
        $question = new ConfirmationQuestion(
            sprintf('Migrate %s orders? (y|n)', $totalNumberOfOrdersForUpdate),
            false
        );

        if (!$helper-&gt;ask($input, $output, $question)) {
            $output-&gt;writeln('Aborted.');
            return;
        }

        $output-&gt;writeln(sprintf('Processing %s orders...', $totalNumberOfOrdersForUpdate));

        $dryRun = $input-&gt;getOption(static::CONSOLE_ARGUMENT_DRY_RUN);
        $connection = Propel::getConnection();
        $numberOfProblems = 0;
        $numberMigrated = 0;
        foreach ($ordersForUpdate as $salesOrderEntity) {

            $orderTransfer = $salesAggregatorFacade-&gt;getOrderTotalsByIdSalesOrder($salesOrderEntity-&gt;getIdSalesOrder());

            $salesAggregatorOrderTransfer = new OrderTransfer();
            $salesAggregatorOrderTransfer-&gt;fromArray($orderTransfer-&gt;toArray());


            $orderTransfer = $this-&gt;resetRefundableAmount($orderTransfer);
            $orderTransfer-&gt;setPriceMode(PriceMode::PRICE_MODE_GROSS);
            $newCalculatedOrderTransfer = $calculationExecutor-&gt;recalculate($orderTransfer);

            $errors = $this-&gt;verifyCalculatedValues($salesAggregatorOrderTransfer, $newCalculatedOrderTransfer);

            if (count($errors) &gt; 0) {

                $output-&gt;writeln(sprintf('Verification failed for order with id %d.', $salesOrderEntity-&gt;getIdSalesOrder()));
                $output-&gt;writeln('Found problems in:');

                foreach ($errors as $field =&gt; $values) {
                    list($aggregatorValue, $newCalculatedValue) = $values;
                    $output-&gt;writeln(
                        ' * Field: '. $field . ', Old aggregated value: ' . $aggregatorValue . ', New calculated Value: ' . $newCalculatedValue
                    );
                }
                $numberOfProblems++;
                $output-&gt;writeln('Skipping...');
                continue;
            }


            if ($dryRun) {
                continue;
            }

            try {

                $connection-&gt;beginTransaction();

                $this-&gt;updateOrderItems($salesOrderEntity, $newCalculatedOrderTransfer);
                $this-&gt;saveOrderTotals($newCalculatedOrderTransfer, $salesOrderEntity-&gt;getIdSalesOrder());
                $this-&gt;saveOrderExpenses($salesOrderEntity, $newCalculatedOrderTransfer);

                $salesOrderEntity-&gt;setPriceMode(PriceMode::TAX_MODE_GROSS);
                $salesOrderEntity-&gt;save();

                $connection-&gt;commit();

                $numberMigrated++;

            } catch (Exception $exception) {
                $numberOfProblems++;
                $output-&gt;writeln($exception-&gt;getMessage());
                $connection-&gt;rollBack();
            }
        }


        if ($dryRun) {
            if ($numberOfProblems &gt; 0) {
                $output-&gt;writeln(sprintf('Dry run failed, %d problems found', $numberOfProblems));
            } else {
                $output-&gt;writeln('Dry run successful no problems were found.');
            }
        }

        $output-&gt;writeln(sprintf('Migration complete. %d orders migrated.', $numberMigrated));
    }

    /***
     * @param \Generated\Shared\Transfer\OrderTransfer $salesAggregatorOrderTransfer
     * @param \Generated\Shared\Transfer\OrderTransfer $newCalculatedOrderTransfer
     *
     * @return array
     */
    protected function verifyCalculatedValues(
        OrderTransfer $salesAggregatorOrderTransfer,
        OrderTransfer $newCalculatedOrderTransfer
    ) {

        $errors = [];

        $aggregatorTotals = $salesAggregatorOrderTransfer-&gt;getTotals();
        $newCalculatedTotals = $newCalculatedOrderTransfer-&gt;getTotals();

        $this-&gt;validateProperty($aggregatorTotals-&gt;getDiscountTotal(), $newCalculatedTotals-&gt;getDiscountTotal(), 'TotalsTransfer::' .TotalsTransfer::DISCOUNT_TOTAL, $errors);
        $this-&gt;validateProperty($aggregatorTotals-&gt;getExpenseTotal(), $newCalculatedTotals-&gt;getExpenseTotal(), 'TotalsTransfer::' .TotalsTransfer::EXPENSE_TOTAL, $errors);
        $this-&gt;validateProperty($aggregatorTotals-&gt;getSubtotal(), $newCalculatedTotals-&gt;getSubtotal(), 'TotalsTransfer::' .TotalsTransfer::SUBTOTAL, $errors);

        $this-&gt;validateProperty($aggregatorTotals-&gt;getTaxTotal()-&gt;getAmount(), $newCalculatedTotals-&gt;getTaxTotal()-&gt;getAmount(), 'TaxTotalTransfer::' . TaxTotalTransfer::AMOUNT, $errors);
        $this-&gt;validateProperty($aggregatorTotals-&gt;getGrandTotal(), $newCalculatedTotals-&gt;getGrandTotal(), 'TotalsTransfer::' .TotalsTransfer::GRAND_TOTAL, $errors);

        foreach ($salesAggregatorOrderTransfer-&gt;getItems() as $aggregatorItemTransfer) {
            foreach ($newCalculatedOrderTransfer-&gt;getItems() as $newItemTransfer) {
                if ($aggregatorItemTransfer-&gt;getIdSalesOrderItem() !== $newItemTransfer-&gt;getIdSalesOrderItem()) {
                    continue;
                }

                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getCanceledAmount(), $newItemTransfer-&gt;getCanceledAmount(), 'ItemTransfer::' . ItemTransfer::CANCELED_AMOUNT, $errors);
                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getRefundableAmount(), $newItemTransfer-&gt;getRefundableAmount(), 'ItemTransfer::' . ItemTransfer::REFUNDABLE_AMOUNT, $errors);
                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getUnitGrossPrice(), $newItemTransfer-&gt;getUnitPrice(), 'ItemTransfer::' . ItemTransfer::UNIT_PRICE, $errors);
                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getUnitGrossPriceWithProductOptions(), $newItemTransfer-&gt;getUnitSubtotalAggregation(), 'ItemTransfer::' . ItemTransfer::UNIT_SUBTOTAL_AGGREGATION, $errors);
                //$this-&gt;validateProperty($aggregatorItemTransfer-&gt;getUnitTaxAmount(), $newItemTransfer-&gt;getUnitTaxAmount(), 'ItemTransfer::' . ItemTransfer::UNIT_TAX_AMOUNT, $errors); //unit tax amount in new version is after discounts!!!
                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getUnitGrossPriceWithProductOptionAndDiscountAmounts(), $newItemTransfer-&gt;getUnitPriceToPayAggregation(), 'ItemTransfer::' . ItemTransfer::UNIT_PRICE_TO_PAY_AGGREGATION, $errors);

                $this-&gt;validateProperty($aggregatorItemTransfer-&gt;getUnitTaxAmountWithProductOptionAndDiscountAmounts(), $newItemTransfer-&gt;getUnitTaxAmountFullAggregation(), 'ItemTransfer::' . ItemTransfer::UNIT_TAX_AMOUNT_FULL_AGGREGATION, $errors);


                foreach ($aggregatorItemTransfer-&gt;getProductOptions() as $aggregatedProductOptionTransfer) {
                    foreach ($newItemTransfer-&gt;getProductOptions() as $newCalculatedOptionTransfer) {
                        if ($aggregatedProductOptionTransfer-&gt;getIdSalesOrderItemOption() !== $newCalculatedOptionTransfer-&gt;getIdSalesOrderItemOption()) {
                            continue;
                        }

                        $this-&gt;validateProperty($aggregatedProductOptionTransfer-&gt;getUnitTaxAmountWithDiscounts(), $newCalculatedOptionTransfer-&gt;getUnitTaxAmount(), 'ProductOptionTransfer::' . ProductOptionTransfer::UNIT_TAX_AMOUNT, $errors);
                        $this-&gt;validateProperty($aggregatedProductOptionTransfer-&gt;getUnitGrossPrice(), $newCalculatedOptionTransfer-&gt;getUnitPrice(), 'ProductOptionTransfer::' . ProductOptionTransfer::UNIT_PRICE, $errors);
                    }
                }

            }
        }

        foreach ($salesAggregatorOrderTransfer-&gt;getExpenses() as $aggregatorExpenseTransfer) {
            foreach ($newCalculatedOrderTransfer-&gt;getExpenses() as $newCalculatedExpenseTransfer) {
                if ($aggregatorExpenseTransfer-&gt;getIdSalesExpense() !== $newCalculatedExpenseTransfer-&gt;getIdSalesExpense()) {
                    continue;
                }

                $this-&gt;validateProperty($aggregatorExpenseTransfer-&gt;getCanceledAmount(), $newCalculatedExpenseTransfer-&gt;getCanceledAmount(), 'ExpenseTransfer::' . ExpenseTransfer::CANCELED_AMOUNT, $errors);
                $this-&gt;validateProperty($aggregatorExpenseTransfer-&gt;getRefundableAmount(), $newCalculatedExpenseTransfer-&gt;getRefundableAmount(), 'ExpenseTransfer::' . ExpenseTransfer::REFUNDABLE_AMOUNT, $errors);
                $this-&gt;validateProperty($aggregatorExpenseTransfer-&gt;getUnitGrossPrice(), $newCalculatedExpenseTransfer-&gt;getUnitPrice(), 'ExpenseTransfer::' . ExpenseTransfer::UNIT_PRICE, $errors);
                $this-&gt;validateProperty($aggregatorExpenseTransfer-&gt;getUnitTaxAmountWithDiscounts(), $newCalculatedExpenseTransfer-&gt;getUnitTaxAmount(), 'ExpenseTransfer::' . ExpenseTransfer::UNIT_TAX_AMOUNT, $errors);
                $this-&gt;validateProperty($aggregatorExpenseTransfer-&gt;getUnitGrossPriceWithDiscounts(), $newCalculatedExpenseTransfer-&gt;getUnitPriceToPayAggregation(), 'ExpenseTransfer::' . ExpenseTransfer::UNIT_PRICE_TO_PAY_AGGREGATION, $errors);

            }
        }

        return $errors;

    }

    /**
     * @param mixed $value1
     * @param mixed $value2
     * @param string $key
     * @param array $error
     *
     * @return void
     */
    public function validateProperty($value1, $value2, $key, array &amp;$error)
    {
        if ($value1 !== $value2) {
            $error[$key] = [
                $value1,
                $value2
            ];
        }
    }


    /**
     * @param \Orm\Zed\Sales\Persistence\SpySalesOrderItem $salesOrderItemEntity
     * @param \Generated\Shared\Transfer\ItemTransfer $itemTransfer
     *
     * @return \Orm\Zed\Sales\Persistence\SpySalesOrderItem
     */
    protected function hydrateSalesOrderItemEntity(
        SpySalesOrderItem $salesOrderItemEntity,
        ItemTransfer $itemTransfer
    ) {

        $salesOrderItemEntity-&gt;setNetPrice($itemTransfer-&gt;getUnitNetPrice());
        $salesOrderItemEntity-&gt;setPrice($itemTransfer-&gt;getUnitPrice());
        $salesOrderItemEntity-&gt;setPriceToPayAggregation($itemTransfer-&gt;getUnitPriceToPayAggregation());
        $salesOrderItemEntity-&gt;setSubtotalAggregation($itemTransfer-&gt;getUnitSubtotalAggregation());
        $salesOrderItemEntity-&gt;setProductOptionPriceAggregation($itemTransfer-&gt;getUnitProductOptionPriceAggregation());
        $salesOrderItemEntity-&gt;setExpensePriceAggregation($itemTransfer-&gt;getUnitExpensePriceAggregation());
        $salesOrderItemEntity-&gt;setTaxAmount($itemTransfer-&gt;getUnitTaxAmount());
        $salesOrderItemEntity-&gt;setTaxAmountFullAggregation($itemTransfer-&gt;getUnitTaxAmountFullAggregation());
        $salesOrderItemEntity-&gt;setDiscountAmountAggregation($itemTransfer-&gt;getUnitDiscountAmountAggregation());
        $salesOrderItemEntity-&gt;setDiscountAmountFullAggregation($itemTransfer-&gt;getUnitDiscountAmountFullAggregation());
        $salesOrderItemEntity-&gt;setRefundableAmount($itemTransfer-&gt;getRefundableAmount());

        return $salesOrderItemEntity;
    }

    /**
     * @param \Orm\Zed\Sales\Persistence\SpySalesOrderItemOption $salesOrderItemOptionEntity
     * @param \Generated\Shared\Transfer\ProductOptionTransfer $productOptionTransfer
     *
     * @return \Orm\Zed\Sales\Persistence\SpySalesOrderItemOption
     */
    protected function hydrateSalesOrderItemOptionEntity(
        SpySalesOrderItemOption $salesOrderItemOptionEntity,
        ProductOptionTransfer $productOptionTransfer
    ) {
        $salesOrderItemOptionEntity-&gt;setGrossPrice($productOptionTransfer-&gt;getUnitGrossPrice());
        $salesOrderItemOptionEntity-&gt;setNetPrice($productOptionTransfer-&gt;getUnitNetPrice());
        $salesOrderItemOptionEntity-&gt;setTaxAmount($productOptionTransfer-&gt;getUnitTaxAmount());
        $salesOrderItemOptionEntity-&gt;setDiscountAmountAggregation($productOptionTransfer-&gt;getUnitDiscountAmountAggregation());
        $salesOrderItemOptionEntity-&gt;setPrice($productOptionTransfer-&gt;getUnitPrice());


        return $salesOrderItemOptionEntity;

    }

    /**
     * @param \Orm\Zed\Sales\Persistence\SpySalesExpense $salesOrderExpenseEntity
     * @param \Generated\Shared\Transfer\ExpenseTransfer $expenseTransfer
     *
     * @return \Orm\Zed\Sales\Persistence\SpySalesExpense
     */
    protected function hydrateOrderExpenseEntity(
        SpySalesExpense $salesOrderExpenseEntity,
        ExpenseTransfer $expenseTransfer
    ) {
        $salesOrderExpenseEntity-&gt;setGrossPrice($expenseTransfer-&gt;getUnitGrossPrice());
        $salesOrderExpenseEntity-&gt;setNetPrice($expenseTransfer-&gt;getUnitNetPrice());
        $salesOrderExpenseEntity-&gt;setPrice($expenseTransfer-&gt;getUnitPrice());
        $salesOrderExpenseEntity-&gt;setTaxAmount($expenseTransfer-&gt;getUnitTaxAmount());
        $salesOrderExpenseEntity-&gt;setDiscountAmountAggregation($expenseTransfer-&gt;getUnitDiscountAmountAggregation());
        $salesOrderExpenseEntity-&gt;setPriceToPayAggregation($expenseTransfer-&gt;getUnitPriceToPayAggregation());

        return $salesOrderExpenseEntity;
    }

    /**
     * @param \Generated\Shared\Transfer\OrderTransfer $orderTransfer
     * @param int $idSalesOrder
     *
     * @return void
     */
    protected function saveOrderTotals(OrderTransfer $orderTransfer, $idSalesOrder)
    {
        $taxTotal = 0;
        if ($orderTransfer-&gt;getTotals()-&gt;getTaxTotal()) {
            $taxTotal = $orderTransfer-&gt;getTotals()-&gt;getTaxTotal()-&gt;getAmount();
        }

        $salesOrderTotalsEntity = new SpySalesOrderTotals();
        $salesOrderTotalsEntity-&gt;setFkSalesOrder($idSalesOrder);
        $salesOrderTotalsEntity-&gt;fromArray($orderTransfer-&gt;getTotals()-&gt;toArray());
        $salesOrderTotalsEntity-&gt;setTaxTotal($taxTotal);
        $salesOrderTotalsEntity-&gt;setOrderExpenseTotal($orderTransfer-&gt;getTotals()-&gt;getExpenseTotal());
        $salesOrderTotalsEntity-&gt;save();
    }

    /**
     * @return \Spryker\Zed\Calculation\Business\Model\Executor\OrderCalculatorExecutor
     */
    protected function createCalculationFacade()
    {
        return new OrderCalculatorExecutor($this-&gt;getCalculatorPlugins());

    }

    /**
     * @return array
     */
    protected function getCalculatorPlugins()
    {
        return [
            new PriceCalculatorPlugin(),
            new ItemProductOptionPriceAggregatorPlugin(),
            new ItemSubtotalAggregatorPlugin(),

            new SubtotalCalculatorPlugin(),

            new DiscountAmountAggregatorPlugin(),
            new ItemDiscountAmountFullAggregatorPlugin(),

            new PriceToPayAggregatorPlugin(),

            new TaxAmountCalculatorPlugin(),
            new ItemTaxAmountFullAggregatorPlugin(),
            new TaxAmountAfterCancellationCalculatorPlugin(),

            new RefundableAmountCalculatorPlugin(),

            new ExpenseTotalCalculatorPlugin(),
            new DiscountTotalCalculatorPlugin(),
            new RefundTotalCalculatorPlugin(),
            new CanceledTotalCalculationPlugin(),
            new GrandTotalCalculatorPlugin(),

            new OrderTaxTotalCalculationPlugin(),
        ];
    }

    /**
     * @param SpySalesOrder $salesOrderEntity
     * @param OrderTransfer $orderTransfer
     *
     * @return void
     */
    protected function updateOrderItems(SpySalesOrder $salesOrderEntity, OrderTransfer $orderTransfer)
    {
        foreach ($salesOrderEntity-&gt;getItems() as $salesOrderItemEntity) {
            foreach ($orderTransfer-&gt;getItems() as $itemTransfer) {
                if ($salesOrderItemEntity-&gt;getIdSalesOrderItem() != $itemTransfer-&gt;getIdSalesOrderItem()) {
                    continue;
                }

                $salesOrderItemEntity = $this-&gt;hydrateSalesOrderItemEntity($salesOrderItemEntity, $itemTransfer);
                $salesOrderItemEntity-&gt;save();

                if (count($itemTransfer-&gt;getProductOptions()) === 0) {
                    continue;
                }

                $this-&gt;updateItemOptions($salesOrderItemEntity, $itemTransfer);

            }
        }
    }

    /**
     * @param $salesOrderItemEntity
     * @param ItemTransfer $itemTransfer
     *
     * @return void
     */
    protected function updateItemOptions(SpySalesOrderItem $salesOrderItemEntity, ItemTransfer $itemTransfer)
    {
        foreach ($salesOrderItemEntity-&gt;getOptions() as $salesOrderItemOptionEntity) {
            foreach ($itemTransfer-&gt;getProductOptions() as $productOptionTransfer) {
                if ($productOptionTransfer-&gt;getIdSalesOrderItemOption() !== $productOptionTransfer-&gt;getIdProductOptionValue()) {
                    continue;
                }

                $salesOrderItemOptionEntity = $this-&gt;hydrateSalesOrderItemOptionEntity($salesOrderItemOptionEntity, $productOptionTransfer);
                $salesOrderItemOptionEntity-&gt;save();
            }
        }
    }

    /**
     * @param SpySalesOrder $salesOrderEntity
     * @param OrderTransfer $orderTransfer
     *
     * @return void
     */
    protected function saveOrderExpenses(SpySalesOrder $salesOrderEntity, OrderTransfer $orderTransfer)
    {
        foreach ($salesOrderEntity-&gt;getExpenses() as $salesOrderExpenseEntity) {
            foreach ($orderTransfer-&gt;getExpenses() as $expenseTransfer) {
                if ($expenseTransfer-&gt;getIdSalesExpense() !== $salesOrderExpenseEntity-&gt;getIdSalesExpense()) {
                    continue;
                }

                $salesOrderExpenseEntity = $this-&gt;hydrateOrderExpenseEntity($salesOrderExpenseEntity, $expenseTransfer);
                $salesOrderExpenseEntity-&gt;save();
            }
        }
    }

    /**
     * @return mixed
     */
    protected function getQuestionHelper()
    {
        return $this-&gt;getHelper('question');
    }

    /**
     * @param OrderTransfer $orderTransfer
     *
     * @return OrderTransfer
     */
    protected function resetRefundableAmount(OrderTransfer $orderTransfer)
    {
        foreach ($orderTransfer-&gt;getItems() as $itemTransfer) {
            $itemTransfer-&gt;setRefundableAmount(0);
            foreach ($itemTransfer-&gt;getProductOptions() as $productOptionTransfer) {
                $productOptionTransfer-&gt;setRefundableAmount(0);
            }
        }

        foreach ($orderTransfer-&gt;getExpenses() as $expenseTransfer) {
            $expenseTransfer-&gt;setRefundableAmount(0);
        }

        return $orderTransfer;
    }

}

?&gt;
</code></pre>
                                                        </div>
                                                    </div>
                                                    <p>&#160;</p>
                                                    <p><b>See also:</b>
                                                    </p>
                                                    <ul>
                                                        <li value="1">Learn more about Sales Module</li>
                                                        <li value="2"><a href="mg-sales.htm">Learn how to migrate Sales</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div><a class="scroll-top js-scroll-top" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill="#FFF" fill-rule="nonzero" d="M11.82 5.22a.54.54 0 0 1 0 .806.636.636 0 0 1-.852 0L6.607 1.937v13.49a.587.587 0 0 1-.602.573c-.336 0-.611-.258-.611-.573V1.937L1.04 6.026a.647.647 0 0 1-.86 0 .54.54 0 0 1 0-.807L5.573.163a.636.636 0 0 1 .852 0L11.82 5.22z" /></svg></a>
                                <script>/* <![CDATA[ */
			function createGithubUrl() {
			var GITHUB_CONTENT_PATH = '/blob/master/public';
			var link = document.querySelector('.js-widget-github-link');
			var href =
			link.getAttribute('href')
			+ GITHUB_CONTENT_PATH
			+ window.location.pathname;
			link.setAttribute('href', href);
			}
			createGithubUrl();
		/* ]]> */</script>
                                <script>/* <![CDATA[ */
			requirejs.config({
				appDir: '',
				paths: {
					'clipboard': ['https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min']
					
				}
			});
			require(['clipboard'], function(Clipboard) {
				console.log(Clipboard);
				window.Clipboard = Clipboard;
			});
		/* ]]> */</script>
                                <script src="../resources/scripts/perfect-scrollbar.js">
                                </script>
                                <script src="../resources/scripts/imagemapster.js">
                                </script>
                                <script src="../resources/scripts/script.js">
                                </script>
                                <script src="../resources/scripts/prism.js">
                                </script>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>
