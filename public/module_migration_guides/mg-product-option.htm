<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-conditions="General.Demoshop" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Migration and Integration|Module Migration Guides">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Migration Guide - Product Option</title>
        <!-- Google Tag Manager -->
        <script>/* <![CDATA[ */(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','GTM-NP24S2');/* ]]> */</script>
        <!-- End Google Tag Manager -->
        <script>/* <![CDATA[ */
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.src = "https://www.googletagmanager.com/gtag/js?id==UA-56589105-4";
			document.getElementsByTagName('head').item(0).appendChild(s);
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', 'UA-56589105-4');
		/* ]]> */</script>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../resources/stylesheets/perfect-scrollbar.css" rel="stylesheet" />
        <link href="../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/scripts/PIE-no-motw.htc');
}

</style>
        <link href="../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../resources/scripts/custom.modernizr.js">
        </script>
        <script src="../resources/scripts/jquery.min.js">
        </script>
        <script src="../resources/scripts/require.min.js">
        </script>
        <script src="../resources/scripts/require.config.js">
        </script>
        <script src="../resources/scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../resources/scripts/plugins.min.js">
        </script>
        <script src="../resources/scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search the Academy" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <!-- Google Tag Manager (noscript) -->
                                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NP24S2" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                </noscript>
                                <!-- End Google Tag Manager (noscript) -->
                                <div class="search-container">
                                    <form class="search" action="#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="breadcrumbs-block">
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                        </div>
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchHome mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="iA713JWb_EekxkbEFkxw8g">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="iA713JWb_EekxkbEFkxw8g:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="toolbar-wrapper">
                                                    <div class="widget-github js-widget-github"><a class="widget-github-link js-widget-github-link" href="https://github.com/spryker/spryker-documentation" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M13.5 0C6.057 0 0 6.057 0 13.5c0 5.888 3.791 10.905 9.058 12.745a.463.463 0 0 0 .258.088c1.316.43 2.724.667 4.184.667C20.943 27 27 20.943 27 13.5S20.943 0 13.5 0zm0 .931c6.93 0 12.569 5.639 12.569 12.569 0 5.428-3.459 10.061-8.287 11.818a1.903 1.903 0 0 1-.092-.527v-2.446c0-.975-.477-2.037-.946-2.75 2.584-.436 5.537-1.776 5.537-6.779 0-1.37-.429-2.58-1.275-3.598.186-.611.415-1.9-.225-3.52a.47.47 0 0 0-.291-.272c-.13-.04-1.326-.35-3.806 1.277a12.921 12.921 0 0 0-6.36 0c-2.481-1.63-3.68-1.319-3.809-1.277a.47.47 0 0 0-.29.273C5.582 7.319 5.811 8.607 6 9.218c-.85 1.018-1.279 2.227-1.279 3.598 0 4.957 2.9 6.323 5.463 6.778-.322.407-.66.934-.81 1.47-.661.184-2.018.19-2.929-1.37-.032-.06-.829-1.475-2.4-1.584-.25.002-.882.042-1.035.525-.169.537.424.944.679 1.117l.058.034c.029.015.707.371 1.213 1.644.105.333 1.03 2.84 4.353 2.399.002.367 0 .552-.004.7v.26c0 .15-.045.378-.096.525C4.386 23.558.931 18.924.931 13.5.931 6.57 6.57.931 13.5.931zm6.51 5.375c.5 1.471.158 2.537.035 2.839a.468.468 0 0 0 .089.49c.805.883 1.214 1.952 1.214 3.181 0 4.72-2.796 5.666-5.535 5.97a.464.464 0 0 0-.253.815c.368.314 1.199 1.68 1.199 2.744v2.446c0 .009.001.414.134.809a12.513 12.513 0 0 1-6.792-.002c.135-.396.139-.802.139-.81l.001-.248c.002-.211.006-.497 0-1.266a.473.473 0 0 0-.174-.362.47.47 0 0 0-.391-.09c-3.126.681-3.802-1.576-3.828-1.67l-.016-.047c-.448-1.135-1.037-1.713-1.388-1.975.759.267 1.182 1.007 1.193 1.024 1.231 2.107 3.264 2.162 4.328 1.685a.463.463 0 0 0 .27-.36c.095-.665.826-1.545 1.196-1.87a.464.464 0 0 0 .136-.488.461.461 0 0 0-.39-.324c-2.73-.31-5.524-1.266-5.524-5.98 0-1.228.41-2.3 1.219-3.181a.464.464 0 0 0 .087-.491c-.124-.302-.467-1.364.031-2.837.396.013 1.362.182 2.988 1.286.112.076.256.1.387.063.973-.27 2.058-.416 3.135-.421 1.08.005 2.166.15 3.14.421.131.037.273.013.386-.063 1.635-1.11 2.6-1.275 2.984-1.288z" /></svg></a>
                                                    </div>
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic NextTopic Print ExpandAll CollapseAll;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img src="../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="js-anchorer main-content">
                                                    <h1>Migration Guide - Product Option</h1>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Upgrading from version 6.* to 8.0.0</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p class="info"> In order to dismantle the Horizontal Barrier and enable partial module updates on projects, Technical Release took place. Public API of source and target major versions are equal. No migration efforts are required. Please <a href="https://support.spryker.com/hc/en-us">contact us</a> if you have any questions.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><div class="drop-anchor">Upgrading from Version 5.* to Version 6.*</div></a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <ol>
                                                                <li value="1">Update <var>spryker/product-option</var> to at least version 6.0.0.</li>
                                                                <li value="2">Install/Update <var>spryker/currency</var> to at least version 3.0.0. You can find additional information to currency module upgrade: <a href="mg-currency.htm">here</a>.</li>
                                                                <li value="3">Install/Update <var>spryker/price</var> to at least version 5.0.0.</li>
                                                                <li value="4">Update <var>spryker/product-option-cart-connector</var> to at least version 5.0.0 (if you have this module already installed). You can find additional information to product option cart connector module upgrade: <a href="mg-product-option-cart-connector.htm">here</a>.</li>
                                                                <li value="5">Install the new database tables by running <var>vendor/bin/console propel:diff</var>. Propel should generate a migration file with the changes.</li>
                                                                <li value="6">Run <var>vendor/bin/console propel:migrate</var> to apply the database changes.</li>
                                                                <li value="7">Generate ORM models by running <var>vendor/bin/console propel:model:build</var>.
                <p>This command will generate some new classes in your project under <var>\Orm\Zed\ProductOption\Persistence</var> namespace. It is important to make sure that they extend the base classes from the Spryker core, e.g.:</p><ul><li value="1"><var>\Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice</var> extends <var>\Spryker\Zed\ProductOption\Persistence\Propel\AbstractSpyProductOptionValuePrice</var></li><li value="2"><var>\Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePriceQuery</var> extends <var>\Spryker\Zed\ProductOption\Persistence\Propel\AbstractSpyProductOptionValuePriceQuery</var></li></ul></li>
                                                                <li value="8">Run <var>vendor/bin/console transfer:generate</var> to generate the new transfer objects.</li>
                                                                <li value="9">Make sure the new Zed user interface assets are built by running <var>npm run zed</var> (or antelope build Zed for older versions).</li>
                                                                <li value="10">Register <var>MoneyCollectionFormTypePlugin</var> in product option dependency provider to support multi-currency price configuration in Zed Admin UI.
             </li>
            Example of plugin registration:<pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\ProductOption;

use Spryker\Zed\Kernel\Container;
use Spryker\Zed\Money\Communication\Plugin\Form\MoneyCollectionFormTypePlugin;
use Spryker\Zed\ProductOption\ProductOptionDependencyProvider as SprykerProductOptionDependencyProvider;

class ProductOptionDependencyProvider extends SprykerProductOptionDependencyProvider
{
    /**
     * @param \Spryker\Zed\Kernel\Container $container
     *
     * @return \Spryker\Zed\Kernel\Communication\Form\FormTypeInterface
     */
    protected function createMoneyCollectionFormTypePlugin(Container $container)
    {
        return new MoneyCollectionFormTypePlugin();
    }
}
                                </code></pre><li value="11">
                Migrate prices from <var>spy_product_option_value.price</var> field to <var>spy_product_option_value_price</var> table.
                Each <var>spy_product_option_value</var> row must have at least 1 <var>spy_product_option_value_price</var> row connected.
                A <var>ProductOptionValue</var> entity can have multiple <var>ProductOptionValuePrices</var> connected.
                You can define different gross/net price per currency per store by populating the <var>fk_currency</var> and <var>fk_store</var> fields accordingly.
                When either <var>gross_price</var> or <var>net_price</var> database field is left as <var>null</var>, that option will not be available for customers in that exact currency, store, price mode trio.
                If you set a price field as <var>0</var>, the option is available for customers and it means it is free of charge.
                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example of migration</a></span><div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
/**
 * Copyright © 2016-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */

namespace Spryker\Zed\ProductOption\Communication\Console;

use Orm\Zed\Product\Persistence\SpyProductAbstractQuery;
use Orm\Zed\ProductOption\Persistence\Base\SpyProductOptionValue;
use Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice;
use Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePriceQuery;
use Orm\Zed\ProductOption\Persistence\SpyProductOptionValueQuery;
use Spryker\Zed\Kernel\Communication\Console\Console;
use Spryker\Zed\ProductOption\ProductOptionConfig;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Question\ConfirmationQuestion;

/**
 * @method \Spryker\Zed\ProductOption\Communication\ProductOptionCommunicationFactory getFactory()
 */
class MigrateProductOptionValuePricesConsole extends Console
{
    const COMMAND_NAME = 'product-option:price:migrate';
    const COMMAND_DESCRIPTION = 'Console command to migrate product option value prices to multi currency implementation.';

    /**
     * @var int[] Keys are currency iso codes, values are currency ids.
     */
    protected static $idCurrencyCache = [];

    /**
     * @return void
     */
    protected function configure()
    {
        $this-&gt;setName(static::COMMAND_NAME);
        $this-&gt;setDescription(static::COMMAND_DESCRIPTION);

        parent::configure();
    }

    /**
     * @param \Symfony\Component\Console\Input\InputInterface $input
     * @param \Symfony\Component\Console\Output\OutputInterface $output
     *
     * @return void
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $storeTransferCollection = $this-&gt;getFactory()-&gt;getStoreFacade()-&gt;getAllStores();
        $productOptionCollection = SpyProductOptionValueQuery::create()-&gt;find();

        if (count($productOptionCollection) === 0) {
            $output-&gt;writeln('There are no product option values to migrate.');
            return;
        }
        if (count($storeTransferCollection) === 0) {
            $output-&gt;writeln('There are no stores set up to migrate.');
            return;
        }

        $question = new ConfirmationQuestion(
            sprintf('Migrate %s product option values? (y|n)', count($productOptionCollection)),
            false
        );

        if (!$this-&gt;getQuestionHelper()-&gt;ask($input, $output, $question)) {
            $output-&gt;writeln('Aborted.');
            return;
        }

        $storeCurrencies = $this-&gt;getStoreCurrencies($storeTransferCollection);
        $defaultIdStore = $this-&gt;getDefaultIdStore();
        $defaultIdCurrency = $this-&gt;getDefaultIdCurrency();

        foreach ($productOptionCollection as $productOptionEntity) {
            $this-&gt;processProductOption($productOptionEntity, $storeCurrencies, $defaultIdStore, $defaultIdCurrency);

            $this-&gt;touchRelatedProductAbstracts($productOptionEntity-&gt;getIdProductOptionValue());
            $output-&gt;writeln(sprintf('Product option value %d is migrated.', $productOptionEntity-&gt;getIdProductOptionValue()));
        }

        $output-&gt;writeln('done.');
    }

    /**
     * @param \Orm\Zed\ProductOption\Persistence\Base\SpyProductOptionValue $productOptionValueEntity
     * @param array $storeCurrencies
     * @param int $defaultIdStore
     * @param int $defaultIdCurrency
     *
     * @return void
     */
    protected function processProductOption(SpyProductOptionValue $productOptionValueEntity, array $storeCurrencies, $defaultIdStore, $defaultIdCurrency)
    {
        foreach ($storeCurrencies as list($idStore, $idCurrency)) {
            $productOptionValuePriceEntity = SpyProductOptionValuePriceQuery::create()
                -&gt;filterByFkProductOptionValue($productOptionValueEntity-&gt;getIdProductOptionValue())
                -&gt;filterByFkStore($idStore)
                -&gt;filterByFkCurrency($idCurrency)
                -&gt;findOneOrCreate();

            $isDefaultStoreCurrency = $idStore === $defaultIdStore &amp;&amp; $idCurrency === $defaultIdCurrency;

            $this-&gt;setNetPrice($productOptionValuePriceEntity);
            $this-&gt;setGrossPrice($productOptionValuePriceEntity, $productOptionValueEntity, $isDefaultStoreCurrency);

            $productOptionValuePriceEntity-&gt;save();
        }
    }

    /**
     * @param \Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice $productOptionValuePriceEntity
     *
     * @return void
     */
    protected function setNetPrice(SpyProductOptionValuePrice $productOptionValuePriceEntity)
    {
        if ($productOptionValuePriceEntity-&gt;getNetPrice() !== null) {
            return;
        }
    }

    /**
     * @param \Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice $productOptionValuePriceEntity
     * @param \Orm\Zed\ProductOption\Persistence\Base\SpyProductOptionValue $productOptionValue
     * @param bool $isDefaultStoreCurrency
     *
     * @return void
     */
    protected function setGrossPrice(SpyProductOptionValuePrice $productOptionValuePriceEntity, SpyProductOptionValue $productOptionValue, $isDefaultStoreCurrency)
    {
        if ($productOptionValuePriceEntity-&gt;getGrossPrice() !== null) {
            return;
        }

        $productOptionValuePriceEntity-&gt;setGrossPrice($isDefaultStoreCurrency ? (int)$productOptionValue-&gt;getPrice() : null);
    }

    /**
     * @param int $idProductOptionValue
     *
     * @return void
     */
    protected function touchRelatedProductAbstracts($idProductOptionValue)
    {
        $productAbstractCollection = SpyProductAbstractQuery::create()
            -&gt;joinSpyProductAbstractProductOptionGroup()
            -&gt;useSpyProductAbstractProductOptionGroupQuery()
                -&gt;joinSpyProductOptionGroup()
                -&gt;useSpyProductOptionGroupQuery()
                    -&gt;joinSpyProductOptionValue()
                    -&gt;useSpyProductOptionValueQuery()
                        -&gt;filterByIdProductOptionValue($idProductOptionValue)
                    -&gt;endUse()
                -&gt;endUse()
            -&gt;endUse()
            -&gt;find();

        foreach ($productAbstractCollection as $productAbstractEntity) {
            $this-&gt;getFactory()
                -&gt;getTouchFacade()
                -&gt;touchActive(
                    ProductOptionConfig::RESOURCE_TYPE_PRODUCT_OPTION,
                    $productAbstractEntity-&gt;getIdProductAbstract()
                );
        }
    }

    /**
     * Returns with a list of available store-currency id pairs.
     *
     * Example:
     *   Store 1 has currency 5, 6
     *   Store 2 has currency 10
     *   Result: [
     *              [1, 5],
     *              [1, 6],
     *              [2, 10]
     *           ]
     *
     * @param \Generated\Shared\Transfer\StoreTransfer[] $storeTransferCollection
     *
     * @return array
     */
    protected function getStoreCurrencies(array $storeTransferCollection)
    {
        $currencies = [];

        foreach ($storeTransferCollection as $storeTransfer) {
            foreach ($storeTransfer-&gt;getAvailableCurrencyIsoCodes() as $isoCode) {
                $currencies[] = [$storeTransfer-&gt;getIdStore(), $this-&gt;getIdCurrencyByIsoCode($isoCode)];
            }
        }

        return $currencies;
    }

    /**
     * @param string $currencyIsoCode
     *
     * @return int
     */
    protected function getIdCurrencyByIsoCode($currencyIsoCode)
    {
        if (!isset(static::$idCurrencyCache[$currencyIsoCode])) {
            static::$idCurrencyCache[$currencyIsoCode] = $this-&gt;getFactory()
                -&gt;getCurrencyFacade()
                -&gt;fromIsoCode($currencyIsoCode)
                -&gt;getIdCurrency();
        }

        return static::$idCurrencyCache[$currencyIsoCode];
    }

    /**
     * @return int
     */
    protected function getDefaultIdCurrency()
    {
        return $this-&gt;getIdCurrencyByIsoCode(
            $this-&gt;getFactory()
                -&gt;getStoreFacade()
                -&gt;getCurrentStore()
                -&gt;getDefaultCurrencyIsoCode()
        );
    }

    /**
     * @return int
     */
    protected function getDefaultIdStore()
    {
        return $this-&gt;getFactory()-&gt;getStoreFacade()-&gt;getCurrentStore()-&gt;getIdStore();
    }

    /**
     * @return \Symfony\Component\Console\Helper\QuestionHelper
     */
    protected function getQuestionHelper()
    {
        return $this-&gt;getHelper('question');
    }
}
                                </code></pre></div></div></li><li value="12">The product option collector has to be amended to support multi-currency prices on product option values. The Storage has to save all product option value prices within a given store using the new Storage data structure:
                <pre><code class="language-PHP line-numbers">
                {
                    "idProductOptionValue": 1,
                    "sku": "OP_1_year_warranty",
                    "prices": {
                        "CHF": {
                            "GROSS_MODE": {
                                "amount": 600
                            },
                            "NET_MODE": {
                                "amount": null
                            }
                        },
                        "EUR": {
                            "GROSS_MODE": {
                                "amount": 800
                            },
                            "NET_MODE": {
                                "amount": 900
                            }
                        }
                    },
                    "value": "product.option.warranty_1"
                },
                                </code></pre>
                A new API call was added to get the store specific prices back: <var>ProductOptionFacadeInterface::getProductOptionValueStorePrices()</var>.
                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example of collector upgrade</a></span><div class="MCDropDownBody dropDownBody"><pre><code class="language-PHP line-numbers">&lt;?php
namespace Pyz\Zed\Collector\Business\Storage;

use ArrayObject;
use Generated\Shared\Transfer\MoneyValueTransfer;
use Generated\Shared\Transfer\ProductOptionValueStorePricesRequestTransfer;

class ProductOptionCollector extends Spryker\Zed\Collector\Business\Collector\Storage\AbstractStoragePdoCollector
{
    /**
     * @var \Spryker\Zed\ProductOption\Business\ProductOptionFacadeInterface
     */
    protected $productOptionFacade;

    ...

    /**
     * @param \Orm\Zed\ProductOption\Persistence\SpyProductOptionGroup $productOptionGroupEntity
     *
     * @return array
     */
    protected function getOptionGroupValues(SpyProductOptionGroup $productOptionGroupEntity)
    {
        $optionValues = [];
        foreach ($productOptionGroupEntity-&gt;getSpyProductOptionValues() as $optionValueEntity) {
            $optionValues[] = [
                StorageProductOptionValueTransfer::ID_PRODUCT_OPTION_VALUE =&gt; $optionValueEntity-&gt;getIdProductOptionValue(),
                StorageProductOptionValueTransfer::SKU =&gt; $optionValueEntity-&gt;getSku(),
                StorageProductOptionValueTransfer::PRICES =&gt; $this-&gt;getPrices($optionValueEntity-&gt;getProductOptionValuePrices()),
                StorageProductOptionValueTransfer::VALUE =&gt; $optionValueEntity-&gt;getValue(),
            ];
        }

        return $optionValues;
    }

    /**
     * @param \Propel\Runtime\Collection\ObjectCollection|\Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice[] $objectCollection
     *
     * @return array
     */
    protected function getPrices(ObjectCollection $objectCollection)
    {
        $moneyValueCollection = $this-&gt;transformPriceEntityCollectionToMoneyValueTransferCollection($objectCollection);
        $priceResponse = $this-&gt;productOptionFacade-&gt;getProductOptionValueStorePrices(
            (new ProductOptionValueStorePricesRequestTransfer())-&gt;setPrices($moneyValueCollection)
        );

        return $priceResponse-&gt;getStorePrices();
    }

    /**
     * @param \Propel\Runtime\Collection\ObjectCollection|\Orm\Zed\ProductOption\Persistence\SpyProductOptionValuePrice[] $priceEntityCollection
     *
     * @return \ArrayObject|\Generated\Shared\Transfer\MoneyValueTransfer[]
     */
    protected function transformPriceEntityCollectionToMoneyValueTransferCollection(ObjectCollection $priceEntityCollection)
    {
        $moneyValueCollection = new ArrayObject();
        foreach ($priceEntityCollection as $productOptionValuePriceEntity) {
            $moneyValueCollection-&gt;append(
                (new MoneyValueTransfer())
                    -&gt;fromArray($productOptionValuePriceEntity-&gt;toArray(), true)
                    -&gt;setNetAmount($productOptionValuePriceEntity-&gt;getNetPrice())
                    -&gt;setGrossAmount($productOptionValuePriceEntity-&gt;getGrossPrice())
            );
        }

        return $moneyValueCollection;
    }
}
                                </code></pre></div></div></li><li value="13">
                Transfer objects were amended to support multi-currency price storage. Check your customized codes for the following fields to apply the new behavior:
                <ul><li value="1"><var>ProductOptionValue</var> transfer object's price field is replaced by prices field which contains a collection of <var>MoneyValue</var> transfer objects to support multi-currency behaviour. This field can not be used directly anymore to display a price to customer in Yves.</li><li value="2"><var>StorageProductOptionValue</var> transfer object contains a "prices" field which contains prices within a specific store for all currencies and price modes.</li><li value="3"><var>StorageProductOptionValue</var> transfer object's price field now represents a price for a given store, currency, and price mode trio.</li></ul></li><li value="14">
                The following public API elements were changed, check your custom calls to them:
                <ul><li value="1"><var>ProductOptionFacadeInterface::getProductOptionGroupById()</var> populates all multi-currency prices instead of the singular price.</li><li value="2"><var>ProductOptionFacadeInterface::getProductOptionValueById()</var> sets both net and gross prices for the current store and current currency.</li><li value="3"><var>ProductOptionFacadeInterface::saveProductOptionValue()</var> saves multi-currency prices instead of a single price and expects new data structure accordingly.</li><li value="4"><var>ProductOptionFacadeInterface::saveProductOptionGroup()</var> saves multi-currency prices instead of a single price and expects new data structure accordingly.</li><li value="5"><var>ProductOptionClientInterface::getProductOptions()</var> uses the modified <var>StorageProductOptionValue</var> transfer, selects a multi-currency price.</li><li value="6"><var>ProductOptionQueryContainer::queryProductOptionGroupWithValues()</var> is removed without replacement.</li><li value="7"><var>ProductOptionQueryContainerInterface::queryProductsAbstractBySearchTerm()</var> is removed from public API and now it's a protected method.</li><li value="8"><var>ProductOptionToTaxInterface::getTaxAmountFromGrossPrice()</var> is removed.</li><li value="9"><var>ProductOptionToMoneyInterface::convertIntegerToDecimal()</var> is removed.</li><li value="10"><var>ProductOptionToMoneyInterface::fromFloat()</var> is removed.</li><li value="11"><var>ProductOptionToMoneyInterface::fromString()</var> is removed.</li><li value="12"><var>ProductOptionFacadeInterface::toggleOptionActive()</var> expects 1st argument to be int.</li><li value="13"><var>ProductOptionCommunicationFactory::createProductOptionGroup()</var> does not accept null argument anymore.</li><li value="14"><var>ProductOptionDependencyProvider</var>'s constants are refactored.</li><li value="15">Client dependency interfaces are renamed (postfixed with "Client").</li><li value="16">Zed dependency interfaces are renamed (postfixed with the corresponding layer name).</li></ul></li><li value="15">
                Some additional changes that might have effect on you if you have customized any of these classes directly or their factory method:
                <ul><li value="1"><var>AbstractProductOptionSaver</var></li><li value="2"><var>ProductOptionGroupReader</var></li><li value="3"><var>ProductOptionListTable</var></li><li value="4"><var>ProductOptionStorage</var></li><li value="5"><var>ProductOptionTaxRateCalculator</var></li><li value="6"><var>ProductOptionValueForm</var></li><li value="7"><var>ProductOptionValueReader</var></li><li value="8"><var>ProductOptionValueSaver</var></li></ul></li><li value="16">
                Verify your product option value prices on Zed Admin UI Product Options page.
            </li></ol>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /><div class="drop-anchor">Upgrading From version 4.* To Version 5.*</div></a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>In version 5 Product Options were updated to work with the new calculator concept. Therefore, the SalesAggregator plugin was moved to the SalesAggregator module <var>SubtotalWithProductOptionsAggregatorPlugin</var>.</p>
                                                            <p>The sales option database tables received new columns for storing calculated values.</p>
                                                            <p>To learn how to migrate to new structure see, <a href="mg-calculation.htm#Upgradin" class="MCXref xref">Migration Guide - Calculation    </a></p>
                                                        </div>
                                                    </div>
                                                    <p>&#160;</p>
                                                    <p><b>See also:</b>
                                                    </p>
                                                    <ul>
                                                        <li value="1"><a href="mg-currency.htm">Learn how to migrate Currency</a>
                                                        </li>
                                                        <li value="2"><a href="mg-product-option-cart-connector.htm">Learn how to migrate Product Option Cart Connector</a>
                                                        </li>
                                                    </ul>
                                                    <p>&#160;</p>
                                                    <p><i>Last review date: Nov. 10th, 2017 </i>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div><a class="scroll-top js-scroll-top" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill="#FFF" fill-rule="nonzero" d="M11.82 5.22a.54.54 0 0 1 0 .806.636.636 0 0 1-.852 0L6.607 1.937v13.49a.587.587 0 0 1-.602.573c-.336 0-.611-.258-.611-.573V1.937L1.04 6.026a.647.647 0 0 1-.86 0 .54.54 0 0 1 0-.807L5.573.163a.636.636 0 0 1 .852 0L11.82 5.22z" /></svg></a>
                                <script>/* <![CDATA[ */
			function createGithubUrl() {
			var GITHUB_CONTENT_PATH = '/blob/master/public';
			var link = document.querySelector('.js-widget-github-link');
			var href =
			link.getAttribute('href')
			+ GITHUB_CONTENT_PATH
			+ window.location.pathname;
			link.setAttribute('href', href);
			}
			createGithubUrl();
		/* ]]> */</script>
                                <script>/* <![CDATA[ */
			requirejs.config({
				appDir: '',
				paths: {
					'clipboard': ['https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min']
					
				}
			});
			require(['clipboard'], function(Clipboard) {
				console.log(Clipboard);
				window.Clipboard = Clipboard;
			});
		/* ]]> */</script>
                                <script src="../resources/scripts/perfect-scrollbar.js">
                                </script>
                                <script src="../resources/scripts/imagemapster.js">
                                </script>
                                <script src="../resources/scripts/script.js">
                                </script>
                                <script src="../resources/scripts/prism.js">
                                </script>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>
